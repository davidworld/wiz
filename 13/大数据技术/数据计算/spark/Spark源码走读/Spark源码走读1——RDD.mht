From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?U3BhcmvUtMLr19+2wTGhqqGqUkRE?=
Date: Date: Fri, 23 Jul 2021 05:54:37 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001273404.038"

This is a multi-part message in MIME format.

------=_Next_Part_0001273404.038
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000424468.588"


------=_Next_Part_0000424468.588
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000424468.588
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A=0A=0A=
=0A=0A=0A=0A<title>Spark=D4=B4=C2=EB=D7=DF=B6=C11=A1=AA=A1=AARDD<=
/title>=0A    =0A<style name=3D"wiz_style_for_load"></style><styl=
e id=3D"wiz_custom_css">html, .wiz-editor-body {font-size: 12pt;}=
.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB', '=E5=
=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91', 'Microsoft YaHei UI', SimSun,=
 SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;paddin=
g: 20px 16px;padding: 1.25rem 1rem;}.wiz-editor-body h1,.wiz-edit=
or-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-editor-bo=
dy h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem 0 0.=
625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {font-si=
ze:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18pt;fo=
nt-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-size:1.2=
5rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;}.wiz=
-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-body=20=
h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}=
.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,.wiz-=
editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {margin:8p=
x 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz-edit=
or-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor-body=
 .CodeMirror pre {margin:0;}.wiz-editor-body ul,.wiz-editor-body=20=
ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol.wiz-=
list-level1 > li {list-style-type:decimal;}.wiz-editor-body ol.wi=
z-list-level2 > li {list-style-type:lower-latin;}.wiz-editor-body=
 ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-edito=
r-body blockquote {padding: 0 12px;}.wiz-editor-body blockquote >=
 :first-child {margin-top:0;}.wiz-editor-body blockquote > :last-=
child {margin-bottom:0;}.wiz-editor-body img {border:0;max-width:=
100%;height:auto !important;margin:2px 0;}.wiz-editor-body table=20=
{border-collapse:collapse;border:1px solid #bbbbbb;}.wiz-editor-b=
ody td,.wiz-editor-body th {padding:4px 8px;border-collapse:colla=
pse;border:1px solid #bbbbbb;min-height:28px;word-break:break-wor=
d;box-sizing: border-box;}.wiz-hide {display:none !important;}</s=
tyle></head>=0A=0A<body class=3D"wiz-editor-body" spellcheck=3D"f=
alse" ><div class=3D"article-title-box" style=3D"padding:0px;marg=
in:0px 0px 16px;color:rgb(51, 51, 51);font-size:0.875rem;font-sty=
le:normal;font-weight:normal;text-align:start;text-indent:0px"><h=
1 class=3D"title-article" style=3D"padding:0px;margin:0px;font-si=
ze:1.5rem;">Spark=D4=B4=C2=EB=D7=DF=B6=C11=A1=AA=A1=AARDD</h1><di=
v class=3D"article-bar-top d-flex" style=3D"padding:0px;margin:0p=
x;border-bottom-width:1px;border-bottom-style:solid;border-bottom=
-color:rgb(227, 227, 227);font-style:normal;font-weight:normal;te=
xt-align:start;text-indent:0px;color:rgb(133, 133, 133)"><span cl=
ass=3D"time" style=3D"margin-right:14px;">2015=C4=EA01=D4=C231=C8=
=D5 20:04:08</span></div><div class=3D"float-right" style=3D"padd=
ing:0px;margin:0px 0px 0px auto;border-bottom-width:1px;border-bo=
ttom-style:solid;border-bottom-color:rgb(227, 227, 227);font-styl=
e:normal;font-weight:normal;text-align:start;text-indent:0px;colo=
r:rgb(133, 133, 133)"><span class=3D"read-count" style=3D"margin-=
right:14px;">=D4=C4=B6=C1=CA=FD=A3=BA10467</span></div><p style=3D=
"padding-top:16px;font-style:normal;font-weight:400;text-align:ju=
stify;text-indent:0px;padding:0px;margin:0px 0px 16px;font-size:1=
rem;color:rgb(79, 79, 79)">RDD=C8=AB=B3=C6Resilient Distributed D=
ataSets=A3=AC=B5=AF=D0=D4=B5=C4=B7=D6=B2=BC=CA=BD=CA=FD=BE=DD=BC=AF=
=A1=A3=CA=C7Spark=B5=C4=BA=CB=D0=C4=C4=DA=C8=DD=A1=A3</p><p style=
=3D"padding-top:16px;font-style:normal;font-weight:400;text-align=
:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;font-siz=
e:1rem;color:rgb(79, 79, 79)">RDD=CA=C7=D6=BB=B6=C1=B5=C4=A3=AC=B2=
=BB=BF=C9=B1=E4=B5=C4=CA=FD=BE=DD=BC=AF=A3=AC=D2=B2=D3=B5=D3=D0=BA=
=DC=BA=C3=B5=C4=C8=DD=B4=ED=BB=FA=D6=C6=A1=A3=CB=FB=D3=D05=B8=F6=D6=
=F7=D2=AA=CC=D8=D0=D4</p><p style=3D"padding-top:16px;font-style:=
normal;font-weight:400;text-align:justify;text-indent:0px;padding=
:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">&n=
bsp;&nbsp; -A list of partitions =B7=D6=C6=AC=C1=D0=B1=ED=A3=AC=CA=
=FD=BE=DD=C4=DC=CE=AA=C7=D0=B7=D6=B2=C5=BA=C3=D7=F6=B2=A2=D0=D0=BC=
=C6=CB=E3</p><p style=3D"padding-top:16px;font-style:normal;font-=
weight:400;text-align:justify;text-indent:0px;padding:0px;margin:=
0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">&nbsp;&nbsp; -=
A function for computing each split =D2=BB=B8=F6=BA=AF=CA=FD=BC=C6=
=CB=E3=D2=BB=B8=F6=B7=D6=C6=AC</p><p style=3D"padding-top:16px;fo=
nt-style:normal;font-weight:400;text-align:justify;text-indent:0p=
x;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79=
, 79)">&nbsp;&nbsp; -A list of dependencies on other RDDs =B6=D4=C6=
=E4=CB=FBRDD=B5=C4=D2=C0=C0=B5=C1=D0=B1=ED</p><p style=3D"padding=
-top:16px;font-style:normal;font-weight:400;text-align:justify;te=
xt-indent:0px;padding:0px;margin:0px 0px 16px;font-size:1rem;colo=
r:rgb(79, 79, 79)">&nbsp;&nbsp; -Optionally, a Partitioner for ke=
y-value RDDs (e.g. to say that the RDD is hash-partitioned)</p><p=
 style=3D"padding-top:16px;font-style:normal;font-weight:400;text=
-align:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;fo=
nt-size:1rem;color:rgb(79, 79, 79)">&nbsp;&nbsp;&nbsp;&nbsp;RDD&n=
bsp; =BF=C9=D1=A1=B5=C4=A3=ACkey-value=D0=CD=B5=C4RDD=A3=AC=B8=F9=
=BE=DDhash=C0=B4=B7=D6=C7=F8</p><p style=3D"padding-top:16px;font=
-style:normal;font-weight:400;text-align:justify;text-indent:0px;=
padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79,=20=
79)">&nbsp;&nbsp; -Optionally, a list of preferred locations to c=
ompute each split on (e.g. blocklocations for</p><p style=3D"padd=
ing-top:16px;font-style:normal;font-weight:400;text-align:justify=
;text-indent:0px;padding:0px;margin:0px 0px 16px;font-size:1rem;c=
olor:rgb(79, 79, 79)">&nbsp;&nbsp;&nbsp;&nbsp;an HDFS file) =BF=C9=
=D1=A1=B5=C4=A3=AC=C3=BF=D2=BB=B8=F6=B7=D6=C6=AC=B5=C4=D7=EE=BC=D1=
=BC=C6=CB=E3=CE=BB=D6=C3</p><p style=3D"padding-top:16px;font-sty=
le:normal;font-weight:400;text-align:justify;text-indent:0px;padd=
ing:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)"=
>&nbsp;RDD=CA=C7Spark=CB=F9=D3=D0=D7=E9=BC=FE=D4=CB=D0=D0=B5=C4=B5=
=D7=B2=E3=CF=B5=CD=B3=A3=ACRDD=CA=C7=D2=BB=B8=F6=C8=DD=B4=ED=B5=C4=
=A3=AC=B2=A2=D0=D0=B5=C4=CA=FD=BE=DD=BD=E1=B9=B9=A3=AC=CB=FC=CC=E1=
=B9=A9=C1=CB=B7=E1=B8=BB=B5=C4=CA=FD=BE=DD=B2=D9=D7=F7=BA=CDAPI=BD=
=D3=BF=DA</p><p style=3D"padding-top:16px;font-style:normal;font-=
weight:400;text-align:justify;text-indent:0px;padding:0px;margin:=
0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">&nbsp;Spark=D6=
=D0=B5=C4RDD API</p><p style=3D"padding-top:16px;font-style:norma=
l;font-weight:400;text-align:justify;text-indent:0px;padding:0px;=
margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)"><img sr=
c=3D"" alt=3D"" style=3D"margin:0px;"><img src=3D"" alt=3D"" styl=
e=3D"margin:0px;"></p><p style=3D"padding-top:16px;font-style:nor=
mal;font-weight:400;text-align:justify;text-indent:0px;padding:0p=
x;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">=D2=BB=
=B8=F6RDD=BF=C9=D2=D4=B0=FC=BA=AC=B6=E0=B8=F6=B7=D6=C7=F8=A1=A3=C3=
=BF=B8=F6=B7=D6=C7=F8=B6=BC=CA=C7=D2=BB=B8=F6dataset=C6=AC=B6=CE=A1=
=A3RDD=D6=AE=BC=E4=BF=C9=D2=D4=CF=E0=BB=A5=D2=C0=C0=B5</p><p styl=
e=3D"padding-top:16px;font-style:normal;font-weight:400;text-alig=
n:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;font-si=
ze:1rem;color:rgb(79, 79, 79)">=D5=AD=D2=C0=C0=B5=A3=BA=D2=BB=D2=BB=
=B6=D4=D3=A6=B5=C4=B9=D8=CF=B5=A3=AC=D2=BB=B8=F6RDD=B7=D6=C7=F8=D6=
=BB=C4=DC=B1=BB=D2=BB=B8=F6=D7=D3RDD=B5=C4=B7=D6=C7=F8=CA=B9=D3=C3=
=B5=C4=B9=D8=CF=B5</p><p style=3D"padding-top:16px;font-style:nor=
mal;font-weight:400;text-align:justify;text-indent:0px;padding:0p=
x;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">=BF=ED=
=D2=C0=C0=B5=A3=BA=D2=BB=B6=E0=B6=D4=D3=A6=B9=D8=CF=B5=A3=AC=C8=F4=
=B6=E0=B8=F6=D7=D3RDD=B7=D6=C7=F8=B6=BC=D2=C0=C0=B5=CD=AC=D2=BB=B8=
=F6=B8=B8RDD=B7=D6=C7=F8</p><p style=3D"padding-top:16px;font-sty=
le:normal;font-weight:400;text-align:justify;text-indent:0px;padd=
ing:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)"=
>=C8=E7=CF=C2RDD=CD=BC=C0=C0</p><div class=3D"htmledit_views" sty=
le=3D"padding-top:16px;font-style:normal;font-weight:normal;text-=
align:start;text-indent:0px;padding:0px;margin:0px"><img src=3D""=
 alt=3D""><br><p style=3D"padding:0px;margin:0px 0px 16px;font-si=
ze:1rem;color:rgb(79, 79, 79);font-weight:400;text-align:justify;=
">=D4=DA=D4=B4=C2=EBpackageorg.apache.spark.rdd.RDD=D6=D0=D3=D0=D2=
=BB=D0=A9=B1=C8=BD=CF=D6=D0=B5=C4=B7=BD=B7=A8=A3=BA</p><p style=3D=
"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79,=
 79);font-weight:400;text-align:justify;">1=A3=A9</p><div class=3D=
"wiz-table-container" style=3D"position: relative; padding: 0px;"=
><div class=3D"wiz-table-body"><table border=3D"1" style=3D"borde=
r-collapse:collapse;border-spacing:0px;display:table;width:852px;=
text-align:left;margin-bottom:24px;"><tbody style=3D"border:0px;"=
><tr style=3D"border-width: 1px 0px 0px; border-top-style: solid;=
 border-top-color: rgb(221, 221, 221);"><td valign=3D"top" style=3D=
"padding: 8px; margin: 0px; font-weight: normal; text-align: left=
; border: 1px solid rgb(221, 221, 221); color: rgb(79, 79, 79);">=
<p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-ali=
gn: left;">&nbsp; /**</p><p style=3D"padding: 0px; margin: 0px; f=
ont-weight: 400; text-align: left;">&nbsp;&nbsp; * Implemented by=
 subclasses to return the set of partitions in this RDD. This met=
hod will only</p><p style=3D"padding: 0px; margin: 0px; font-weig=
ht: 400; text-align: left;">&nbsp;&nbsp; * be called once, so it=20=
is safe to implement a time-consuming computation in it.</p><p st=
yle=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: l=
eft;">&nbsp;&nbsp; * =D7=D3=C0=E0=CA=B5=CF=D6=B7=B5=BB=D8=D2=BB=D7=
=E9=B7=D6=C7=F8=D4=DA=D5=E2=B8=F6RDD=A1=A3=D5=E2=D6=D6=B7=BD=B7=A8=
=BD=AB=D6=BB=B1=BB=B5=F7=D3=C3=D2=BB=B4=CE=A3=AC=D2=F2=B4=CB=CB=FC=
=CA=C7=B0=B2=C8=AB=B5=C4,=CB=FC=C0=B4=CA=B5=CF=D6=D2=BB=B8=F6=BA=C4=
=CA=B1=B5=C4=BC=C6=CB=E3=A1=A3</p><p style=3D"padding: 0px; margi=
n: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; */</p><=
p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-alig=
n: left;">&nbsp; protected def getPartitions: Array[Partition]</p=
></td></tr></tbody></table></div></div><p style=3D"padding:0px;ma=
rgin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-weigh=
t:400;text-align:justify;">=D5=E2=B8=F6=B7=BD=B7=A8=B7=B5=BB=D8=B6=
=E0=B8=F6partition=A3=AC=B4=E6=B7=C5=D4=DA=D2=BB=B8=F6=CA=FD=D7=D6=
=D6=D0</p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1=
rem;color:rgb(79, 79, 79);font-weight:400;text-align:justify;">&n=
bsp;</p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1re=
m;color:rgb(79, 79, 79);font-weight:400;text-align:justify;">2=A3=
=A9</p><div class=3D"wiz-table-container" style=3D"position: rela=
tive; padding: 0px;"><div class=3D"wiz-table-body"><table border=3D=
"1" style=3D"border-collapse:collapse;border-spacing:0px;display:=
table;width:852px;text-align:left;margin-bottom:24px;"><tbody sty=
le=3D"border:0px;"><tr style=3D"border-width: 1px 0px 0px; border=
-top-style: solid; border-top-color: rgb(221, 221, 221);"><td val=
ign=3D"top" style=3D"padding: 8px; margin: 0px; font-weight: norm=
al; text-align: left; border: 1px solid rgb(221, 221, 221); color=
: rgb(79, 79, 79);"><p style=3D"padding: 0px; margin: 0px; font-w=
eight: 400; text-align: left;">&nbsp; /**</p><p style=3D"padding:=
 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp;&nb=
sp; * Implemented by subclasses to return how this RDD depends on=
 parent RDDs. This method will only</p><p style=3D"padding: 0px;=20=
margin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; *=20=
be called once, so it is safe to implement a time-consuming compu=
tation in it.</p><p style=3D"padding: 0px; margin: 0px; font-weig=
ht: 400; text-align: left;">&nbsp;&nbsp; * =D7=D3=C0=E0=CA=B5=CF=D6=
=B7=B5=BB=D8=D5=E2=B8=F6RDD=C8=E7=BA=CE=C8=A1=BE=F6=D3=DA=B8=B8RD=
DS=A1=A3=D5=E2=D6=D6=B7=BD=B7=A8=BD=AB=D6=BB=B1=BB=B5=F7=D3=C3=D2=
=BB=B4=CE=A3=AC=D2=F2=B4=CB=CB=FC=CA=C7=B0=B2=C8=AB=B5=C4=A3=AC=CB=
=FC=C0=B4=CA=B5=CF=D6=D2=BB=B8=F6=BA=C4=CA=B1=B5=C4=BC=C6=CB=E3=A1=
=A3</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; t=
ext-align: left;">&nbsp;&nbsp; *</p><p style=3D"padding: 0px; mar=
gin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; */</p=
><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-al=
ign: left;">&nbsp; protected def getDependencies: Seq[Dependency[=
_]] =3D deps</p></td></tr></tbody></table></div></div><p style=3D=
"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79,=
 79);font-weight:400;text-align:justify;">=CB=FC=B7=B5=BB=D8=D2=BB=
=B8=F6=D2=C0=C0=B5=B9=D8=CF=B5=B5=C4Seq=BC=AF=BA=CF</p><p style=3D=
"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79,=
 79);font-weight:400;text-align:justify;">&nbsp;</p><p style=3D"p=
adding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 7=
9);font-weight:400;text-align:justify;">3=A3=A9</p><div class=3D"=
wiz-table-container" style=3D"position: relative; padding: 0px;">=
<div class=3D"wiz-table-body"><table border=3D"1" style=3D"border=
-collapse:collapse;border-spacing:0px;display:table;width:852px;t=
ext-align:left;margin-bottom:24px;"><tbody style=3D"border:0px;">=
<tr style=3D"border-width: 1px 0px 0px; border-top-style: solid;=20=
border-top-color: rgb(221, 221, 221);"><td valign=3D"top" style=3D=
"padding: 8px; margin: 0px; font-weight: normal; text-align: left=
; border: 1px solid rgb(221, 221, 221); color: rgb(79, 79, 79);"=20=
class=3D""><p style=3D"padding: 0px; margin: 0px; font-weight: 40=
0; text-align: left;">&nbsp; /**</p><p style=3D"padding: 0px; mar=
gin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; * ::=20=
DeveloperApi ::</p><p style=3D"padding: 0px; margin: 0px; font-we=
ight: 400; text-align: left;">&nbsp;&nbsp; * Implemented by subcl=
asses to compute a given partition.</p><p style=3D"padding: 0px;=20=
margin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; *=20=
=D7=D3=C0=E0=CA=B5=CF=D6=B5=C4=BC=C6=CB=E3=D2=BB=B8=F6=B8=F8=B6=A8=
=B5=C4=B7=D6=C7=F8=A1=A3</p><p style=3D"padding: 0px; margin: 0px=
; font-weight: 400; text-align: left;">&nbsp;&nbsp; */</p><p styl=
e=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: lef=
t;">&nbsp; @DeveloperApi</p><p style=3D"padding: 0px; margin: 0px=
; font-weight: 400; text-align: left;">&nbsp; def compute(split:=20=
Partition, context: TaskContext): Iterator[T]</p></td></tr></tbod=
y></table></div></div><p style=3D"padding:0px;margin:0px 0px 16px=
;font-size:1rem;color:rgb(79, 79, 79);font-weight:400;text-align:=
justify;">=C3=BF=B8=F6RDD=B6=BC=D3=D0=D2=BB=B8=F6=B6=D4=D3=A6=B5=C4=
=BE=DF=CC=E5=BC=C6=CB=E3=BA=AF=CA=FD</p><p style=3D"padding:0px;m=
argin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-weig=
ht:400;text-align:justify;">&nbsp;</p><p style=3D"padding:0px;mar=
gin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-weight=
:400;text-align:justify;">4=A3=A9</p><div class=3D"wiz-table-cont=
ainer" style=3D"position: relative; padding: 0px;"><div class=3D"=
wiz-table-body"><table border=3D"1" style=3D"border-collapse:coll=
apse;border-spacing:0px;display:table;width:852px;text-align:left=
;margin-bottom:24px;"><tbody style=3D"border:0px;"><tr style=3D"b=
order-width: 1px 0px 0px; border-top-style: solid; border-top-col=
or: rgb(221, 221, 221);"><td valign=3D"top" style=3D"padding: 8px=
; margin: 0px; font-weight: normal; text-align: left; border: 1px=
 solid rgb(221, 221, 221); color: rgb(79, 79, 79);"><p style=3D"p=
adding: 0px; margin: 0px; font-weight: 400; text-align: left;">&n=
bsp; /**</p><p style=3D"padding: 0px; margin: 0px; font-weight: 4=
00; text-align: left;">&nbsp;&nbsp; * Optionally overridden by su=
bclasses to specify placement preferences.</p><p style=3D"padding=
: 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp;&n=
bsp; */</p><p style=3D"padding: 0px; margin: 0px; font-weight: 40=
0; text-align: left;">&nbsp; protected def getPreferredLocations(=
split: Partition): Seq[String] =3D Nil</p></td></tr></tbody></tab=
le></div></div><p style=3D"padding:0px;margin:0px 0px 16px;font-s=
ize:1rem;color:rgb(79, 79, 79);font-weight:400;text-align:justify=
;">=BB=F1=C8=A1partition=B5=C4=CA=D7=D1=A1=CE=BB=D6=C3=A3=AC=D5=E2=
=CA=C7=B7=D6=C7=F8=B2=DF=C2=D4=A1=A3</p><p style=3D"padding:0px;m=
argin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-weig=
ht:400;text-align:justify;">&nbsp;</p><h2 style=3D"padding:0px;ma=
rgin:8px 0px 16px;font-size:1.5rem;color:rgb(79, 79, 79);font-wei=
ght:700;">RDD Transformations and action</h2><p style=3D"padding:=
0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font=
-weight:400;text-align:justify;">&nbsp;</p><p style=3D"padding:0p=
x;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-w=
eight:400;text-align:justify;"><strong style=3D"font-weight:700;"=
>RDD =CA=FD=BE=DD=B2=D9=D7=F7=D6=F7=D2=AA=D3=D0=C1=BD=B8=F6=B6=AF=
=D7=F7=A3=BA</strong></p><div class=3D"wiz-table-container" style=
=3D"position: relative; padding: 0px;"><div class=3D"wiz-table-bo=
dy"><table border=3D"1" style=3D"border-collapse:collapse;border-=
spacing:0px;display:table;width:852px;text-align:left;margin-bott=
om:24px;"><tbody style=3D"border:0px;"><tr style=3D"border-width:=
 1px 0px 0px; border-top-style: solid; border-top-color: rgb(221,=
 221, 221);"><td valign=3D"top" style=3D"padding: 8px; margin: 0p=
x; font-weight: normal; text-align: left; border: 1px solid rgb(2=
21, 221, 221); color: rgb(79, 79, 79);"><p style=3D"padding: 0px;=
 margin: 0px; font-weight: 400; text-align: left;">Transformation=
s(=D7=AA=BB=BB)</p></td><td valign=3D"top" style=3D"padding: 8px;=
 margin: 0px; font-weight: normal; text-align: left; border: 1px=20=
solid rgb(221, 221, 221); color: rgb(79, 79, 79);"><p style=3D"pa=
dding: 0px; margin: 0px; font-weight: 400; text-align: left;">map=
(f : T ) U) : RDD[T] ) RDD[U]<br>filter(f : T ) Bool) : RDD[T] )=20=
RDD[T]<br>flatMap(f : T ) Seq[U]) : RDD[T] ) RDD[U]<br>sample(fra=
ction : Float) : RDD[T] ) RDD[T] (Deterministic sampling)<br>grou=
pByKey() : RDD[(K, V)] ) RDD[(K, Seq[V])]<br>reduceByKey(f : (V;=20=
V) ) V) : RDD[(K, V)] ) RDD[(K, V)]<br>union() : (RDD[T]; RDD[T])=
 ) RDD[T]<br>join() : (RDD[(K, V)]; RDD[(K, W)]) ) RDD[(K, (V, W)=
)]<br>cogroup() : (RDD[(K, V)]; RDD[(K, W)]) ) RDD[(K, (Seq[V], S=
eq[W]))]<br>crossProduct() : (RDD[T]; RDD[U]) ) RDD[(T, U)]<br>ma=
pValues(f : V ) W) : RDD[(K, V)] ) RDD[(K, W)] (Preserves partiti=
oning)<br>sort(c : Comparator[K]) : RDD[(K, V)] ) RDD[(K, V)]<br>=
partitionBy(p : Partitioner[K]) : RDD[(K, V)] ) RDD[(K, V)]</p></=
td></tr><tr style=3D"border-width:1px 0px 0px;border-top-style:so=
lid;border-top-color:rgb(221, 221, 221);background-color:rgb(247,=
 247, 247);"><td valign=3D"top" style=3D"padding: 8px; margin: 0p=
x; font-weight: normal; text-align: left; border: 1px solid rgb(2=
21, 221, 221); color: rgb(79, 79, 79);"><p style=3D"padding: 0px;=
 margin: 0px; font-weight: 400; text-align: left;">Action(=B6=AF=D7=
=F7)</p></td><td valign=3D"top" style=3D"padding: 8px; margin: 0p=
x; font-weight: normal; text-align: left; border: 1px solid rgb(2=
21, 221, 221); color: rgb(79, 79, 79);"><p style=3D"padding: 0px;=
 margin: 0px; font-weight: 400; text-align: left;">count() : RDD[=
T] ) Long<br>collect() : RDD[T] ) Seq[T]<br>reduce(f : (T; T) ) T=
) : RDD[T] ) T<br>lookup(k : K) : RDD[(K, V)] ) Seq[V] (On hash/r=
ange partitioned RDDs)<br>save(path : String) : Outputs RDD to a=20=
storage system, e.g., HDFS</p></td></tr></tbody></table></div></d=
iv><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;col=
or:rgb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;</p=
><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color=
:rgb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;</p><=
p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:r=
gb(79, 79, 79);font-weight:400;text-align:justify;">=CF=C8=BF=B4=CF=
=C2Transformations=B2=BF=B7=D6</p><div class=3D"wiz-table-contain=
er" style=3D"position: relative; padding: 0px;"><div class=3D"wiz=
-table-body"><table border=3D"1" style=3D"border-collapse:collaps=
e;border-spacing:0px;display:table;width:852px;text-align:left;ma=
rgin-bottom:24px;"><tbody style=3D"border:0px;"><tr style=3D"bord=
er-width: 1px 0px 0px; border-top-style: solid; border-top-color:=
 rgb(221, 221, 221);"><td valign=3D"top" style=3D"padding: 8px; m=
argin: 0px; font-weight: normal; text-align: left; border: 1px so=
lid rgb(221, 221, 221); color: rgb(79, 79, 79);"><p style=3D"padd=
ing: 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp=
; // Transformations (return a new RDD)</p><p style=3D"padding: 0=
px; margin: 0px; font-weight: 400; text-align: left;">&nbsp;</p><=
p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-alig=
n: left;">&nbsp; /**</p><p style=3D"padding: 0px; margin: 0px; fo=
nt-weight: 400; text-align: left;">&nbsp;&nbsp; * Return a new RD=
D by applying a function to all elements of this RDD.</p><p style=
=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: left=
;">&nbsp;&nbsp; */</p><p style=3D"padding: 0px; margin: 0px; font=
-weight: 400; text-align: left;">&nbsp; def map[U: ClassTag](f: T=
 =3D&gt; U): RDD[U] =3D new MappedRDD(this, sc.clean(f))</p><p st=
yle=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: l=
eft;">&nbsp;</p><p style=3D"padding: 0px; margin: 0px; font-weigh=
t: 400; text-align: left;">&nbsp; /**</p><p style=3D"padding: 0px=
; margin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp;=20=
*&nbsp; Return a new RDD by first applying a function to all elem=
ents of this</p><p style=3D"padding: 0px; margin: 0px; font-weigh=
t: 400; text-align: left;">&nbsp;&nbsp; *&nbsp; RDD, and then fla=
ttening the results.</p><p style=3D"padding: 0px; margin: 0px; fo=
nt-weight: 400; text-align: left;">&nbsp;&nbsp; */</p><p style=3D=
"padding: 0px; margin: 0px; font-weight: 400; text-align: left;">=
&nbsp; def flatMap[U: ClassTag](f: T =3D&gt; TraversableOnce[U]):=
 RDD[U] =3D</p><p style=3D"padding: 0px; margin: 0px; font-weight=
: 400; text-align: left;">&nbsp;&nbsp;&nbsp; new FlatMappedRDD(th=
is, sc.clean(f))</p><p style=3D"padding: 0px; margin: 0px; font-w=
eight: 400; text-align: left;">&nbsp;</p><p style=3D"padding: 0px=
; margin: 0px; font-weight: 400; text-align: left;">&nbsp; /**</p=
><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-al=
ign: left;">&nbsp;&nbsp; * Return a new RDD containing only the e=
lements that satisfy a predicate.</p><p style=3D"padding: 0px; ma=
rgin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; */</=
p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-a=
lign: left;">&nbsp; def filter(f: T =3D&gt; Boolean): RDD[T] =3D=20=
new FilteredRDD(this, sc.clean(f))</p><p style=3D"padding: 0px; m=
argin: 0px; font-weight: 400; text-align: left;">......</p></td><=
/tr></tbody></table></div></div><p style=3D"padding:0px;margin:0p=
x 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-weight:400;t=
ext-align:justify;">&nbsp;</p><p style=3D"padding:0px;margin:0px=20=
0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-weight:400;tex=
t-align:justify;">Map</p><div class=3D"wiz-table-container" style=
=3D"position: relative; padding: 0px;"><div class=3D"wiz-table-bo=
dy"><table border=3D"1" style=3D"border-collapse:collapse;border-=
spacing:0px;display:table;width:852px;text-align:left;margin-bott=
om:24px;"><tbody style=3D"border:0px;"><tr style=3D"border-width:=
 1px 0px 0px; border-top-style: solid; border-top-color: rgb(221,=
 221, 221);"><td valign=3D"top" style=3D"padding: 8px; margin: 0p=
x; font-weight: normal; text-align: left; border: 1px solid rgb(2=
21, 221, 221); color: rgb(79, 79, 79);"><p style=3D"padding: 0px;=
 margin: 0px; font-weight: 400; text-align: left;">&nbsp; /**</p>=
<p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-ali=
gn: left;">&nbsp;&nbsp; * Return a new RDD by applying a function=
 to all elements of this RDD.</p><p style=3D"padding: 0px; margin=
: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; */</p><p=
 style=3D"padding: 0px; margin: 0px; font-weight: 400; text-align=
: left;">&nbsp; def map[U: ClassTag](f: T =3D&gt; U): RDD[U] =3D=20=
new MappedRDD(this, sc.clean(f))</p></td></tr></tbody></table></d=
iv></div><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1r=
em;color:rgb(79, 79, 79);font-weight:400;text-align:justify;">=B7=
=B5=BB=D8=D2=BB=B8=F6MappedRDD=A3=AC=CB=FC=BC=CC=B3=D0RDD=B2=A2=D6=
=D8=D0=B4=C1=CB=C1=BD=B8=F6=B7=BD=B7=A8getPartitions=A1=A2compute=
</p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;co=
lor:rgb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;</=
p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;colo=
r:rgb(79, 79, 79);font-weight:400;text-align:justify;">=B5=DA=D2=BB=
=B8=F6=B7=BD=B7=A8getPartitions=A3=AC=CB=FB=BB=F1=C8=A1=B5=DA=D2=BB=
=B8=F6=B8=B8RDD=A3=AC=B2=A2=BB=F1=C8=A1=B7=D6=C6=AC=CA=FD=D7=E9</=
p><div class=3D"wiz-table-container" style=3D"position: relative;=
 padding: 0px;"><div class=3D"wiz-table-body"><table border=3D"1"=
 style=3D"border-collapse:collapse;border-spacing:0px;display:tab=
le;width:852px;text-align:left;margin-bottom:24px;"><tbody style=3D=
"border:0px;"><tr style=3D"border-width: 1px 0px 0px; border-top-=
style: solid; border-top-color: rgb(221, 221, 221);"><td valign=3D=
"top" style=3D"padding: 8px; margin: 0px; font-weight: normal; te=
xt-align: left; border: 1px solid rgb(221, 221, 221); color: rgb(=
79, 79, 79);"><p style=3D"padding: 0px; margin: 0px; font-weight:=
 400; text-align: left;">override def getPartitions: Array[Partit=
ion] =3D firstParent[T].partitions</p></td></tr></tbody></table><=
/div></div><p style=3D"padding:0px;margin:0px 0px 16px;font-size:=
1rem;color:rgb(79, 79, 79);font-weight:400;text-align:justify;">&=
nbsp;</p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1r=
em;color:rgb(79, 79, 79);font-weight:400;text-align:justify;">=B5=
=DA=B6=FE=B8=F6=B7=BD=B7=A8compute=A3=AC=BD=AB=B8=F9=BE=DDmap=B2=CE=
=CA=FD=C4=DA=C8=DD=C0=B4=B1=E9=C0=FARDD=B7=D6=C7=F8</p><div class=
=3D"wiz-table-container" style=3D"position: relative; padding: 0p=
x;"><div class=3D"wiz-table-body"><table border=3D"1" style=3D"bo=
rder-collapse:collapse;border-spacing:0px;display:table;width:852=
px;text-align:left;margin-bottom:24px;"><tbody style=3D"border:0p=
x;"><tr style=3D"border-width: 1px 0px 0px; border-top-style: sol=
id; border-top-color: rgb(221, 221, 221);"><td valign=3D"top" sty=
le=3D"padding: 8px; margin: 0px; font-weight: normal; text-align:=
 left; border: 1px solid rgb(221, 221, 221); color: rgb(79, 79, 7=
9);"><p style=3D"padding: 0px; margin: 0px; font-weight: 400; tex=
t-align: left;">override def compute(split: Partition, context: T=
askContext) =3D</p><p style=3D"padding: 0px; margin: 0px; font-we=
ight: 400; text-align: left;">&nbsp;&nbsp;&nbsp; firstParent[T].i=
terator(split, context).map(f)</p></td></tr></tbody></table></div=
></div><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem=
;color:rgb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp=
;</p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;c=
olor:rgb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;<=
/p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;col=
or:rgb(79, 79, 79);font-weight:400;text-align:justify;">filter</p=
><div class=3D"wiz-table-container" style=3D"position: relative;=20=
padding: 0px;"><div class=3D"wiz-table-body"><table border=3D"1"=20=
style=3D"border-collapse:collapse;border-spacing:0px;display:tabl=
e;width:852px;text-align:left;margin-bottom:24px;"><tbody style=3D=
"border:0px;"><tr style=3D"border-width: 1px 0px 0px; border-top-=
style: solid; border-top-color: rgb(221, 221, 221);"><td valign=3D=
"top" style=3D"padding: 8px; margin: 0px; font-weight: normal; te=
xt-align: left; border: 1px solid rgb(221, 221, 221); color: rgb(=
79, 79, 79);"><p style=3D"padding: 0px; margin: 0px; font-weight:=
 400; text-align: left;">&nbsp;&nbsp; /**</p><p style=3D"padding:=
 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp;&nb=
sp; * Return a new RDD containing only the elements that satisfy=20=
a predicate.</p><p style=3D"padding: 0px; margin: 0px; font-weigh=
t: 400; text-align: left;">&nbsp;&nbsp; */</p><p style=3D"padding=
: 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp; d=
ef filter(f: T =3D&gt; Boolean): RDD[T] =3D new FilteredRDD(this,=
 sc.clean(f))</p></td></tr></tbody></table></div></div><p style=3D=
"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79,=
 79);font-weight:400;text-align:justify;">&nbsp;</p><p style=3D"p=
adding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 7=
9);font-weight:400;text-align:justify;">Filter=CA=C7=D2=BB=B8=F6=B9=
=FD=C2=CB=B2=D9=D7=F7=A3=AC=B1=C8=C8=E7mapRDD.filter(_ &gt;1)</p>=
<p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:=
rgb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;</p><p=
 style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rg=
b(79, 79, 79);font-weight:400;text-align:justify;">Union</p><div=20=
class=3D"wiz-table-container" style=3D"position: relative; paddin=
g: 0px;"><div class=3D"wiz-table-body"><table border=3D"1" style=3D=
"border-collapse:collapse;border-spacing:0px;display:table;width:=
852px;text-align:left;margin-bottom:24px;"><tbody style=3D"border=
:0px;"><tr style=3D"border-width: 1px 0px 0px; border-top-style:=20=
solid; border-top-color: rgb(221, 221, 221);"><td valign=3D"top"=20=
style=3D"padding: 8px; margin: 0px; font-weight: normal; text-ali=
gn: left; border: 1px solid rgb(221, 221, 221); color: rgb(79, 79=
, 79);"><p style=3D"padding: 0px; margin: 0px; font-weight: 400;=20=
text-align: left;">&nbsp; /**</p><p style=3D"padding: 0px; margin=
: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; * Return=
 the union of this RDD and another one. Any identical elements wi=
ll appear multiple</p><p style=3D"padding: 0px; margin: 0px; font=
-weight: 400; text-align: left;">&nbsp;&nbsp; * times (use `.dist=
inct()` to eliminate them).</p><p style=3D"padding: 0px; margin:=20=
0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; */</p><p s=
tyle=3D"padding: 0px; margin: 0px; font-weight: 400; text-align:=20=
left;">&nbsp; def union(other: RDD[T]): RDD[T] =3D new UnionRDD(s=
c, Array(this, other))</p></td></tr></tbody></table></div></div><=
p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:r=
gb(79, 79, 79);font-weight:400;text-align:justify;">=B6=E0=B8=F6R=
DD=D7=E9=B3=C9=B3=C9=D2=BB=B8=F6=D0=C2RDD=A3=AC=CB=FC=D6=D8=D0=B4=
=C1=CBRDD=B5=C45=B8=F6=B7=BD=B7=A8getPartitions=A1=A2getDependenc=
ies=A1=A2compute=A1=A2getPreferredLocations=A1=A2clearDependencie=
s</p><p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;c=
olor:rgb(79, 79, 79);font-weight:400;text-align:justify;">=B4=D3g=
etPartitions=A1=A2getDependencies=D6=D0=BF=C9=D2=D4=BF=B4=B3=F6=CB=
=FC=D3=A6=B8=C3=CA=C7=D2=BB=D7=E9=BF=ED=D2=C0=C0=B5=B9=D8=CF=B5</=
p><div class=3D"wiz-table-container" style=3D"position: relative;=
 padding: 0px;"><div class=3D"wiz-table-body"><table border=3D"1"=
 style=3D"border-collapse:collapse;border-spacing:0px;display:tab=
le;width:852px;text-align:left;margin-bottom:24px;"><tbody style=3D=
"border:0px;"><tr style=3D"border-width: 1px 0px 0px; border-top-=
style: solid; border-top-color: rgb(221, 221, 221);"><td valign=3D=
"top" style=3D"padding: 8px; margin: 0px; font-weight: normal; te=
xt-align: left; border: 1px solid rgb(221, 221, 221); color: rgb(=
79, 79, 79);"><p style=3D"padding: 0px; margin: 0px; font-weight:=
 400; text-align: left;">&nbsp; override def getDependencies: Seq=
[Dependency[_]] =3D {</p><p style=3D"padding: 0px; margin: 0px; f=
ont-weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp; val deps =3D=
 new ArrayBuffer[Dependency[_]]</p><p style=3D"padding: 0px; marg=
in: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp;=20=
var pos =3D 0</p><p style=3D"padding: 0px; margin: 0px; font-weig=
ht: 400; text-align: left;">&nbsp; &nbsp;&nbsp;for (rdd &lt;- rdd=
s) {</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400;=20=
text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deps +=3D new R=
angeDependency(rdd, 0, pos, rdd.partitions.size)</p><p style=3D"p=
adding: 0px; margin: 0px; font-weight: 400; text-align: left;">&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp; pos +=3D rdd.partitions.size</p><p s=
tyle=3D"padding: 0px; margin: 0px; font-weight: 400; text-align:=20=
left;">&nbsp;&nbsp;&nbsp; }</p><p style=3D"padding: 0px; margin:=20=
0px; font-weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp; deps=
</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text=
-align: left;">&nbsp; }</p></td></tr></tbody></table></div></div>=
<p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:=
rgb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;</p><p=
 style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rg=
b(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;</p><p s=
tyle=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(=
79, 79, 79);font-weight:400;text-align:justify;">groupBy</p><div=20=
class=3D"wiz-table-container" style=3D"position: relative; paddin=
g: 0px;"><div class=3D"wiz-table-body"><table border=3D"1" style=3D=
"border-collapse:collapse;border-spacing:0px;display:table;width:=
852px;text-align:left;margin-bottom:24px;"><tbody style=3D"border=
:0px;"><tr style=3D"border-width: 1px 0px 0px; border-top-style:=20=
solid; border-top-color: rgb(221, 221, 221);"><td valign=3D"top"=20=
style=3D"padding: 8px; margin: 0px; font-weight: normal; text-ali=
gn: left; border: 1px solid rgb(221, 221, 221); color: rgb(79, 79=
, 79);"><p style=3D"padding: 0px; margin: 0px; font-weight: 400;=20=
text-align: left;">&nbsp; /**</p><p style=3D"padding: 0px; margin=
: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; * Return=
 an RDD of grouped items. Each group consists of a key and a sequ=
ence of elements</p><p style=3D"padding: 0px; margin: 0px; font-w=
eight: 400; text-align: left;">&nbsp;&nbsp; * mapping to that key=
.</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; tex=
t-align: left;">&nbsp;&nbsp; *</p><p style=3D"padding: 0px; margi=
n: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; * Note:=
 This operation may be very expensive. If you are grouping in ord=
er to perform an</p><p style=3D"padding: 0px; margin: 0px; font-w=
eight: 400; text-align: left;">&nbsp;&nbsp; * aggregation (such a=
s a sum or average) over each key, using [[PairRDDFunctions.aggre=
gateByKey]]</p><p style=3D"padding: 0px; margin: 0px; font-weight=
: 400; text-align: left;">&nbsp;&nbsp; * or [[PairRDDFunctions.re=
duceByKey]] will provide much better performance.</p><p style=3D"=
padding: 0px; margin: 0px; font-weight: 400; text-align: left;">&=
nbsp;&nbsp; */</p><p style=3D"padding: 0px; margin: 0px; font-wei=
ght: 400; text-align: left;">&nbsp; def groupBy[K](f: T =3D&gt; K=
)(implicit kt: ClassTag[K]): RDD[(K, Iterable[T])] =3D</p><p styl=
e=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: lef=
t;">&nbsp;&nbsp;&nbsp; groupBy[K](f, defaultPartitioner(this))</p=
></td></tr></tbody></table></div></div><p style=3D"padding:0px;ma=
rgin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79);font-weigh=
t:400;text-align:justify;">=B8=F9=BE=DD=B2=CE=CA=FD=B7=D6=D7=E9=A3=
=AC=D5=E2=D3=D6=B2=FA=C9=FA=C1=CB=D2=BB=B8=F6=D0=C2=B5=C4RDD</p><=
p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:r=
gb(79, 79, 79);font-weight:400;text-align:justify;">&nbsp;</p><p=20=
style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb=
(79, 79, 79);font-weight:400;text-align:justify;">Action</p><p st=
yle=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(7=
9, 79, 79);font-weight:400;text-align:justify;">Count</p><div cla=
ss=3D"wiz-table-container" style=3D"position: relative; padding:=20=
0px;"><div class=3D"wiz-table-body"><table border=3D"1" style=3D"=
border-collapse:collapse;border-spacing:0px;display:table;width:8=
52px;text-align:left;margin-bottom:24px;"><tbody style=3D"border:=
0px;"><tr style=3D"border-width: 1px 0px 0px; border-top-style: s=
olid; border-top-color: rgb(221, 221, 221);"><td valign=3D"top" s=
tyle=3D"padding: 8px; margin: 0px; font-weight: normal; text-alig=
n: left; border: 1px solid rgb(221, 221, 221); color: rgb(79, 79,=
 79);"><p style=3D"padding: 0px; margin: 0px; font-weight: 400; t=
ext-align: left;">&nbsp; /**</p><p style=3D"padding: 0px; margin:=
 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; * Return=20=
the number of elements in the RDD.</p><p style=3D"padding: 0px; m=
argin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; */<=
/p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-=
align: left;">&nbsp; def count(): Long =3D sc.runJob(this, Utils.=
getIteratorSize _).sum</p></td></tr></tbody></table></div></div><=
p style=3D"padding:0px;margin:0px 0px 16px;font-size:1rem;color:r=
gb(79, 79, 79);font-weight:400;text-align:justify;">=B8=FA=D7=D9=B4=
=FA=C2=EB=A3=AC=D4=DArunJob=B7=BD=B7=A8=D6=D0=B5=F7=D3=C3=C1=CBda=
gScheduler.runJob=A1=A3=B6=F8=D4=DADAGScheduler=A3=AC=BD=AB=CC=E1=
=BD=BB=B5=BD=D7=F7=D2=B5=B5=F7=B6=C8=C6=F7=A3=AC=B2=A2=BB=F1=B5=C3=
JobWaiter=B6=D4=CF=F3=B7=B5=BB=D8=A1=A3=B8=C3JobWaiter=B6=D4=CF=F3=
=BF=C9=D2=D4=D3=C3=C0=B4=D7=E8=C8=FB=A3=AC=D6=B1=B5=BD=C8=CE=CE=F1=
=CD=EA=B3=C9=D6=B4=D0=D0=BB=F2=BF=C9=D2=D4=D3=C3=C0=B4=C8=A1=CF=FB=
=D7=F7=D2=B5=A1=A3</p><p style=3D"padding:0px;margin:0px 0px 16px=
;font-size:1rem;color:rgb(79, 79, 79);font-weight:400;text-align:=
justify;">&nbsp;</p><p style=3D"padding:0px;margin:0px 0px 16px;f=
ont-size:1rem;color:rgb(79, 79, 79);font-weight:400;text-align:ju=
stify;">&nbsp;</p><h2 style=3D"padding:0px;margin:8px 0px 16px;fo=
nt-size:1.5rem;color:rgb(79, 79, 79);font-weight:700;">RDD=D6=D0=B5=
=C4=C8=CE=CE=F1=B5=F7=B6=C8</h2><img src=3D"" alt=3D""><br></div>=
<p style=3D"padding-top:16px;font-style:normal;font-weight:400;te=
xt-align:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;=
font-size:1rem;color:rgb(79, 79, 79)">=B4=D3=D5=E2=B8=F6=CD=BC=D6=
=D0=A3=BA</p><p style=3D"padding-top:16px;font-style:normal;font-=
weight:400;text-align:justify;text-indent:0px;padding:0px;margin:=
0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">&nbsp;</p><p s=
tyle=3D"padding-top:16px;font-style:normal;font-weight:400;text-a=
lign:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;font=
-size:1rem;color:rgb(79, 79, 79)">RDD Object=B2=FA=C9=FADAG=A3=AC=
=C8=BB=BA=F3=BD=F8=C8=EBDAGScheduler=BD=D7=B6=CE=A3=BA</p><p styl=
e=3D"padding-top:16px;font-style:normal;font-weight:400;text-alig=
n:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;font-si=
ze:1rem;color:rgb(79, 79, 79)">1=A1=A2DAGScheduler=CA=C7=C3=E6=CF=
=F2Stage=B5=C4=B8=DF=B2=E3=B4=CE=B5=F7=B6=C8=C6=F7=A3=ACDAGSchedu=
ler=BB=E1=BD=ABDAG=B2=F0=B7=D6=B3=C9=BA=DC=B6=E0=B8=F6&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp; tasks=A3=AC=B6=F8=D2=BB=D7=E9tasks=BE=CD=CA=C7=
=CD=BC=D6=D0=B5=C4stage=A1=A3</p><p style=3D"padding-top:16px;fon=
t-style:normal;font-weight:400;text-align:justify;text-indent:0px=
;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79,=
 79)">2=A1=A2=C3=BF=D2=BB=B4=CEshuffle=B5=C4=B9=FD=B3=CC=BE=CD=BB=
=E1=B2=FA=C9=FA=D2=BB=B8=F6=D0=C2=B5=C4stage=A1=A3DAGScheduler=BB=
=E1=D3=D0RDD=BC=C7=C2=BC=B4=C5=C5=CC=B5=C4=CE=EF=A1=A4 =C0=ED=BB=AF=
=B2=D9=D7=F7=A3=AC=CE=AA=C1=CB=BB=F1=B5=C3=D7=EE=D3=D0tasks=A3=AC=
DAGSchulder=BB=E1=CF=C8=B2=E9=D5=D2=B1=BE=B5=D8tasks=A1=A3</p><p=20=
style=3D"padding-top:16px;font-style:normal;font-weight:400;text-=
align:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;fon=
t-size:1rem;color:rgb(79, 79, 79)">3=A1=A2DAGScheduler=BB=B9=D2=AA=
=BC=E0=BF=D8shuffle=B2=FA=C9=FA=B5=C4=CA=A7=B0=DC=C8=CE=CE=F1=A3=AC=
=C8=E7=B9=FB=BB=B9=B5=C3=D6=D8=C6=F4</p><p style=3D"padding-top:1=
6px;font-style:normal;font-weight:400;text-align:justify;text-ind=
ent:0px;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(=
79, 79, 79)">&nbsp;</p><p style=3D"padding-top:16px;font-style:no=
rmal;font-weight:400;text-align:justify;text-indent:0px;padding:0=
px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">DAGS=
cheduler=BB=AE=B7=D6stage=BA=F3=A3=AC=BB=E1=D2=D4TaskSet=CE=AA=B5=
=A5=CE=BB=B0=D1=C8=CE=CE=F1=CC=E1=BD=BB=B8=F8TaskScheduler=A3=BA<=
/p><p style=3D"padding-top:16px;font-style:normal;font-weight:400=
;text-align:justify;text-indent:0px;padding:0px;margin:0px 0px 16=
px;font-size:1rem;color:rgb(79, 79, 79)">1=A1=A2=D2=BB=B8=F6TaskS=
cheduler=D6=BB=CE=AA=D2=BB=B8=F6sparkConext=B7=FE=CE=F1=A1=A3</p>=
<p style=3D"padding-top:16px;font-style:normal;font-weight:400;te=
xt-align:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;=
font-size:1rem;color:rgb(79, 79, 79)">2=A1=A2=B5=B1=BD=D3=CA=D5=B5=
=BDTaskSet=BA=F3=A3=AC=CB=FC=BB=E1=B0=D1=C8=CE=CE=F1=CC=E1=BD=BB=B8=
=F8Worker=BD=DA=B5=E3=B5=C4Executor=D6=D0=C8=A5=D4=CB=D0=D0=A1=A3=
=CA=A7=B0=DC=B5=C4=C8=CE=CE=F1</p><p style=3D"padding-top:16px;fo=
nt-style:normal;font-weight:400;text-align:justify;text-indent:0p=
x;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79=
, 79)">=D3=C9TaskScheduler=BC=E0=BF=D8=D6=D8=C6=F4=A1=A3</p><p st=
yle=3D"padding-top:16px;font-style:normal;font-weight:400;text-al=
ign:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;font-=
size:1rem;color:rgb(79, 79, 79)">&nbsp;</p><p style=3D"padding-to=
p:16px;font-style:normal;font-weight:400;text-align:justify;text-=
indent:0px;padding:0px;margin:0px 0px 16px;font-size:1rem;color:r=
gb(79, 79, 79)">Executor=CA=C7=D2=D4=B6=E0=CF=DF=B3=CC=B5=C4=B7=BD=
=CA=BD=D4=CB=D0=D0=A3=AC=C3=BF=B8=F6=CF=DF=B3=CC=B6=BC=B8=BA=D4=F0=
=D2=BB=B8=F6=C8=CE=CE=F1=A1=A3</p><p style=3D"padding-top:16px;fo=
nt-style:normal;font-weight:400;text-align:justify;text-indent:0p=
x;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79=
, 79)">&nbsp;</p><p style=3D"padding-top:16px;font-style:normal;f=
ont-weight:400;text-align:justify;text-indent:0px;padding:0px;mar=
gin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">=BD=D3=CF=C2=
=C0=B4=B8=FA=D7=D9=D2=BB=B8=F6spark=CC=E1=B9=A9=B5=C4=C0=FD=D7=D3=
=D4=B4=C2=EB=A3=BA</p><p style=3D"padding-top:16px;font-style:nor=
mal;font-weight:400;text-align:justify;text-indent:0px;padding:0p=
x;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">=D4=B4=
=C2=EBpackageorg.apache.spark.examples.SparkPi</p><div class=3D"w=
iz-table-container" style=3D"padding-top:16px;font-style:normal;f=
ont-weight:normal;text-align:start;text-indent:0px;padding:0px;ma=
rgin:0px;position:relative"><div class=3D"wiz-table-body"><table=20=
border=3D"1" style=3D"border-collapse:collapse;border-spacing:0px=
;display:table;width:852px;text-align:left;margin-bottom:24px;"><=
tbody style=3D"border:0px;"><tr style=3D"border-width: 1px 0px 0p=
x; border-top-style: solid; border-top-color: rgb(221, 221, 221);=
"><td valign=3D"top" style=3D"padding: 8px; margin: 0px; font-wei=
ght: normal; text-align: left; border: 1px solid rgb(221, 221, 22=
1); color: rgb(79, 79, 79);"><p style=3D"padding: 0px; margin: 0p=
x; font-weight: 400; text-align: left;">&nbsp; def main(args: Arr=
ay[String]) {</p><p style=3D"padding: 0px; margin: 0px; font-weig=
ht: 400; text-align: left;">&nbsp;&nbsp;&nbsp; //=C9=E8=D6=C3=D2=BB=
=B8=F6=D3=A6=D3=C3=C3=FB=B3=C6(=D3=C3=D3=DA=D4=DAWeb UI=D6=D0=CF=D4=
=CA=BE)</p><p style=3D"padding: 0px; margin: 0px; font-weight: 40=
0; text-align: left;">val conf =3D new SparkConf().setAppName("Sp=
ark Pi")</p><p style=3D"padding: 0px; margin: 0px; font-weight: 4=
00; text-align: left;">//=CA=B5=C0=FD=BB=AF=D2=BB=B8=F6SparkConte=
xt</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; te=
xt-align: left;">val spark =3D new SparkContext(conf)</p><p style=
=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: left=
;">//=D7=AA=B3=C9=CA=FD=BE=DD</p><p style=3D"padding: 0px; margin=
: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp; va=
l slices =3D if (args.length &gt; 0) args(0).toInt else 2</p><p s=
tyle=3D"padding: 0px; margin: 0px; font-weight: 400; text-align:=20=
left;">&nbsp;&nbsp;&nbsp; val n =3D 100000 * slices</p><p style=3D=
"padding: 0px; margin: 0px; font-weight: 400; text-align: left;">=
&nbsp;&nbsp;&nbsp; val count =3D spark.parallelize(1 to n, slices=
).map { i =3D&gt;</p><p style=3D"padding: 0px; margin: 0px; font-=
weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; va=
l x =3D random * 2 - 1</p><p style=3D"padding: 0px; margin: 0px;=20=
font-weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p; val y =3D random * 2 - 1</p><p style=3D"padding: 0px; margin:=20=
0px; font-weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp; if (x*x + y*y &lt; 1) 1 else 0</p><p style=3D"padding: 0p=
x; margin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp;=
&nbsp; }.reduce(_ + _)</p><p style=3D"padding: 0px; margin: 0px;=20=
font-weight: 400; text-align: left;">&nbsp;&nbsp;&nbsp; println("=
Pi is roughly " + 4.0 * count / n)</p><p style=3D"padding: 0px; m=
argin: 0px; font-weight: 400; text-align: left;">&nbsp;&nbsp;&nbs=
p; spark.stop()</p><p style=3D"padding: 0px; margin: 0px; font-we=
ight: 400; text-align: left;">&nbsp; }</p></td></tr></tbody></tab=
le></div></div><p style=3D"padding-top:16px;font-style:normal;fon=
t-weight:400;text-align:justify;text-indent:0px;padding:0px;margi=
n:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">&nbsp;</p><p=
 style=3D"padding-top:16px;font-style:normal;font-weight:400;text=
-align:justify;text-indent:0px;padding:0px;margin:0px 0px 16px;fo=
nt-size:1rem;color:rgb(79, 79, 79)">=B4=FA=C2=EB=D6=D0=B5=C4paral=
lelize=CA=C7=D2=BB=B8=F6=B2=A2=D0=D0=BB=AF=B5=C4=D1=D3=B3=D9=BC=D3=
=D4=D8=A3=AC=B8=FA=D7=D9=D4=B4=C2=EB</p><div class=3D"wiz-table-c=
ontainer" style=3D"padding-top:16px;font-style:normal;font-weight=
:normal;text-align:start;text-indent:0px;padding:0px;margin:0px;p=
osition:relative"><div class=3D"wiz-table-body"><table border=3D"=
1" style=3D"border-collapse:collapse;border-spacing:0px;display:t=
able;width:852px;text-align:left;margin-bottom:24px;"><tbody styl=
e=3D"border:0px;"><tr style=3D"border-width: 1px 0px 0px; border-=
top-style: solid; border-top-color: rgb(221, 221, 221);"><td vali=
gn=3D"top" style=3D"padding: 8px; margin: 0px; font-weight: norma=
l; text-align: left; border: 1px solid rgb(221, 221, 221); color:=
 rgb(79, 79, 79);"><p style=3D"padding: 0px; margin: 0px; font-we=
ight: 400; text-align: left;">&nbsp; /** Distribute a local Scala=
 collection to form an RDD.</p><p style=3D"padding: 0px; margin:=20=
0px; font-weight: 400; text-align: left;">&nbsp;&nbsp; *&nbsp; =B4=
=D3RDD=D6=D0=B7=D6=C5=E4=D2=BB=B8=F6=B1=BE=B5=D8=B5=C4scala=BC=AF=
=BA=CF</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400=
; text-align: left;">&nbsp;&nbsp; * @note Parallelize acts lazily=
. If `seq` is a mutable collection and is</p><p style=3D"padding:=
 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp;&nb=
sp; * altered after the call to parallelize and before the first=20=
action on the</p><p style=3D"padding: 0px; margin: 0px; font-weig=
ht: 400; text-align: left;">&nbsp;&nbsp; * RDD, the resultant RDD=
 will reflect the modified collection. Pass a copy of</p><p style=
=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: left=
;">&nbsp;&nbsp; * the argument to avoid this.</p><p style=3D"padd=
ing: 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp=
;&nbsp; */</p><p style=3D"padding: 0px; margin: 0px; font-weight:=
 400; text-align: left;">&nbsp; def parallelize[T: ClassTag](seq:=
 Seq[T], numSlices: Int =3D defaultParallelism): RDD[T] =3D {</p>=
<p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-ali=
gn: left;">&nbsp;&nbsp;&nbsp; new ParallelCollectionRDD[T](this,=20=
seq, numSlices, Map[Int, Seq[String]]())</p><p style=3D"padding:=20=
0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp; }</=
p></td></tr></tbody></table></div></div><p style=3D"padding-top:1=
6px;font-style:normal;font-weight:400;text-align:justify;text-ind=
ent:0px;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(=
79, 79, 79)">=CB=FC=B5=F7=D3=C3=C1=CBRDD=D6=D0=B5=C4map=A3=AC=C9=CF=
=C3=E6=CB=B5=B9=FD=B5=C4map=CA=C7=D2=BB=B8=F6=D7=AA=BB=BB=B9=FD=B3=
=CC=A3=AC=BD=AB=C9=FA=B3=C9=D2=BB=B8=F6=D0=C2=B5=C4RDD=A1=A3=D7=EE=
=BA=F3reduce=A1=A3</p><p style=3D"padding-top:16px;font-style:nor=
mal;font-weight:400;text-align:justify;text-indent:0px;padding:0p=
x;margin:0px 0px 16px;font-size:1rem;color:rgb(79, 79, 79)">&nbsp=
;</p><p style=3D"padding-top:16px;font-style:normal;font-weight:4=
00;text-align:justify;text-indent:0px;padding:0px;margin:0px 0px=20=
16px;font-size:1rem;color:rgb(79, 79, 79)">=D4=DAshell=D6=D0=C5=AA=
=D2=BB=B8=F6=B5=A5=B4=CA=CD=B3=BC=C6=C0=FD=D7=D3=A3=BA</p><div cl=
ass=3D"wiz-table-container" style=3D"padding-top:16px;font-style:=
normal;font-weight:normal;text-align:start;text-indent:0px;paddin=
g:0px;margin:0px;position:relative"><div class=3D"wiz-table-body"=
><table border=3D"1" style=3D"border-collapse:collapse;border-spa=
cing:0px;display:table;width:852px;text-align:left;margin-bottom:=
24px;"><tbody style=3D"border:0px;"><tr style=3D"border-width: 1p=
x 0px 0px; border-top-style: solid; border-top-color: rgb(221, 22=
1, 221);"><td valign=3D"top" style=3D"padding: 8px; margin: 0px;=20=
font-weight: normal; text-align: left; border: 1px solid rgb(221,=
 221, 221); color: rgb(79, 79, 79);"><p style=3D"padding: 0px; ma=
rgin: 0px; font-weight: 400; text-align: left;">scala&gt; val rdd=
 =3D sc.textFile("hdfs://192.168.0.245:8020/test/README.md")</p><=
p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-alig=
n: left;">14/12/18 01:12:26 INFO storage.MemoryStore: ensureFreeS=
pace(82180) called with curMem=3D331133, maxMem=3D280248975</p><p=
 style=3D"padding: 0px; margin: 0px; font-weight: 400; text-align=
: left;">14/12/18 01:12:26 INFO storage.MemoryStore: Block broadc=
ast_3 stored as values in memory (estimated size 80.3 KB, free 26=
6.9 MB)</p><p style=3D"padding: 0px; margin: 0px; font-weight: 40=
0; text-align: left;">rdd: org.apache.spark.rdd.RDD[String] =3D h=
dfs://192.168.0.245:8020/test/README.md MappedRDD[7] at textFile=20=
at &lt;console&gt;:12</p><p style=3D"padding: 0px; margin: 0px; f=
ont-weight: 400; text-align: left;">&nbsp;</p><p style=3D"padding=
: 0px; margin: 0px; font-weight: 400; text-align: left;">scala&gt=
; rdd.toDebugString</p><p style=3D"padding: 0px; margin: 0px; fon=
t-weight: 400; text-align: left;">14/12/18 01:12:29 INFO mapred.F=
ileInputFormat: Total input paths to process : 1</p><p style=3D"p=
adding: 0px; margin: 0px; font-weight: 400; text-align: left;">re=
s3: String =3D</p><p style=3D"padding: 0px; margin: 0px; font-wei=
ght: 400; text-align: left;">(1) hdfs://192.168.0.245:8020/test/R=
EADME.md MappedRDD[7] at textFile at &lt;console&gt;:12</p><p sty=
le=3D"padding: 0px; margin: 0px; font-weight: 400; text-align: le=
ft;">&nbsp;|&nbsp; hdfs://192.168.0.245:8020/test/README.md Hadoo=
pRDD[6] at textFile at &lt;console&gt;:12</p><p style=3D"padding:=
 0px; margin: 0px; font-weight: 400; text-align: left;">&nbsp;</p=
></td></tr></tbody></table></div></div><p style=3D"padding-top:16=
px;font-style:normal;font-weight:400;text-align:justify;text-inde=
nt:0px;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(7=
9, 79, 79)">Sc=CA=C7=B4=D3hdfs=D6=D0=B6=C1=C8=A1=CA=FD=BE=DD=A3=AC=
=C4=C7=D4=DAdebugString=D6=D0=CB=FB=BE=CD=D7=AA=BB=BB=B3=C9=C1=CB=
HadoopRDD</p><div class=3D"wiz-table-container" style=3D"padding-=
top:16px;font-style:normal;font-weight:normal;text-align:start;te=
xt-indent:0px;padding:0px;margin:0px;position:relative"><div clas=
s=3D"wiz-table-body"><table border=3D"1" style=3D"border-collapse=
:collapse;border-spacing:0px;display:table;width:852px;text-align=
:left;margin-bottom:24px;"><tbody style=3D"border:0px;"><tr style=
=3D"border-width: 1px 0px 0px; border-top-style: solid; border-to=
p-color: rgb(221, 221, 221);"><td valign=3D"top" style=3D"padding=
: 8px; margin: 0px; font-weight: normal; text-align: left; border=
: 1px solid rgb(221, 221, 221); color: rgb(79, 79, 79);" class=3D=
""><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-=
align: left;">scala&gt; val result =3D rdd.flatMap(_.split(" ")).=
map((_,1)).reduceByKey(_+_).collect</p><p style=3D"padding: 0px;=20=
margin: 0px; font-weight: 400; text-align: left;">14/12/18 01:14:=
51 INFO spark.SparkContext: Starting job: collect at &lt;console&=
gt;:14</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400=
; text-align: left;">14/12/18 01:14:51 INFO scheduler.DAGSchedule=
r: Registering RDD 9 (map at &lt;console&gt;:14)</p><p style=3D"p=
adding: 0px; margin: 0px; font-weight: 400; text-align: left;">14=
/12/18 01:14:51 INFO scheduler.DAGScheduler: Got job 0 (collect a=
t &lt;console&gt;:14) with 1 output partitions (allowLocal=3Dfals=
e)</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; te=
xt-align: left;">14/12/18 01:14:51 INFO scheduler.DAGScheduler: F=
inal stage: Stage 0(collect at &lt;console&gt;:14)</p><p style=3D=
"padding: 0px; margin: 0px; font-weight: 400; text-align: left;">=
14/12/18 01:14:51 INFO scheduler.DAGScheduler: Parents of final s=
tage: List(Stage 1)</p><p style=3D"padding: 0px; margin: 0px; fon=
t-weight: 400; text-align: left;">14/12/18 01:14:51 INFO schedule=
r.DAGScheduler: Missing parents: List(Stage 1)</p><p style=3D"pad=
ding: 0px; margin: 0px; font-weight: 400; text-align: left;">14/1=
2/18 01:14:51 INFO scheduler.DAGScheduler: Submitting Stage 1 (Ma=
ppedRDD[9] at map at &lt;console&gt;:14), which has no missing pa=
rents</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400;=
 text-align: left;">14/12/18 01:14:51 INFO storage.MemoryStore: e=
nsureFreeSpace(3440) called with curMem=3D413313, maxMem=3D280248=
975</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; t=
ext-align: left;">14/12/18 01:14:51 INFO storage.MemoryStore: Blo=
ck broadcast_4 stored as values in memory (estimated size 3.4 KB,=
 free 266.9 MB)</p><p style=3D"padding: 0px; margin: 0px; font-we=
ight: 400; text-align: left;">14/12/18 01:14:51 INFO scheduler.DA=
GScheduler: Submitting 1 missing tasks from Stage 1 (MappedRDD[9]=
 at map at &lt;console&gt;:14)</p><p style=3D"padding: 0px; margi=
n: 0px; font-weight: 400; text-align: left;">14/12/18 01:14:51 IN=
FO scheduler.TaskSchedulerImpl: Adding task set 1.0 with 1 tasks<=
/p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-=
align: left;">14/12/18 01:14:51 INFO scheduler.TaskSetManager: St=
arting task 0.0 in stage 1.0 (TID 0, localhost, ANY, 1185 bytes)<=
/p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-=
align: left;">14/12/18 01:14:51 INFO executor.Executor: Running t=
ask 0.0 in stage 1.0 (TID 0)</p><p style=3D"padding: 0px; margin:=
 0px; font-weight: 400; text-align: left;">14/12/18 01:14:51 INFO=
 rdd.HadoopRDD: Input split: hdfs://192.168.0.245:8020/test/READM=
E.md:0+4811</p><p style=3D"padding: 0px; margin: 0px; font-weight=
: 400; text-align: left;">14/12/18 01:14:51 INFO Configuration.de=
precation: mapred.tip.id is deprecated. Instead, use mapreduce.ta=
sk.id</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400;=
 text-align: left;">14/12/18 01:14:51 INFO Configuration.deprecat=
ion: mapred.task.id is deprecated. Instead, use mapreduce.task.at=
tempt.id</p><p style=3D"padding: 0px; margin: 0px; font-weight: 4=
00; text-align: left;">14/12/18 01:14:51 INFO Configuration.depre=
cation: mapred.task.is.map is deprecated. Instead, use mapreduce.=
task.ismap</p><p style=3D"padding: 0px; margin: 0px; font-weight:=
 400; text-align: left;">14/12/18 01:14:51 INFO Configuration.dep=
recation: mapred.task.partition is deprecated. Instead, use mapre=
duce.task.partition</p><p style=3D"padding: 0px; margin: 0px; fon=
t-weight: 400; text-align: left;">14/12/18 01:14:51 INFO Configur=
ation.deprecation: mapred.job.id is deprecated. Instead, use mapr=
educe.job.id</p><p style=3D"padding: 0px; margin: 0px; font-weigh=
t: 400; text-align: left;">14/12/18 01:14:52 INFO executor.Execut=
or: Finished task 0.0 in stage 1.0 (TID 0). 1860 bytes result sen=
t to driver</p><p style=3D"padding: 0px; margin: 0px; font-weight=
: 400; text-align: left;">14/12/18 01:14:53 INFO scheduler.DAGSch=
eduler: Stage 1 (map at &lt;console&gt;:14) finished in 1.450 s</=
p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-a=
lign: left;">14/12/18 01:14:53 INFO scheduler.DAGScheduler: looki=
ng for newly runnable stages</p><p style=3D"padding: 0px; margin:=
 0px; font-weight: 400; text-align: left;">14/12/18 01:14:53 INFO=
 scheduler.DAGScheduler: running: Set()</p><p style=3D"padding: 0=
px; margin: 0px; font-weight: 400; text-align: left;">14/12/18 01=
:14:53 INFO scheduler.DAGScheduler: waiting: Set(Stage 0)</p><p s=
tyle=3D"padding: 0px; margin: 0px; font-weight: 400; text-align:=20=
left;">14/12/18 01:14:53 INFO scheduler.TaskSetManager: Finished=20=
task 0.0 in stage 1.0 (TID 0) in 1419 ms on localhost (1/1)</p><p=
 style=3D"padding: 0px; margin: 0px; font-weight: 400; text-align=
: left;">14/12/18 01:14:53 INFO scheduler.DAGScheduler: failed: S=
et()</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400;=20=
text-align: left;">14/12/18 01:14:53 INFO scheduler.TaskScheduler=
Impl: Removed TaskSet 1.0, whose tasks have all completed, from p=
ool</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; t=
ext-align: left;">14/12/18 01:14:53 INFO scheduler.DAGScheduler:=20=
Missing parents for Stage 0: List()</p><p style=3D"padding: 0px;=20=
margin: 0px; font-weight: 400; text-align: left;">14/12/18 01:14:=
53 INFO scheduler.DAGScheduler: Submitting Stage 0 (ShuffledRDD[1=
0] at reduceByKey at &lt;console&gt;:14), which is now runnable</=
p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-a=
lign: left;">14/12/18 01:14:53 INFO storage.MemoryStore: ensureFr=
eeSpace(2112) called with curMem=3D416753, maxMem=3D280248975</p>=
<p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-ali=
gn: left;">14/12/18 01:14:53 INFO storage.MemoryStore: Block broa=
dcast_5 stored as values in memory (estimated size 2.1 KB, free 2=
66.9 MB)</p><p style=3D"padding: 0px; margin: 0px; font-weight: 4=
00; text-align: left;">14/12/18 01:14:53 INFO scheduler.DAGSchedu=
ler: Submitting 1 missing tasks from Stage 0 (ShuffledRDD[10] at=20=
reduceByKey at &lt;console&gt;:14)</p><p style=3D"padding: 0px; m=
argin: 0px; font-weight: 400; text-align: left;">14/12/18 01:14:5=
3 INFO scheduler.TaskSchedulerImpl: Adding task set 0.0 with 1 ta=
sks</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; t=
ext-align: left;">14/12/18 01:14:53 INFO scheduler.TaskSetManager=
: Starting task 0.0 in stage 0.0 (TID 1, localhost, PROCESS_LOCAL=
, 948 bytes)</p><p style=3D"padding: 0px; margin: 0px; font-weigh=
t: 400; text-align: left;">14/12/18 01:14:53 INFO executor.Execut=
or: Running task 0.0 in stage 0.0 (TID 1)</p><p style=3D"padding:=
 0px; margin: 0px; font-weight: 400; text-align: left;">14/12/18=20=
01:14:53 INFO storage.BlockFetcherIterator$BasicBlockFetcherItera=
tor: maxBytesInFlight: 50331648, targetRequestSize: 10066329</p><=
p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-alig=
n: left;">14/12/18 01:14:53 INFO storage.BlockFetcherIterator$Bas=
icBlockFetcherIterator: Getting 1 non-empty blocks out of 1 block=
s</p><p style=3D"padding: 0px; margin: 0px; font-weight: 400; tex=
t-align: left;">14/12/18 01:14:53 INFO storage.BlockFetcherIterat=
or$BasicBlockFetcherIterator: Started 0 remote fetches in 5 ms</p=
><p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-al=
ign: left;">14/12/18 01:14:53 INFO executor.Executor: Finished ta=
sk 0.0 in stage 0.0 (TID 1). 8680 bytes result sent to driver</p>=
<p style=3D"padding: 0px; margin: 0px; font-weight: 400; text-ali=
gn: left;">14/12/18 01:14:53 INFO scheduler.DAGScheduler: Stage 0=
 (collect at &lt;console&gt;:14) finished in 0.108 s</p><p style=3D=
"padding: 0px; margin: 0px; font-weight: 400; text-align: left;">=
14/12/18 01:14:53 INFO scheduler.TaskSetManager: Finished task 0.=
0 in stage 0.0 (TID 1) in 99 ms on localhost (1/1)</p><p style=3D=
"padding: 0px; margin: 0px; font-weight: 400; text-align: left;">=
14/12/18 01:14:53 INFO scheduler.TaskSchedulerImpl: Removed TaskS=
et 0.0, whose tasks have all completed, from pool</p><p style=3D"=
padding: 0px; margin: 0px; font-weight: 400; text-align: left;">1=
4/12/18 01:14:53 INFO spark.SparkContext: Job finished: collect a=
t &lt;console&gt;:14, took 1.884598939 s</p><p style=3D"padding:=20=
0px; margin: 0px; font-weight: 400; text-align: left;">result: Ar=
ray[(String, Int)] =3D Array((For,5), (Programs,1), (gladly,1), (=
Because,1), (The,1), (agree,1), (cluster.,1), (webpage,1), (its,1=
), (-Pyarn,3), (under,2), (legal,1), (APIs,1), (1.x,,1), (computa=
tion,1), (Try,1), (MRv1,,1), (have,2), (Thrift,2), (add,2), (thro=
ugh,1), (several,1), (This,2), (Whether,1), ("yarn-cluster",1), (=
%,2), (graph,1), (storage,1), (To,2), (setting,2), (any,2), (Once=
,1), (application,1), (JDBC,3), (use:,1), (prefer,1), (SparkPi,2)=
, (engine,1), (version,3), (file,1), (documentation,,1), (process=
ing,,2), (Along,1), (the,28), (explicitly,,1), (entry,1), (author=
.,1), (are,2), (systems.,1), (params,1), (not,2), (different,1),=20=
(refer,1), (Interactive,2), (given.,1), (if,5), (`-Pyarn`:,1), (b=
uild,3), (when,3), (be,2), (Tests,1), (file's,1), (Apache,6), (./=
bin/run-e...</p></td></tr></tbody></table></div></div><p style=3D=
"padding-top:16px;font-style:normal;font-weight:400;text-align:ju=
stify;text-indent:0px;padding:0px;margin:0px 0px 16px;font-size:1=
rem;color:rgb(79, 79, 79)">&nbsp;</p><p style=3D"padding-top:16px=
;font-style:normal;font-weight:400;text-align:justify;text-indent=
:0px;padding:0px;margin:0px 0px 16px;font-size:1rem;color:rgb(79,=
 79, 79)">=B8=F9=BE=DD=BF=D5=B8=F1=C0=B4=C7=F8=B7=D6=B5=A5=B4=CA=BA=
=F3=A3=AC=B8=F7=B8=F6=B5=A5=B4=CA=B5=C4=CD=B3=BC=C6=BD=E1=B9=FB</=
p><article style=3D"display: block; padding-top: 16px; font-style=
: normal; font-weight: normal; text-align: start; text-indent: 0p=
x;"><br></article></div><div style=3D"padding:0px;margin:0px 0px=20=
16px;color:gray;font-size:0.875rem;font-style:normal;font-weight:=
normal;text-align:start;text-indent:0px;padding-top:16px"><small>=
=C0=B4=D4=B4=A3=BA&nbsp;<a href=3D"https://blog.csdn.net/huwenfen=
g_2011/article/details/43344361">https://blog.csdn.net/huwenfeng_=
2011/article/details/43344361</a></small></div></body></html>=0A=0A=
=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000424468.588--

------=_Next_Part_0001273404.038--

