From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?RmxpbmsgTWluaUNsdXN0ZXLX99K1zOG9uw==?=
Date: Date: Fri, 23 Jul 2021 05:54:34 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001264077.476"

This is a multi-part message in MIME format.

------=_Next_Part_0001264077.476
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000421359.041"


------=_Next_Part_0000421359.041
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000421359.041
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A=0A<t=
itle>Flink MiniCluster=D7=F7=D2=B5=CC=E1=BD=BB</title>=0A    =0A<=
style id=3D"wiz_custom_css">html, .wiz-editor-body {font-size: 12=
pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB',=
 '=E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91', 'Microsoft YaHei UI', Si=
mSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;p=
adding: 20px 16px;padding: 1.25rem 1rem;}.wiz-editor-body h1,.wiz=
-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-edit=
or-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem=
 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {fo=
nt-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18=
pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-siz=
e:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;=
}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-=
body h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1re=
m 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,=
.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {marg=
in:8px 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz=
-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor=
-body .CodeMirror pre {margin:0;}.wiz-editor-body ul,.wiz-editor-=
body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol=
.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-body=20=
ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-editor=
-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-=
editor-body blockquote {padding: 0 12px;}.wiz-editor-body blockqu=
ote > :first-child {margin-top:0;}.wiz-editor-body blockquote > :=
last-child {margin-bottom:0;}.wiz-editor-body img {border:0;max-w=
idth:100%;height:auto !important;margin:2px 0;}.wiz-editor-body t=
able {border-collapse:collapse;border:1px solid #bbbbbb;}.wiz-edi=
tor-body td,.wiz-editor-body th {padding:4px 8px;border-collapse:=
collapse;border:1px solid #bbbbbb;min-height:28px;word-break:brea=
k-word;box-sizing: border-box;}.wiz-hide {display:none !important=
;}</style></head>=0A=0A<body class=3D"wiz-editor-body" spellcheck=
=3D"false" ><div></div><h1 style=3D"font-size: 2rem; color: rgb(3=
6, 41, 46);"><font><font>Flink MiniCluster=D7=F7=D2=B5=CC=E1=BD=BB=
</font></font></h1><h2 style=3D"font-size: 1.5rem; color: rgb(36,=
 41, 46);"><font><font>=B3=CC=D0=F2=D4=B4=C2=EB</font></font></h2=
><ul style=3D"color: rgb(36, 41, 46);"><li><a href=3D"https://git=
hub.com/opensourceteams/flink-maven-scala" style=3D"color:rgb(3,=20=
102, 214);text-decoration:none;"><font><font>https://github.com/o=
pensourceteams/flink-maven-scala</font></font></a></li></ul><h2 s=
tyle=3D"font-size: 1.5rem; color: rgb(36, 41, 46);"><font><font>=B3=
=CC=D0=F2=D6=F7=D2=AA=BA=AF=CA=FDWordCount</font></font></h2><ul=20=
style=3D"color: rgb(36, 41, 46);"><li><font><font>SocketWindowWor=
dCount.scala</font></font></li><li><font><font>env.execute=A3=A8=A1=
=B0=C1=D9=CA=B1=D7=F7=D2=B5=A1=B1=A3=A9=B5=F7=D3=C3.LocalStreamEn=
vironment.execute=BA=AF=CA=FD</font></font></li></ul><pre style=3D=
"font-size: 0.85rem; color: rgb(36, 41, 46); background-color: rg=
b(246, 248, 250);"><code>=0Apackage com.opensourceteams.module.bi=
gdata.flink.example.stream.worldcount.nc=0A=0Aimport org.apache.f=
link.streaming.api.scala.StreamExecutionEnvironment=0Aimport org.=
apache.flink.streaming.api.windowing.time.Time=0A=0A/**=0A  * nc=20=
-lk 1234  =CA=E4=C8=EB=CA=FD=BE=DD=0A  */=0Aobject SocketWindowWo=
rdCount {=0A=0A  def main(args: Array[String]): Unit =3D {=0A=0A=0A=
    val port =3D 1234=0A    // get the execution environment=0A =20=
  val env: StreamExecutionEnvironment =3D StreamExecutionEnvironm=
ent.getExecutionEnvironment=0A=0A    // get input data by connect=
ing to the socket=0A    val dataStream =3D env.socketTextStream("=
localhost", port, '\n')=0A=0A=0A    import org.apache.flink.strea=
ming.api.scala._=0A    val textResult =3D dataStream.flatMap( w =3D=
&gt; w.split("\\s") ).map( w =3D&gt; WordWithCount(w,1))=0A     =20=
.keyBy("word")=0A      /**=0A        * =C3=BF5=C3=EB=CB=A2=D0=C2=D2=
=BB=B4=CE=A3=AC=CF=E0=B5=B1=D3=DA=D6=D8=D0=C2=BF=AA=CA=BC=BC=C6=CA=
=FD=A3=AC=0A        * =BA=C3=B4=A6=A3=AC=B2=BB=D0=E8=D2=AA=D2=BB=D6=
=B1=C4=C3=CB=F9=D3=D0=B5=C4=CA=FD=BE=DD=CD=B3=BC=C6=0A        * =D6=
=BB=D0=E8=D2=AA=D4=DA=D6=B8=B6=A8=CA=B1=BC=E4=BC=E4=B8=F4=C4=DA=B5=
=C4=D4=F6=C1=BF=CA=FD=BE=DD=A3=AC=BC=F5=C9=D9=C1=CB=CA=FD=BE=DD=B9=
=E6=C4=A3=0A        */=0A      .timeWindow(Time.seconds(5))=0A  =20=
   .sum("count" )=0A=0A    textResult.print().setParallelism(1)=0A=
=0A    if(args =3D=3D null || args.size =3D=3D0){=0A      env.exe=
cute("=C4=AC=C8=CF=D7=F7=D2=B5")=0A    }else{=0A      env.execute=
(args(0))=0A    }=0A=0A    println("=BD=E1=CA=F8")=0A=0A  }=0A=0A=
=0A  // Data type for words with count=0A  case class WordWithCou=
nt(word: String, count: Long)=0A=0A}=0A=0A</code></pre><h3 style=3D=
"font-size: 1.25rem; color: rgb(36, 41, 46);"><font><font>LocalSt=
reamEnvironment.execute</font></font></h3><ul style=3D"color: rgb=
(36, 41, 46);"><li><font><font>=D3=C3=D6=B8=B6=A8=B5=C4=D7=F7=D2=B5=
=C3=FB=B3=C6=A3=AC=D4=DAFlink miniCluster=C9=CF=D6=B4=D0=D0JobGra=
ph</font></font></li><li><font><font>getStreamGraph=A3=A8=A3=A9=B9=
=B9=BD=A8=CD=BC=C1=F7</font></font></li><li><font><font>streamGra=
ph.getJobGraph=A3=A8=A3=A9=B5=C3=B5=BD=D7=F7=D2=B5=CD=BC</font></=
font></li><li><font><font>=CD=A8=B9=FDMiniCluster=C5=E4=D6=C3=D6=D8=
=BD=A8MiniCluster</font></font></li><li><font><font>=C6=F4=B6=AFM=
iniCluster</font></font></li><li><font><font>=B5=F7=D3=C3=BA=AF=CA=
=FDminiCluster.executeJobBlocking=A3=A8jobGraph=A3=A9=CC=E1=BD=BB=
=D7=F7=D2=B5=CD=BC</font></font></li></ul><pre style=3D"font-size=
: 0.85rem; color: rgb(36, 41, 46); background-color: rgb(246, 248=
, 250);"><code>/**=0A	 * Executes the JobGraph of the on a mini c=
luster of CLusterUtil with a user=0A	 * specified name.=0A	 *=0A=09=
 * @param jobName=0A	 *            name of the job=0A	 * @return=20=
The result of the job execution, containing elapsed time and accu=
mulators.=0A	 */=0A	@Override=0A	public JobExecutionResult execut=
e(String jobName) throws Exception {=0A		// transform the streami=
ng program into a JobGraph=0A		StreamGraph streamGraph =3D getStr=
eamGraph();=0A		streamGraph.setJobName(jobName);=0A=0A		JobGraph=20=
jobGraph =3D streamGraph.getJobGraph();=0A		jobGraph.setAllowQueu=
edScheduling(true);=0A=0A		Configuration configuration =3D new Co=
nfiguration();=0A		configuration.addAll(jobGraph.getJobConfigurat=
ion());=0A		configuration.setString(TaskManagerOptions.MANAGED_ME=
MORY_SIZE, "0");=0A=0A		// add (and override) the settings with w=
hat the user defined=0A		configuration.addAll(this.configuration)=
;=0A=0A		if (!configuration.contains(RestOptions.PORT)) {=0A			co=
nfiguration.setInteger(RestOptions.PORT, 0);=0A		}=0A=0A		int num=
SlotsPerTaskManager =3D configuration.getInteger(TaskManagerOptio=
ns.NUM_TASK_SLOTS, jobGraph.getMaximumParallelism());=0A=0A		Mini=
ClusterConfiguration cfg =3D new MiniClusterConfiguration.Builder=
()=0A			.setConfiguration(configuration)=0A			.setNumSlotsPerTask=
Manager(numSlotsPerTaskManager)=0A			.build();=0A=0A		if (LOG.isI=
nfoEnabled()) {=0A			LOG.info("Running job on local embedded Flin=
k mini cluster");=0A		}=0A=0A		MiniCluster miniCluster =3D new Mi=
niCluster(cfg);=0A=0A		try {=0A			miniCluster.start();=0A			confi=
guration.setInteger(RestOptions.PORT, miniCluster.getRestAddress(=
).getPort());=0A=0A			return miniCluster.executeJobBlocking(jobGr=
aph);=0A		}=0A		finally {=0A			transformations.clear();=0A			mini=
Cluster.close();=0A		}=0A	}=0A=0A</code></pre><h3 style=3D"font-s=
ize: 1.25rem; color: rgb(36, 41, 46);"><font><font>miniCluster.ex=
ecuteJobBlocking</font></font></h3><ul style=3D"color: rgb(36, 41=
, 46);"><li><font><font>=B4=CB=B7=BD=B7=A8=CA=C7=CB=AB=CF=F2=C4=A3=
=CA=BD=A3=AC=D4=DA=D4=CB=D0=D0=B3=C9=B9=A6=BA=F3=BB=F2=CA=A7=B0=DC=
=BA=F3=B7=B5=BB=D8=BD=E1=B9=FB</font></font></li><li><font><font>=
=B5=F7=D3=C3=BA=AF=CA=FDsubmitJob=A3=A8job=A3=A9=CC=E1=BD=BB=D7=F7=
=D2=B5</font></font></li></ul><pre style=3D"font-size: 0.85rem; c=
olor: rgb(36, 41, 46); background-color: rgb(246, 248, 250);"><co=
de>/**=0A	 * This method runs a job in blocking mode. The method=20=
returns only after the job=0A	 * completed successfully, or after=
 it failed terminally.=0A	 *=0A	 * @param job  The Flink job to e=
xecute=0A	 * @return The result of the job execution=0A	 *=0A	 *=20=
@throws JobExecutionException Thrown if anything went amiss durin=
g initial job launch,=0A	 *         or if the job terminally fail=
ed.=0A	 */=0A	@Override=0A	public JobExecutionResult executeJobBl=
ocking(JobGraph job) throws JobExecutionException, InterruptedExc=
eption {=0A		checkNotNull(job, "job is null");=0A=0A		final Compl=
etableFuture&lt;JobSubmissionResult&gt; submissionFuture =3D subm=
itJob(job);=0A=0A		final CompletableFuture&lt;JobResult&gt; jobRe=
sultFuture =3D submissionFuture.thenCompose(=0A			(JobSubmissionR=
esult ignored) -&gt; requestJobResult(job.getJobID()));=0A=0A		fi=
nal JobResult jobResult;=0A=0A		try {=0A			jobResult =3D jobResul=
tFuture.get();=0A		} catch (ExecutionException e) {=0A			throw ne=
w JobExecutionException(job.getJobID(), "Could not retrieve JobRe=
sult.", ExceptionUtils.stripExecutionException(e));=0A		}=0A=0A	=09=
try {=0A			return jobResult.toJobExecutionResult(Thread.currentTh=
read().getContextClassLoader());=0A		} catch (IOException | Class=
NotFoundException e) {=0A			throw new JobExecutionException(job.g=
etJobID(), e);=0A		}=0A	}=0A</code></pre><h3 style=3D"font-size:=20=
1.25rem; color: rgb(36, 41, 46);"><font><font>SubmitJob=A3=A8=B9=A4=
=D7=F7=A3=A9</font></font></h3><ul style=3D"color: rgb(36, 41, 46=
);"><li><font><font>=B5=F7=D3=C3=BA=AF=CA=FDdispatcherGateway.sub=
mitJob=A3=A8jobGraph=A3=ACrpcTimeout=A3=A9</font></font></li></ul=
><pre style=3D"font-size: 0.85rem; color: rgb(36, 41, 46); backgr=
ound-color: rgb(246, 248, 250);"><code>public CompletableFuture&l=
t;JobSubmissionResult&gt; submitJob(JobGraph jobGraph) {=0A		fina=
l DispatcherGateway dispatcherGateway;=0A		try {=0A			dispatcherG=
ateway =3D getDispatcherGateway();=0A		} catch (LeaderRetrievalEx=
ception | InterruptedException e) {=0A			ExceptionUtils.checkInte=
rrupted(e);=0A			return FutureUtils.completedExceptionally(e);=0A=
		}=0A=0A		// we have to allow queued scheduling in Flip-6 mode b=
ecause we need to request slots=0A		// from the ResourceManager=0A=
		jobGraph.setAllowQueuedScheduling(true);=0A=0A		final Completab=
leFuture&lt;InetSocketAddress&gt; blobServerAddressFuture =3D cre=
ateBlobServerAddress(dispatcherGateway);=0A=0A		final Completable=
Future&lt;Void&gt; jarUploadFuture =3D uploadAndSetJobFiles(blobS=
erverAddressFuture, jobGraph);=0A=0A		final CompletableFuture&lt;=
Acknowledge&gt; acknowledgeCompletableFuture =3D jarUploadFuture.=
thenCompose(=0A			(Void ack) -&gt; dispatcherGateway.submitJob(jo=
bGraph, rpcTimeout));=0A=0A		return acknowledgeCompletableFuture.=
thenApply(=0A			(Acknowledge ignored) -&gt; new JobSubmissionResu=
lt(jobGraph.getJobID()));=0A	}=0A</code></pre><h3 style=3D"font-s=
ize: 1.25rem; color: rgb(36, 41, 46);"><font><font>Dispatcher.sub=
mitJob</font></font></h3><ul style=3D"color: rgb(36, 41, 46);"><l=
i><font><font>INFO=C8=D5=D6=BE=CA=E4=B3=F6=CC=E1=BD=BB=D7=F7=D2=B5=
=C3=FB=B3=C6</font></font></li><li><font><font>=B5=F7=D3=C3=BA=AF=
=CA=FDwaitForTerminateJobManager</font></font></li></ul><pre styl=
e=3D"font-size: 0.85rem; color: rgb(36, 41, 46); background-color=
: rgb(246, 248, 250);"><code>@Override=0A	public CompletableFutur=
e&lt;Acknowledge&gt; submitJob(JobGraph jobGraph, Time timeout) {=
=0A		final JobID jobId =3D jobGraph.getJobID();=0A=0A		log.info("=
Submitting job {} ({}).", jobId, jobGraph.getName());=0A		final R=
unningJobsRegistry.JobSchedulingStatus jobSchedulingStatus;=0A=0A=
		try {=0A			jobSchedulingStatus =3D runningJobsRegistry.getJobSc=
hedulingStatus(jobId);=0A		} catch (IOException e) {=0A			return=20=
FutureUtils.completedExceptionally(new FlinkException(String.form=
at("Failed to retrieve job scheduling status for job %s.", jobId)=
, e));=0A		}=0A=0A		if (jobSchedulingStatus =3D=3D RunningJobsReg=
istry.JobSchedulingStatus.DONE || jobManagerRunnerFutures.contain=
sKey(jobId)) {=0A			return FutureUtils.completedExceptionally(=0A=
				new JobSubmissionException(jobId, String.format("Job has alre=
ady been submitted and is in state %s.", jobSchedulingStatus)));=0A=
		} else {=0A			final CompletableFuture&lt;Acknowledge&gt; persis=
tAndRunFuture =3D waitForTerminatingJobManager(jobId, jobGraph, t=
his::persistAndRunJob)=0A				.thenApply(ignored -&gt; Acknowledge=
.get());=0A=0A			return persistAndRunFuture.exceptionally(=0A			=09=
(Throwable throwable) -&gt; {=0A					final Throwable strippedThro=
wable =3D ExceptionUtils.stripCompletionException(throwable);=0A=09=
				log.error("Failed to submit job {}.", jobId, strippedThrowabl=
e);=0A					throw new CompletionException(=0A						new JobSubmissi=
onException(jobId, "Failed to submit job.", strippedThrowable));=0A=
				});=0A		}=0A	}=0A</code></pre><h3 style=3D"font-size: 1.25rem=
; color: rgb(36, 41, 46);"><font><font>Dispatcher.waitForTerminat=
eJobManager</font></font></h3><ul style=3D"color: rgb(36, 41, 46)=
;"><li><font><font>=B5=F7=D3=C3=BA=AF=CA=FDaction.apply=A3=A8jobG=
raph=A3=A9</font></font></li></ul><pre style=3D"font-size: 0.85re=
m; color: rgb(36, 41, 46); background-color: rgb(246, 248, 250);"=
><code>private CompletableFuture&lt;Void&gt; waitForTerminatingJo=
bManager(JobID jobId, JobGraph jobGraph, FunctionWithException&lt=
;JobGraph, CompletableFuture&lt;Void&gt;, ?&gt; action) {=0A		fin=
al CompletableFuture&lt;Void&gt; jobManagerTerminationFuture =3D=20=
getJobTerminationFuture(jobId)=0A			.exceptionally((Throwable thr=
owable) -&gt; {=0A				throw new CompletionException(=0A					new D=
ispatcherException(=0A						String.format("Termination of previou=
s JobManager for job %s failed. Cannot submit job under the same=20=
job id.", jobId),=0A						throwable)); });=0A=0A		return jobManag=
erTerminationFuture.thenComposeAsync(=0A			FunctionUtils.unchecke=
dFunction((ignored) -&gt; {=0A				jobManagerTerminationFutures.re=
move(jobId);=0A				return action.apply(jobGraph);=0A			}),=0A			g=
etMainThreadExecutor());=0A	}</code></pre><pre style=3D"font-size=
: 0.85rem; color: rgb(36, 41, 46); background-color: rgb(246, 248=
, 250);"><code><pre><code> =D5=E2=C0=EF=B5=C4action.apply(jobGrap=
h);action=CA=C7 waitForTerminatingJobManager(jobId, jobGraph, thi=
s::runJob).thenApply(ignored -&gt; true);</code></pre><pre><code>=
=D6=D0=B5=C4</code><span style=3D"line-height: 1.7;">this::runJob=
 =D2=B2=BE=CD=CA=C7 Dispatcher.runJob </span></pre><br></code></p=
re><pre style=3D"font-size: 0.85rem; color: rgb(36, 41, 46); back=
ground-color: rgb(246, 248, 250);"><code><br></code></pre><pre st=
yle=3D"font-size: 0.85rem; color: rgb(36, 41, 46); background-col=
or: rgb(246, 248, 250);"><code>=0A=0A=0A</code></pre><h3 style=3D=
"font-size: 1.25rem; color: rgb(36, 41, 46);"><font><font>dispatc=
her.DefaultJobManagerRunnerFactory.createJobManagerRunner</font><=
/font></h3><ul style=3D"color: rgb(36, 41, 46);"><li><font><font>=
=D0=C2=B5=C4JobManagerRunner</font></font></li></ul><pre style=3D=
"font-size: 0.85rem; color: rgb(36, 41, 46); background-color: rg=
b(246, 248, 250);"><code>/**=0A	 * Singleton default factory for=20=
{@link JobManagerRunner}.=0A	 */=0A	public enum DefaultJobManager=
RunnerFactory implements JobManagerRunnerFactory {=0A		INSTANCE;=0A=
=0A		@Override=0A		public JobManagerRunner createJobManagerRunner=
(=0A				ResourceID resourceId,=0A				JobGraph jobGraph,=0A				Con=
figuration configuration,=0A				RpcService rpcService,=0A				High=
AvailabilityServices highAvailabilityServices,=0A				HeartbeatSer=
vices heartbeatServices,=0A				BlobServer blobServer,=0A				JobMa=
nagerSharedServices jobManagerServices,=0A				JobManagerJobMetric=
GroupFactory jobManagerJobMetricGroupFactory,=0A				FatalErrorHan=
dler fatalErrorHandler) throws Exception {=0A			return new JobMan=
agerRunner(=0A				resourceId,=0A				jobGraph,=0A				configuration=
,=0A				rpcService,=0A				highAvailabilityServices,=0A				heartbe=
atServices,=0A				blobServer,=0A				jobManagerServices,=0A				job=
ManagerJobMetricGroupFactory,=0A				fatalErrorHandler);=0A		}=0A=09=
}=0A</code></pre><h3 style=3D"font-size: 1.25rem; color: rgb(36,=20=
41, 46);"><font><font>JobManagerRunner</font></font></h3><ul styl=
e=3D"color: rgb(36, 41, 46);"><li><font><font>=D0=C2=B5=C4JobMast=
er</font></font></li></ul><pre style=3D"font-size: 0.85rem; color=
: rgb(36, 41, 46); background-color: rgb(246, 248, 250);"><code>/=
**=0A	 * Exceptions that occur while creating the JobManager or J=
obManagerRunner are directly=0A	 * thrown and not reported to the=
 given {@code FatalErrorHandler}.=0A	 *=0A	 * @throws Exception T=
hrown if the runner cannot be set up, because either one of the=0A=
	 *                   required services could not be started, ot=20=
the Job could not be initialized.=0A	 */=0A	public JobManagerRunn=
er(=0A			final ResourceID resourceId,=0A			final JobGraph jobGrap=
h,=0A			final Configuration configuration,=0A			final RpcService=20=
rpcService,=0A			final HighAvailabilityServices haServices,=0A		=09=
final HeartbeatServices heartbeatServices,=0A			final BlobServer=20=
blobServer,=0A			final JobManagerSharedServices jobManagerSharedS=
ervices,=0A			final JobManagerJobMetricGroupFactory jobManagerJob=
MetricGroupFactory,=0A			final FatalErrorHandler fatalErrorHandle=
r) throws Exception {=0A=0A		this.resultFuture =3D new Completabl=
eFuture&lt;&gt;();=0A		this.terminationFuture =3D new Completable=
Future&lt;&gt;();=0A=0A		// make sure we cleanly shut down out Jo=
bManager services if initialization fails=0A		try {=0A			this.job=
Graph =3D checkNotNull(jobGraph);=0A			this.jobManagerSharedServi=
ces =3D checkNotNull(jobManagerSharedServices);=0A			this.fatalEr=
rorHandler =3D checkNotNull(fatalErrorHandler);=0A=0A			checkArgu=
ment(jobGraph.getNumberOfVertices() &gt; 0, "The given job is emp=
ty");=0A=0A			// libraries and class loader first=0A			final Libr=
aryCacheManager libraryCacheManager =3D jobManagerSharedServices.=
getLibraryCacheManager();=0A			try {=0A				libraryCacheManager.re=
gisterJob(=0A						jobGraph.getJobID(), jobGraph.getUserJarBlobKe=
ys(), jobGraph.getClasspaths());=0A			} catch (IOException e) {=0A=
				throw new Exception("Cannot set up the user code libraries: "=
 + e.getMessage(), e);=0A			}=0A=0A			final ClassLoader userCodeL=
oader =3D libraryCacheManager.getClassLoader(jobGraph.getJobID())=
;=0A			if (userCodeLoader =3D=3D null) {=0A				throw new Exceptio=
n("The user code class loader could not be initialized.");=0A			}=
=0A=0A			// high availability services next=0A			this.runningJobs=
Registry =3D haServices.getRunningJobsRegistry();=0A			this.leade=
rElectionService =3D haServices.getJobManagerLeaderElectionServic=
e(jobGraph.getJobID());=0A=0A			final JobMasterConfiguration jobM=
asterConfiguration =3D JobMasterConfiguration.fromConfiguration(c=
onfiguration);=0A=0A			this.rpcTimeout =3D jobMasterConfiguration=
.getRpcTimeout();=0A=0A			this.leaderGatewayFuture =3D new Comple=
tableFuture&lt;&gt;();=0A=0A			final SlotPoolFactory slotPoolFact=
ory =3D DefaultSlotPoolFactory.fromConfiguration(=0A				configura=
tion,=0A				rpcService);=0A=0A			// now start the JobManager=0A	=09=
	this.jobMaster =3D new JobMaster(=0A				rpcService,=0A				jobMas=
terConfiguration,=0A				resourceId,=0A				jobGraph,=0A				haServi=
ces,=0A				slotPoolFactory,=0A				jobManagerSharedServices,=0A		=09=
	heartbeatServices,=0A				blobServer,=0A				jobManagerJobMetricGr=
oupFactory,=0A				this,=0A				fatalErrorHandler,=0A				userCodeLo=
ader);=0A		}=0A		catch (Throwable t) {=0A			terminationFuture.com=
pleteExceptionally(t);=0A			resultFuture.completeExceptionally(t)=
;=0A=0A			throw new JobExecutionException(jobGraph.getJobID(), "C=
ould not set up JobManager", t);=0A		}=0A	}=0A=0A=0A</code></pre>=
<h3 style=3D"font-size: 1.25rem; color: rgb(36, 41, 46);"><font><=
font>JobMaster</font></font></h3><ul style=3D"color: rgb(36, 41,=20=
46);"><li><font><font>=B3=F5=CA=BC=BB=AF=B9=A4=D7=F7</font></font=
></li><li><font><font>=B5=F7=D3=C3=BA=AF=CA=FDcreateAndRestoreExe=
cutionGraph</font></font></li></ul><pre style=3D"font-size: 0.85r=
em; color: rgb(36, 41, 46); background-color: rgb(246, 248, 250);=
"><code>public JobMaster(=0A			RpcService rpcService,=0A			JobMas=
terConfiguration jobMasterConfiguration,=0A			ResourceID resource=
Id,=0A			JobGraph jobGraph,=0A			HighAvailabilityServices highAva=
ilabilityService,=0A			SlotPoolFactory slotPoolFactory,=0A			JobM=
anagerSharedServices jobManagerSharedServices,=0A			HeartbeatServ=
ices heartbeatServices,=0A			BlobServer blobServer,=0A			JobManag=
erJobMetricGroupFactory jobMetricGroupFactory,=0A			OnCompletionA=
ctions jobCompletionActions,=0A			FatalErrorHandler fatalErrorHan=
dler,=0A			ClassLoader userCodeLoader) throws Exception {=0A=0A	=09=
super(rpcService, AkkaRpcServiceUtils.createRandomName(JOB_MANAGE=
R_NAME));=0A=0A		final JobMasterGateway selfGateway =3D getSelfGa=
teway(JobMasterGateway.class);=0A=0A		this.jobMasterConfiguration=
 =3D checkNotNull(jobMasterConfiguration);=0A		this.resourceId =3D=
 checkNotNull(resourceId);=0A		this.jobGraph =3D checkNotNull(job=
Graph);=0A		this.rpcTimeout =3D jobMasterConfiguration.getRpcTime=
out();=0A		this.highAvailabilityServices =3D checkNotNull(highAva=
ilabilityService);=0A		this.blobServer =3D checkNotNull(blobServe=
r);=0A		this.scheduledExecutorService =3D jobManagerSharedService=
s.getScheduledExecutorService();=0A		this.jobCompletionActions =3D=
 checkNotNull(jobCompletionActions);=0A		this.fatalErrorHandler =3D=
 checkNotNull(fatalErrorHandler);=0A		this.userCodeLoader =3D che=
ckNotNull(userCodeLoader);=0A		this.jobMetricGroupFactory =3D che=
ckNotNull(jobMetricGroupFactory);=0A=0A		this.taskManagerHeartbea=
tManager =3D heartbeatServices.createHeartbeatManagerSender(=0A	=09=
	resourceId,=0A			new TaskManagerHeartbeatListener(selfGateway),=0A=
			rpcService.getScheduledExecutor(),=0A			log);=0A=0A		this.reso=
urceManagerHeartbeatManager =3D heartbeatServices.createHeartbeat=
Manager(=0A				resourceId,=0A				new ResourceManagerHeartbeatList=
ener(),=0A				rpcService.getScheduledExecutor(),=0A				log);=0A=0A=
		final String jobName =3D jobGraph.getName();=0A		final JobID ji=
d =3D jobGraph.getJobID();=0A=0A		log.info("Initializing job {} (=
{}).", jobName, jid);=0A=0A		final RestartStrategies.RestartStrat=
egyConfiguration restartStrategyConfiguration =3D=0A				jobGraph.=
getSerializedExecutionConfig()=0A						.deserializeValue(userCode=
Loader)=0A						.getRestartStrategy();=0A=0A		this.restartStrateg=
y =3D RestartStrategyResolving.resolve(restartStrategyConfigurati=
on,=0A			jobManagerSharedServices.getRestartStrategyFactory(),=0A=
			jobGraph.isCheckpointingEnabled());=0A=0A		log.info("Using res=
tart strategy {} for {} ({}).", this.restartStrategy, jobName, ji=
d);=0A=0A		resourceManagerLeaderRetriever =3D highAvailabilitySer=
vices.getResourceManagerLeaderRetriever();=0A=0A		this.slotPool =3D=
 checkNotNull(slotPoolFactory).createSlotPool(jobGraph.getJobID()=
);=0A=0A		this.slotPoolGateway =3D slotPool.getSelfGateway(SlotPo=
olGateway.class);=0A=0A		this.registeredTaskManagers =3D new Hash=
Map&lt;&gt;(4);=0A=0A		this.backPressureStatsTracker =3D checkNot=
Null(jobManagerSharedServices.getBackPressureStatsTracker());=0A=09=
	this.lastInternalSavepoint =3D null;=0A=0A		this.jobManagerJobMe=
tricGroup =3D jobMetricGroupFactory.create(jobGraph);=0A		this.ex=
ecutionGraph =3D createAndRestoreExecutionGraph(jobManagerJobMetr=
icGroup);=0A		this.jobStatusListener =3D null;=0A=0A		this.resour=
ceManagerConnection =3D null;=0A		this.establishedResourceManager=
Connection =3D null;=0A	}=0A=0A</code></pre><h3 style=3D"font-siz=
e: 1.25rem; color: rgb(36, 41, 46);"><font><font>JobMaster.create=
AndRestoreExecutionGraph</font></font></h3><ul style=3D"color: rg=
b(36, 41, 46);"><li><font><font>=B5=F7=D3=C3=BA=AF=CA=FDcreateExe=
cutionGraph</font></font></li></ul><pre style=3D"font-size: 0.85r=
em; color: rgb(36, 41, 46); background-color: rgb(246, 248, 250);=
"><code>private ExecutionGraph createAndRestoreExecutionGraph(Job=
ManagerJobMetricGroup currentJobManagerJobMetricGroup) throws Exc=
eption {=0A=0A		ExecutionGraph newExecutionGraph =3D createExecut=
ionGraph(currentJobManagerJobMetricGroup);=0A=0A		final Checkpoin=
tCoordinator checkpointCoordinator =3D newExecutionGraph.getCheck=
pointCoordinator();=0A=0A		if (checkpointCoordinator !=3D null) {=
=0A			// check whether we find a valid checkpoint=0A			if (!check=
pointCoordinator.restoreLatestCheckpointedState(=0A				newExecuti=
onGraph.getAllVertices(),=0A				false,=0A				false)) {=0A=0A				/=
/ check whether we can restore from a savepoint=0A				tryRestoreE=
xecutionGraphFromSavepoint(newExecutionGraph, jobGraph.getSavepoi=
ntRestoreSettings());=0A			}=0A		}=0A=0A		return newExecutionGrap=
h;=0A	}=0A=0A</code></pre><h3 style=3D"font-size: 1.25rem; color:=
 rgb(36, 41, 46);"><font><font>JobMaster.createExecutionGraph</fo=
nt></font></h3><ul style=3D"color: rgb(36, 41, 46);"><li><font><f=
ont>=B5=F7=D3=C3ExecutionGraphBuilder.buildGraph</font></font></l=
i></ul><pre style=3D"font-size: 0.85rem; color: rgb(36, 41, 46);=20=
background-color: rgb(246, 248, 250);"><code>private ExecutionGra=
ph createExecutionGraph(JobManagerJobMetricGroup currentJobManage=
rJobMetricGroup) throws JobExecutionException, JobException {=0A=09=
	return ExecutionGraphBuilder.buildGraph(=0A			null,=0A			jobGrap=
h,=0A			jobMasterConfiguration.getConfiguration(),=0A			scheduled=
ExecutorService,=0A			scheduledExecutorService,=0A			slotPool.get=
SlotProvider(),=0A			userCodeLoader,=0A			highAvailabilityService=
s.getCheckpointRecoveryFactory(),=0A			rpcTimeout,=0A			restartSt=
rategy,=0A			currentJobManagerJobMetricGroup,=0A			blobServer,=0A=
			jobMasterConfiguration.getSlotRequestTimeout(),=0A			log);=0A=09=
}=0A=0A=0A</code></pre><h3 style=3D"font-size: 1.25rem; color: rg=
b(36, 41, 46);"><font><font>ExecutionGraphBuilder.buildGraph</fon=
t></font></h3><ul style=3D"color: rgb(36, 41, 46);"><li><font><fo=
nt>=B5=F7=D3=C3=BA=AF=CA=FDbuildGraph</font></font></li></ul><pre=
 style=3D"font-size: 0.85rem; color: rgb(36, 41, 46); background-=
color: rgb(246, 248, 250);"><code>/**=0A	 * Builds the ExecutionG=
raph from the JobGraph.=0A	 * If a prior execution graph exists,=20=
the JobGraph will be attached. If no prior execution=0A	 * graph=20=
exists, then the JobGraph will become attach to a new empty execu=
tion graph.=0A	 */=0A	public static ExecutionGraph buildGraph(=0A=
			@Nullable ExecutionGraph prior,=0A			JobGraph jobGraph,=0A			C=
onfiguration jobManagerConfig,=0A			ScheduledExecutorService futu=
reExecutor,=0A			Executor ioExecutor,=0A			SlotProvider slotProvi=
der,=0A			ClassLoader classLoader,=0A			CheckpointRecoveryFactory=
 recoveryFactory,=0A			Time rpcTimeout,=0A			RestartStrategy rest=
artStrategy,=0A			MetricGroup metrics,=0A			BlobWriter blobWriter=
,=0A			Time allocationTimeout,=0A			Logger log)=0A		throws JobExe=
cutionException, JobException {=0A=0A		return buildGraph(=0A			pr=
ior,=0A			jobGraph,=0A			jobManagerConfig,=0A			futureExecutor,=0A=
			ioExecutor,=0A			slotProvider,=0A			classLoader,=0A			recovery=
Factory,=0A			rpcTimeout,=0A			restartStrategy,=0A			metrics,=0A=09=
		-1,=0A			blobWriter,=0A			allocationTimeout,=0A			log);=0A	}=0A=
=0A=0A</code></pre><h3 style=3D"font-size: 1.25rem; color: rgb(36=
, 41, 46);"><font><font>ExecutionGraphBuilder.buildGraph</font></=
font></h3><ul style=3D"color: rgb(36, 41, 46);"><li><font><font>=C8=
=E7=B9=FB=C3=BB=D3=D0=CF=C8=C7=B0=D6=B4=D0=D0=CD=BC=B4=E6=D4=DA=A3=
=AC=C8=BB=BA=F3JobGraph=BD=AB=B8=BD=BC=D3=B5=BD=D2=BB=B8=F6=D0=C2=
=B5=C4=BF=D5=D6=B4=D0=D0=CD=BC=A1=A3=B4=D3=B4=D3JobGraph=C9=FA=B3=
=C9ExecutionGraph=A3=AC=C8=E7=B9=FB=B4=E6=D4=DA=CF=C8=C7=B0=B5=C4=
=D6=B4=D0=D0=CD=BC=A3=AC=D4=F2=BD=AB=B8=BD=BC=D3JobGraph=A1=A3</f=
ont></font></li><li><font><font>INFO=C8=D5=D6=BE=A3=BA=D4=DA=D6=F7=
=D7=F7=D2=B5=C9=CF=D4=CB=D0=D0=D7=F7=D2=B5=C4=AC=C8=CF=D7=F7=D2=B5=
=A3=A8239b80a2409163ab70426660441a9416=A3=A9=B5=C4=B3=F5=CA=BC=BB=
=AF=A1=A3</font></font></li><li><font><font>=D4=DA23307=BA=C1=C3=EB=
=C4=DA=B3=C9=B9=A6=D4=DAmaster=C9=CF=D4=CB=D0=D0=C1=CB=B3=F5=CA=BC=
=BB=AF=A1=A3</font></font></li><li><font><font>=BA=AF=CA=FD=B7=B5=
=BB=D8=D6=B4=D0=D0=CD=BC</font></font></li></ul><pre style=3D"fon=
t-size: 0.85rem; color: rgb(36, 41, 46); background-color: rgb(24=
6, 248, 250);"><code>=0A/**=0A	 * Builds the ExecutionGraph from=20=
the JobGraph.=0A	 * If a prior execution graph exists, the JobGra=
ph will be attached. If no prior execution=0A	 * graph exists, th=
en the JobGraph will become attach to a new empty execution graph=
.=0A	 */=0A	@Deprecated=0A	public static ExecutionGraph buildGrap=
h(=0A			@Nullable ExecutionGraph prior,=0A			JobGraph jobGraph,=0A=
			Configuration jobManagerConfig,=0A			ScheduledExecutorService=20=
futureExecutor,=0A			Executor ioExecutor,=0A			SlotProvider slotP=
rovider,=0A			ClassLoader classLoader,=0A			CheckpointRecoveryFac=
tory recoveryFactory,=0A			Time rpcTimeout,=0A			RestartStrategy=20=
restartStrategy,=0A			MetricGroup metrics,=0A			int parallelismFo=
rAutoMax,=0A			BlobWriter blobWriter,=0A			Time allocationTimeout=
,=0A			Logger log)=0A		throws JobExecutionException, JobException=
 {=0A=0A		checkNotNull(jobGraph, "job graph cannot be null");=0A=0A=
		final String jobName =3D jobGraph.getName();=0A		final JobID jo=
bId =3D jobGraph.getJobID();=0A=0A		final FailoverStrategy.Factor=
y failoverStrategy =3D=0A				FailoverStrategyLoader.loadFailoverS=
trategy(jobManagerConfig, log);=0A=0A		final JobInformation jobIn=
formation =3D new JobInformation(=0A			jobId,=0A			jobName,=0A		=09=
jobGraph.getSerializedExecutionConfig(),=0A			jobGraph.getJobConf=
iguration(),=0A			jobGraph.getUserJarBlobKeys(),=0A			jobGraph.ge=
tClasspaths());=0A=0A		// create a new execution graph, if none e=
xists so far=0A		final ExecutionGraph executionGraph;=0A		try {=0A=
			executionGraph =3D (prior !=3D null) ? prior :=0A				new Execu=
tionGraph(=0A					jobInformation,=0A					futureExecutor,=0A					i=
oExecutor,=0A					rpcTimeout,=0A					restartStrategy,=0A					fail=
overStrategy,=0A					slotProvider,=0A					classLoader,=0A					blo=
bWriter,=0A					allocationTimeout);=0A		} catch (IOException e) {=
=0A			throw new JobException("Could not create the ExecutionGraph=
.", e);=0A		}=0A=0A		// set the basic properties=0A=0A		execution=
Graph.setScheduleMode(jobGraph.getScheduleMode());=0A		executionG=
raph.setQueuedSchedulingAllowed(jobGraph.getAllowQueuedScheduling=
());=0A=0A		try {=0A			executionGraph.setJsonPlan(JsonPlanGenerat=
or.generatePlan(jobGraph));=0A		}=0A		catch (Throwable t) {=0A		=09=
log.warn("Cannot create JSON plan for job", t);=0A			// give the=20=
graph an empty plan=0A			executionGraph.setJsonPlan("{}");=0A		}=0A=
=0A		// initialize the vertices that have a master initialization=
 hook=0A		// file output formats create directories here, input f=
ormats create splits=0A=0A		final long initMasterStart =3D System=
.nanoTime();=0A		log.info("Running initialization on master for j=
ob {} ({}).", jobName, jobId);=0A=0A		for (JobVertex vertex : job=
Graph.getVertices()) {=0A			String executableClass =3D vertex.get=
InvokableClassName();=0A			if (executableClass =3D=3D null || exe=
cutableClass.isEmpty()) {=0A				throw new JobSubmissionException(=
jobId,=0A						"The vertex " + vertex.getID() + " (" + vertex.get=
Name() + ") has no invokable class.");=0A			}=0A=0A			if (vertex.=
getParallelism() =3D=3D ExecutionConfig.PARALLELISM_AUTO_MAX) {=0A=
				if (parallelismForAutoMax &lt; 0) {=0A					throw new JobSubmi=
ssionException(=0A						jobId,=0A						PARALLELISM_AUTO_MAX_ERROR=
_MESSAGE);=0A				}=0A				else {=0A					vertex.setParallelism(para=
llelismForAutoMax);=0A				}=0A			}=0A=0A			try {=0A				vertex.ini=
tializeOnMaster(classLoader);=0A			}=0A			catch (Throwable t) {=0A=
					throw new JobExecutionException(jobId,=0A							"Cannot init=
ialize task '" + vertex.getName() + "': " + t.getMessage(), t);=0A=
			}=0A		}=0A=0A		log.info("Successfully ran initialization on ma=
ster in {} ms.",=0A				(System.nanoTime() - initMasterStart) / 1_=
000_000);=0A=0A		// topologically sort the job vertices and attac=
h the graph to the existing one=0A		List&lt;JobVertex&gt; sortedT=
opology =3D jobGraph.getVerticesSortedTopologicallyFromSources();=
=0A		if (log.isDebugEnabled()) {=0A			log.debug("Adding {} vertic=
es from job graph {} ({}).", sortedTopology.size(), jobName, jobI=
d);=0A		}=0A		executionGraph.attachJobGraph(sortedTopology);=0A=0A=
		if (log.isDebugEnabled()) {=0A			log.debug("Successfully create=
d execution graph from job graph {} ({}).", jobName, jobId);=0A	=09=
}=0A=0A		// configure the state checkpointing=0A		JobCheckpointin=
gSettings snapshotSettings =3D jobGraph.getCheckpointingSettings(=
);=0A		if (snapshotSettings !=3D null) {=0A			List&lt;ExecutionJo=
bVertex&gt; triggerVertices =3D=0A					idToVertex(snapshotSetting=
s.getVerticesToTrigger(), executionGraph);=0A=0A			List&lt;Execut=
ionJobVertex&gt; ackVertices =3D=0A					idToVertex(snapshotSettin=
gs.getVerticesToAcknowledge(), executionGraph);=0A=0A			List&lt;E=
xecutionJobVertex&gt; confirmVertices =3D=0A					idToVertex(snaps=
hotSettings.getVerticesToConfirm(), executionGraph);=0A=0A			Comp=
letedCheckpointStore completedCheckpoints;=0A			CheckpointIDCount=
er checkpointIdCounter;=0A			try {=0A				int maxNumberOfCheckpoin=
tsToRetain =3D jobManagerConfig.getInteger(=0A						Checkpointing=
Options.MAX_RETAINED_CHECKPOINTS);=0A=0A				if (maxNumberOfCheckp=
ointsToRetain &lt;=3D 0) {=0A					// warning and use 1 as the def=
ault value if the setting in=0A					// state.checkpoints.max-reta=
ined-checkpoints is not greater than 0.=0A					log.warn("The sett=
ing for '{} : {}' is invalid. Using default value of {}",=0A				=09=
		CheckpointingOptions.MAX_RETAINED_CHECKPOINTS.key(),=0A							m=
axNumberOfCheckpointsToRetain,=0A							CheckpointingOptions.MAX_=
RETAINED_CHECKPOINTS.defaultValue());=0A=0A					maxNumberOfCheckp=
ointsToRetain =3D CheckpointingOptions.MAX_RETAINED_CHECKPOINTS.d=
efaultValue();=0A				}=0A=0A				completedCheckpoints =3D recovery=
Factory.createCheckpointStore(jobId, maxNumberOfCheckpointsToReta=
in, classLoader);=0A				checkpointIdCounter =3D recoveryFactory.c=
reateCheckpointIDCounter(jobId);=0A			}=0A			catch (Exception e)=20=
{=0A				throw new JobExecutionException(jobId, "Failed to initial=
ize high-availability checkpoint handler", e);=0A			}=0A=0A			//=20=
Maximum number of remembered checkpoints=0A			int historySize =3D=
 jobManagerConfig.getInteger(WebOptions.CHECKPOINTS_HISTORY_SIZE)=
;=0A=0A			CheckpointStatsTracker checkpointStatsTracker =3D new C=
heckpointStatsTracker(=0A					historySize,=0A					ackVertices,=0A=
					snapshotSettings.getCheckpointCoordinatorConfiguration(),=0A=
					metrics);=0A=0A			// The default directory for externalized=20=
checkpoints=0A			String externalizedCheckpointsDir =3D jobManager=
Config.getString(CheckpointingOptions.CHECKPOINTS_DIRECTORY);=0A=0A=
			// load the state backend from the application settings=0A			f=
inal StateBackend applicationConfiguredBackend;=0A			final Serial=
izedValue&lt;StateBackend&gt; serializedAppConfigured =3D snapsho=
tSettings.getDefaultStateBackend();=0A=0A			if (serializedAppConf=
igured =3D=3D null) {=0A				applicationConfiguredBackend =3D null=
;=0A			}=0A			else {=0A				try {=0A					applicationConfiguredBack=
end =3D serializedAppConfigured.deserializeValue(classLoader);=0A=
				} catch (IOException | ClassNotFoundException e) {=0A					thr=
ow new JobExecutionException(jobId,=0A							"Could not deseriali=
ze application-defined state backend.", e);=0A				}=0A			}=0A=0A=09=
		final StateBackend rootBackend;=0A			try {=0A				rootBackend =3D=
 StateBackendLoader.fromApplicationOrConfigOrDefault(=0A						app=
licationConfiguredBackend, jobManagerConfig, classLoader, log);=0A=
			}=0A			catch (IllegalConfigurationException | IOException | Dy=
namicCodeLoadingException e) {=0A				throw new JobExecutionExcept=
ion(jobId, "Could not instantiate configured state backend", e);=0A=
			}=0A=0A			// instantiate the user-defined checkpoint hooks=0A=0A=
			final SerializedValue&lt;MasterTriggerRestoreHook.Factory[]&gt=
; serializedHooks =3D snapshotSettings.getMasterHooks();=0A			fin=
al List&lt;MasterTriggerRestoreHook&lt;?&gt;&gt; hooks;=0A=0A			i=
f (serializedHooks =3D=3D null) {=0A				hooks =3D Collections.emp=
tyList();=0A			}=0A			else {=0A				final MasterTriggerRestoreHook=
.Factory[] hookFactories;=0A				try {=0A					hookFactories =3D se=
rializedHooks.deserializeValue(classLoader);=0A				}=0A				catch=20=
(IOException | ClassNotFoundException e) {=0A					throw new JobEx=
ecutionException(jobId, "Could not instantiate user-defined check=
point hooks", e);=0A				}=0A=0A				final Thread thread =3D Thread=
.currentThread();=0A				final ClassLoader originalClassLoader =3D=
 thread.getContextClassLoader();=0A				thread.setContextClassLoad=
er(classLoader);=0A=0A				try {=0A					hooks =3D new ArrayList&lt=
;&gt;(hookFactories.length);=0A					for (MasterTriggerRestoreHook=
.Factory factory : hookFactories) {=0A						hooks.add(MasterHooks=
.wrapHook(factory.create(), classLoader));=0A					}=0A				}=0A		=09=
	finally {=0A					thread.setContextClassLoader(originalClassLoade=
r);=0A				}=0A			}=0A=0A			final CheckpointCoordinatorConfigurati=
on chkConfig =3D snapshotSettings.getCheckpointCoordinatorConfigu=
ration();=0A=0A			executionGraph.enableCheckpointing(=0A				chkCo=
nfig.getCheckpointInterval(),=0A				chkConfig.getCheckpointTimeou=
t(),=0A				chkConfig.getMinPauseBetweenCheckpoints(),=0A				chkCo=
nfig.getMaxConcurrentCheckpoints(),=0A				chkConfig.getCheckpoint=
RetentionPolicy(),=0A				triggerVertices,=0A				ackVertices,=0A	=09=
		confirmVertices,=0A				hooks,=0A				checkpointIdCounter,=0A			=09=
completedCheckpoints,=0A				rootBackend,=0A				checkpointStatsTra=
cker);=0A		}=0A=0A		// create all the metrics for the Execution G=
raph=0A=0A		metrics.gauge(RestartTimeGauge.METRIC_NAME, new Resta=
rtTimeGauge(executionGraph));=0A		metrics.gauge(DownTimeGauge.MET=
RIC_NAME, new DownTimeGauge(executionGraph));=0A		metrics.gauge(U=
pTimeGauge.METRIC_NAME, new UpTimeGauge(executionGraph));=0A		met=
rics.gauge(NumberOfFullRestartsGauge.METRIC_NAME, new NumberOfFul=
lRestartsGauge(executionGraph));=0A=0A		executionGraph.getFailove=
rStrategy().registerMetrics(metrics);=0A=0A		return executionGrap=
h;=0A	}=0A=0A</code></pre><h3 style=3D"font-size: 1.25rem; color:=
 rgb(36, 41, 46);"><font><font>JobManagerRunner.grantLeadership</=
font></font></h3><ul style=3D"color: rgb(36, 41, 46);"><li><font>=
<font>=B5=F7=D3=C3=BA=AF=CA=FDverifyJobSchedulingStatusAndStartJo=
bManager=A3=A8leaderSessionID=A3=A9;</font></font></li></ul><pre=20=
style=3D"font-size: 0.85rem; color: rgb(36, 41, 46); background-c=
olor: rgb(246, 248, 250);"><code>	//-----------------------------=
-----------------------------------------------------------------=
=0A	// Leadership methods=0A	//----------------------------------=
------------------------------------------------------------=0A=0A=
	@Override=0A	public void grantLeadership(final UUID leaderSessio=
nID) {=0A		synchronized (lock) {=0A			if (shutdown) {=0A				log.i=
nfo("JobManagerRunner already shutdown.");=0A				return;=0A			}=0A=
=0A			try {=0A				verifyJobSchedulingStatusAndStartJobManager(lea=
derSessionID);=0A			} catch (Exception e) {=0A				handleJobManage=
rRunnerError(e);=0A			}=0A		}=0A	}=0A=0A</code></pre><h3 style=3D=
"font-size: 1.25rem; color: rgb(36, 41, 46);"><font><font>JobMana=
gerRunner.verifyJobSchedulingStatusAndStartJobManager</font></fon=
t></h3><ul style=3D"color: rgb(36, 41, 46);"><li><font><font>=D7=F7=
=D2=B5=C4=AC=C8=CF=D7=F7=D2=B5=A3=A88f3dc40e802309e580e7d685b3a40=
e78=A3=A9=B5=C4JobManager=D4=CB=D0=D0=D5=DF=B1=BB=CA=DA=D3=E8=C1=EC=
=B5=BC=C8=A8=A3=AC=C6=E4=BB=E1=BB=B0ID=CE=AA8e88e148-a755-4f1b-b7=
31-8744fb4c9483=A3=AC=CD=F8=D6=B7=CE=AAakka=A3=BA// flink / user=20=
/ jobmanager_1=A1=A3</font></font></li><li><font><font>=B5=F7=D3=C3=
=BA=AF=CA=FD=A3=BAjobMaster.start</font></font></li></ul><pre sty=
le=3D"font-size: 0.85rem; color: rgb(36, 41, 46); background-colo=
r: rgb(246, 248, 250);"><code>=0Aprivate void verifyJobScheduling=
StatusAndStartJobManager(UUID leaderSessionId) throws Exception {=
=0A		final JobSchedulingStatus jobSchedulingStatus =3D runningJob=
sRegistry.getJobSchedulingStatus(jobGraph.getJobID());=0A=0A		if=20=
(jobSchedulingStatus =3D=3D JobSchedulingStatus.DONE) {=0A			log.=
info("Granted leader ship but job {} has been finished. ", jobGra=
ph.getJobID());=0A			jobFinishedByOther();=0A		} else {=0A			log.=
info("JobManager runner for job {} ({}) was granted leadership wi=
th session id {} at {}.",=0A				jobGraph.getName(), jobGraph.getJ=
obID(), leaderSessionId, getAddress());=0A=0A			runningJobsRegist=
ry.setJobRunning(jobGraph.getJobID());=0A=0A			final CompletableF=
uture&lt;Acknowledge&gt; startFuture =3D jobMaster.start(new JobM=
asterId(leaderSessionId), rpcTimeout);=0A			final CompletableFutu=
re&lt;JobMasterGateway&gt; currentLeaderGatewayFuture =3D leaderG=
atewayFuture;=0A=0A			startFuture.whenCompleteAsync(=0A				(Ackno=
wledge ack, Throwable throwable) -&gt; {=0A					if (throwable !=3D=
 null) {=0A						handleJobManagerRunnerError(new FlinkException("=
Could not start the job manager.", throwable));=0A					} else {=0A=
						confirmLeaderSessionIdIfStillLeader(leaderSessionId, curren=
tLeaderGatewayFuture);=0A					}=0A				},=0A				jobManagerSharedSe=
rvices.getScheduledExecutorService());=0A		}=0A	}=0A=0A</code></p=
re><h3 style=3D"font-size: 1.25rem; color: rgb(36, 41, 46);"><fon=
t><font>JobMaster.start</font></font></h3><ul style=3D"color: rgb=
(36, 41, 46);"><li><font><font>=B5=F7=D3=C3=BA=AF=CA=FDstartJobEx=
ecution=A3=A8=A3=A9=C6=F4=B6=AFJobExecution=A3=A8=A3=A9</font></f=
ont></li></ul><pre style=3D"font-size: 0.85rem; color: rgb(36, 41=
, 46); background-color: rgb(246, 248, 250);"><code>	/**=0A	 * St=
art the rpc service and begin to run the job.=0A	 *=0A	 * @param=20=
newJobMasterId The necessary fencing token to run the job=0A	 * @=
param timeout for the operation=0A	 * @return Future acknowledge=20=
if the job could be started. Otherwise the future contains an exc=
eption=0A	 */=0A	public CompletableFuture&lt;Acknowledge&gt; star=
t(final JobMasterId newJobMasterId, final Time timeout) throws Ex=
ception {=0A		// make sure we receive RPC and async calls=0A		sup=
er.start();=0A=0A		return callAsyncWithoutFencing(() -&gt; startJ=
obExecution(newJobMasterId), timeout);=0A	}=0A</code></pre><h3 st=
yle=3D"font-size: 1.25rem; color: rgb(36, 41, 46);"><font><font>J=
obMaster.startJobExecution</font></font></h3><ul style=3D"color:=20=
rgb(36, 41, 46);"><li><font><font>INFO=C8=D5=D6=BE=CA=E4=B3=F6=A3=
=BA=BF=AA=CA=BC=D6=B4=D0=D0=D7=F7=D2=B5=C4=AC=C8=CF=D7=F7=D2=B5=A3=
=A88f3dc40e802309e580e7d685b3a40e78=A3=A9</font></font></li></ul>=
<pre style=3D"font-size: 0.85rem; color: rgb(36, 41, 46); backgro=
und-color: rgb(246, 248, 250);"><code>//-- job starting and stopp=
ing  ------------------------------------------------------------=
-----=0A=0A	private Acknowledge startJobExecution(JobMasterId new=
JobMasterId) throws Exception {=0A		validateRunsInMainThread();=0A=
=0A		checkNotNull(newJobMasterId, "The new JobMasterId must not b=
e null.");=0A=0A		if (Objects.equals(getFencingToken(), newJobMas=
terId)) {=0A			log.info("Already started the job execution with J=
obMasterId {}.", newJobMasterId);=0A=0A			return Acknowledge.get(=
);=0A		}=0A=0A		setNewFencingToken(newJobMasterId);=0A=0A		startJ=
obMasterServices();=0A=0A		log.info("Starting execution of job {}=
 ({})", jobGraph.getName(), jobGraph.getJobID());=0A=0A		resetAnd=
ScheduleExecutionGraph();=0A=0A		return Acknowledge.get();=0A	}=0A=
=0A</code></pre><h3 style=3D"font-size: 1.25rem; color: rgb(36, 4=
1, 46);"><font><font>ExecutionGraph.scheduleForExecution</font></=
font></h3><ul style=3D"color: rgb(36, 41, 46);"><li><font><font>=B5=
=F7=D3=C3=BA=AF=CA=FDtransitionState</font></font></li></ul><pre=20=
style=3D"font-size: 0.85rem; color: rgb(36, 41, 46); background-c=
olor: rgb(246, 248, 250);"><code>=0Apublic void scheduleForExecut=
ion() throws JobException {=0A=0A		final long currentGlobalModVer=
sion =3D globalModVersion;=0A=0A		if (transitionState(JobStatus.C=
REATED, JobStatus.RUNNING)) {=0A=0A			final CompletableFuture&lt;=
Void&gt; newSchedulingFuture;=0A=0A			switch (scheduleMode) {=0A=0A=
				case LAZY_FROM_SOURCES:=0A					newSchedulingFuture =3D schedu=
leLazy(slotProvider);=0A					break;=0A=0A				case EAGER:=0A					n=
ewSchedulingFuture =3D scheduleEager(slotProvider, allocationTime=
out);=0A					break;=0A=0A				default:=0A					throw new JobExcepti=
on("Schedule mode is invalid.");=0A			}=0A=0A			if (state =3D=3D=20=
JobStatus.RUNNING &amp;&amp; currentGlobalModVersion =3D=3D globa=
lModVersion) {=0A				schedulingFuture =3D newSchedulingFuture;=0A=
=0A				newSchedulingFuture.whenCompleteAsync(=0A					(Void ignore=
d, Throwable throwable) -&gt; {=0A						if (throwable !=3D null &=
amp;&amp; !(throwable instanceof CancellationException)) {=0A			=09=
			// only fail if the scheduling future was not canceled=0A				=09=
		failGlobal(ExceptionUtils.stripCompletionException(throwable));=
=0A						}=0A					},=0A					futureExecutor);=0A			} else {=0A			=09=
newSchedulingFuture.cancel(false);=0A			}=0A		}=0A		else {=0A			t=
hrow new IllegalStateException("Job may only be scheduled from st=
ate " + JobStatus.CREATED);=0A		}=0A	}=0A=0A</code></pre><h3 styl=
e=3D"font-size: 1.25rem; color: rgb(36, 41, 46);"><font><font>Exe=
cutionGraph.transitionState</font></font></h3><ul style=3D"color:=
 rgb(36, 41, 46);"><li><font><font>=B5=F7=D3=C3=BA=AF=CA=FDtransi=
tionState</font></font></li></ul><pre style=3D"font-size: 0.85rem=
; color: rgb(36, 41, 46); background-color: rgb(246, 248, 250);">=
<code>	// -------------------------------------------------------=
-----------------=0A	//  State Transitions=0A	// ----------------=
--------------------------------------------------------=0A=0A	pr=
ivate boolean transitionState(JobStatus current, JobStatus newSta=
te) {=0A		return transitionState(current, newState, null);=0A	}=0A=
</code></pre><h3 style=3D"font-size: 1.25rem; color: rgb(36, 41,=20=
46);"><font><font>ExecutionGraph.transitionState</font></font></h=
3><ul style=3D"color: rgb(36, 41, 46);"><li><font><font>=D7=F7=D2=
=B5=C4=AC=C8=CF=D7=F7=D2=B5=A3=A88f3dc40e802309e580e7d685b3a40e78=
=A3=A9=B4=D3=A1=B0=D2=D1=B4=B4=BD=A8=A1=B1=D7=B4=CC=AC=C7=D0=BB=BB=
=CE=AA=A1=B0=D5=FD=D4=DA=D4=CB=D0=D0=A1=B1=A1=A3</font></font></l=
i></ul><pre style=3D"font-size: 0.85rem; color: rgb(36, 41, 46);=20=
background-color: rgb(246, 248, 250);"><code>private boolean tran=
sitionState(JobStatus current, JobStatus newState, Throwable erro=
r) {=0A		// consistency check=0A		if (current.isTerminalState())=20=
{=0A			String message =3D "Job is trying to leave terminal state=20=
" + current;=0A			LOG.error(message);=0A			throw new IllegalState=
Exception(message);=0A		}=0A=0A		// now do the actual state trans=
ition=0A		if (STATE_UPDATER.compareAndSet(this, current, newState=
)) {=0A			LOG.info("Job {} ({}) switched from state {} to {}.", g=
etJobName(), getJobID(), current, newState, error);=0A=0A			state=
Timestamps[newState.ordinal()] =3D System.currentTimeMillis();=0A=
			notifyJobStatusChange(newState, error);=0A			return true;=0A	=09=
}=0A		else {=0A			return false;=0A		}=0A	}=0A</code></pre><p styl=
e=3D"color: rgb(36, 41, 46);"><font><font>=BD=E1=CA=F8</font></fo=
nt><br></p><div style=3D"color:gray"><small>=C0=B4=D4=B4=A3=BA&nb=
sp;<a href=3D"https://github.com/opensourceteams/flink-maven-scal=
a/blob/master/md/miniCluster/MiniCluster-job-submit.md">https://g=
ithub.com/opensourceteams/flink-maven-scala/blob/master/md/miniCl=
uster/MiniCluster-job-submit.md</a></small></div></body></html>=0A=
=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000421359.041--

------=_Next_Part_0001264077.476--

