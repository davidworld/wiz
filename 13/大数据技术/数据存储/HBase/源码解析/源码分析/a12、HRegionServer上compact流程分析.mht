From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?YTEyoaJIUmVnaW9uU2VydmVyyc9jb21wYWN0wfezzLfWzvY=?=
Date: Date: Fri, 23 Jul 2021 05:53:24 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001053234.962"

This is a multi-part message in MIME format.

------=_Next_Part_0001053234.962
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000351078.080"


------=_Next_Part_0000351078.080
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000351078.080
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A=0A=0A=
=0A=0A=0A=0A=0A<title>a12=A1=A2HRegionServer=C9=CFcompact=C1=F7=B3=
=CC=B7=D6=CE=F6</title>=0A    =0A<style id=3D"wiz_custom_css">htm=
l, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {font-fami=
ly: Helvetica, 'Hiragino Sans GB', '=E5=BE=AE=E8=BD=AF=E9=9B=85=E9=
=BB=91', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;=
line-height: 1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25r=
em 1rem;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body=
 h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {=
margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weig=
ht: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}=
.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor=
-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {=
font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:=
12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-siz=
e:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-e=
ditor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-=
body dl,.wiz-editor-body li {margin:8px 0;}.wiz-editor-body block=
quote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-bod=
y code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;=
}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px;paddi=
ng-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-styl=
e-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-st=
yle-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {l=
ist-style-type:lower-roman;}.wiz-editor-body blockquote {padding:=
 0 12px;}.wiz-editor-body blockquote > :first-child {margin-top:0=
;}.wiz-editor-body blockquote > :last-child {margin-bottom:0;}.wi=
z-editor-body img {border:0;max-width:100%;height:auto !important=
;margin:2px 0;}.wiz-editor-body table {border-collapse:collapse;b=
order:1px solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th=20=
{padding:4px 8px;border-collapse:collapse;border:1px solid #bbbbb=
b;min-height:28px;word-break:break-word;box-sizing: border-box;}.=
wiz-hide {display:none !important;}</style></head>=0A=0A<body cla=
ss=3D"wiz-editor-body" spellcheck=3D"false" ><div><br></div><div>=
<span>HBase=D4=B4=C2=EB=B7=D6=CE=F6=D6=AEHRegionServer=C9=CFcompa=
ct=C1=F7=B3=CC=B7=D6=CE=F6</span><br><div>lipeng_bigdata 2016-03-=
05 17:51:17&nbsp; 2909&nbsp; =CA=D5=B2=D8 1</div><div>=B7=D6=C0=E0=
=D7=A8=C0=B8=A3=BA HBase1.0.2=D4=B4=C2=EB=B7=D6=CE=F6</div><div>=B0=
=E6=C8=A8</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =C7=B0=C3=E6=C8=FD=
=C6=AA=CE=C4=D5=C2=D6=D0=A3=AC=CE=D2=C3=C7=CF=EA=CF=B8=D0=F0=CA=F6=
=C1=CBcompact=C1=F7=B3=CC=CA=C7=C8=E7=BA=CE=D4=DAHRegion=C9=CF=BD=
=F8=D0=D0=B5=C4=A3=AC=C1=CB=BD=E2=C1=CB=CB=FC=B5=C4=BA=DC=B6=E0=CF=
=B8=BD=DA=B7=BD=C3=E6=B5=C4=CE=CA=CC=E2=A1=A3=B5=AB=CA=C7=A3=AC=D5=
=E2=B8=F6compact=D4=DAHRegionServer=C9=CF=CA=C7=C8=E7=BA=CE=BD=F8=
=D0=D0=B5=C4=A3=BF=BA=CF=B2=A2=CA=B1=CE=C4=BC=FE=CA=C7=C8=E7=BA=CE=
=D1=A1=D4=F1=B5=C4=C4=D8=A3=BF=D4=DA=D5=E2=C6=AA=CE=C4=D5=C2=D6=D0=
=A3=AC=C4=E3=BD=AB=D5=D2=B5=BD=B4=F0=B0=B8=A3=A1</div><br><div>&n=
bsp; &nbsp; &nbsp; &nbsp; =CA=D7=CF=C8=A3=AC=D4=DAHRegionServer=C4=
=DA=B2=BF=A3=AC=CE=D2=C3=C7=B7=A2=CF=D6=A3=AC=CB=FC=B6=A8=D2=E5=C1=
=CB=D2=BB=B8=F6CompactSplitThread=C0=E0=D0=CD=B5=C4=B3=C9=D4=B1=B1=
=E4=C1=BFcompactSplitThread=A3=AC=B5=A5=BF=B4=D7=D6=C3=E6=D2=E2=CB=
=BC=A3=AC=D5=E2=BE=CD=CA=C7=D2=BB=B8=F6=BA=CF=B2=A2=B7=D6=C1=D1=CF=
=DF=B3=CC=A3=AC=C4=C7=C3=B4=CB=FC=BB=E1=B2=BB=BB=E1=BE=CD=CA=C7HR=
egionServer=C9=CF=BE=DF=CC=E5=D6=B4=D0=D0=BA=CF=B2=A2=B5=C4=B9=A4=
=D7=F7=CF=DF=B3=CC=C4=D8=A3=BF=CE=D2=C3=C7=D2=BB=B2=BD=D2=BB=B2=BD=
=C0=B4=BF=B4=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =D2=AA=
=C1=CB=BD=E2=CB=FC=CA=C7=CA=B2=C3=B4=A3=AC=C4=DC=B9=BB=D7=F6=CA=B2=
=C3=B4=A3=AC=C4=C7=C3=B4=BE=CD=B1=D8=D0=EB=D2=AA=BF=B4=BF=B4=CB=FC=
=B5=C4=CA=B5=CF=D6=A3=AC=D5=D2=B5=BDCompactSplitThread=C0=E0=A3=AC=
so=A3=AC=BF=AA=CA=BC=CE=D2=C3=C7=B5=C4=B7=D6=CE=F6=D6=AE=C2=C3=B0=
=C9=A3=A1</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =CA=D7=CF=C8=A3=
=AC=BF=B4=CF=C2CompactSplitThread=D6=D0=B6=BC=B6=A8=D2=E5=BF=C9=C4=
=C4=D0=A9=B1=E4=C1=BF=A3=AC=C8=E7=CF=C2=A3=BA</div><br><div>// Co=
nfiguration key for the large compaction threads.</div><div>&nbsp=
; // large=BA=CF=B2=A2=CF=DF=B3=CC=CA=FD=B2=CE=CA=FDhbase.regions=
erver.thread.compaction.large=A3=AC=C4=AC=C8=CF=D6=B5=CE=AA1</div=
><div>&nbsp; public final static String LARGE_COMPACTION_THREADS=20=
=3D</div><div>&nbsp; &nbsp; &nbsp; "hbase.regionserver.thread.com=
paction.large";</div><div>&nbsp; public final static int LARGE_CO=
MPACTION_THREADS_DEFAULT =3D 1;</div><div>&nbsp; </div><div>&nbsp=
; // Configuration key for the small compaction threads.</div><di=
v>&nbsp; // small=BA=CF=B2=A2=CF=DF=B3=CC=CA=FD=B2=CE=CA=FDhbase.=
regionserver.thread.compaction.small=A3=AC=C4=AC=C8=CF=D6=B5=CE=AA=
1</div><div>&nbsp; public final static String SMALL_COMPACTION_TH=
READS =3D</div><div>&nbsp; &nbsp; &nbsp; "hbase.regionserver.thre=
ad.compaction.small";</div><div>&nbsp; public final static int SM=
ALL_COMPACTION_THREADS_DEFAULT =3D 1;</div><div>&nbsp; </div><div=
>&nbsp; // Configuration key for split threads</div><div>&nbsp; /=
/ =B7=D6=C1=D1=CF=DF=B3=CC=CA=FD=B2=CE=CA=FDhbase.regionserver.th=
read.split=A3=AC=C4=AC=C8=CF=D6=B5=CE=AA1</div><div>&nbsp; public=
 final static String SPLIT_THREADS =3D "hbase.regionserver.thread=
.split";</div><div>&nbsp; public final static int SPLIT_THREADS_D=
EFAULT =3D 1;</div><div>&nbsp; </div><div>&nbsp; // Configuration=
 keys for merge threads</div><div>&nbsp; // merge=BA=CF=B2=A2=CF=DF=
=B3=CC=CA=FD=B2=CE=CA=FDhbase.regionserver.thread.merge=A3=AC=C4=AC=
=C8=CF=D6=B5=CE=AA1</div><div>&nbsp; public final static String M=
ERGE_THREADS =3D "hbase.regionserver.thread.merge";</div><div>&nb=
sp; public final static int MERGE_THREADS_DEFAULT =3D 1;</div><di=
v>&nbsp;</div><div>&nbsp; // Region=B7=D6=B7=D6=C1=D1=B5=C4=CF=DE=
=D6=C6</div><div>&nbsp; public static final String REGION_SERVER_=
REGION_SPLIT_LIMIT =3D</div><div>&nbsp; &nbsp; &nbsp; "hbase.regi=
onserver.regionSplitLimit";</div><div>&nbsp; // Region=B7=D6=B7=D6=
=C1=D1=B5=C4=CF=DE=D6=C6=C4=AC=C8=CF=D6=B5=A3=AC=CE=AA1000</div><=
div>&nbsp; public static final int DEFAULT_REGION_SERVER_REGION_S=
PLIT_LIMIT=3D 1000;</div><div>&nbsp; </div><div>&nbsp; // HRegion=
Server=CA=B5=C0=FDserver</div><div>&nbsp; private final HRegionSe=
rver server;</div><div>&nbsp; </div><div>&nbsp; // Configuration=C5=
=E4=D6=C3=CA=B5=C0=FDconf</div><div>&nbsp; private final Configur=
ation conf;</div><div>&nbsp;</div><div>&nbsp; // long=BA=CF=B2=A2=
=CF=DF=B3=CC=B3=D8longCompactions</div><div>&nbsp; private final=20=
ThreadPoolExecutor longCompactions;</div><div>&nbsp; // short=BA=CF=
=B2=A2=CF=DF=B3=CC=B3=D8shortCompactions</div><div>&nbsp; private=
 final ThreadPoolExecutor shortCompactions;</div><div>&nbsp; // =B7=
=D6=C1=D1=CF=DF=B3=CC=B3=D8splits</div><div>&nbsp; private final=20=
ThreadPoolExecutor splits;</div><div>&nbsp; // merge=BA=CF=B2=A2=CF=
=DF=B3=CC=B3=D8mergePool</div><div>&nbsp; private final ThreadPoo=
lExecutor mergePool;</div><div>&nbsp;</div><div>&nbsp; /**</div><=
div>&nbsp;&nbsp; * Splitting should not take place if the total n=
umber of regions exceed this.</div><div>&nbsp;&nbsp; * =C8=E7=B9=FB=
region=B5=C4=D7=DC=CA=FD=B3=AC=B9=FD=D5=E2=B8=F6=CF=DE=D6=C6=A3=AC=
split=BE=CD=B2=BB=D3=A6=B8=C3=B7=A2=C9=FA=A1=A3</div><div>&nbsp;&=
nbsp; * This is not a hard limit to the number of regions but it=20=
is a guideline to</div><div>&nbsp;&nbsp; * stop splitting after n=
umber of online regions is greater than this.</div><div>&nbsp;&nb=
sp; * =D5=E2=B2=BB=CA=C7=D2=BB=B8=F6=D3=B2=D0=D4=B5=C4Region=CA=FD=
=C4=BF=B5=C4=CF=DE=D6=C6=A3=AC=B5=AB=CA=C7=C8=E7=B9=FB=D4=DA=CF=DF=
region=B5=C4=CA=FD=C4=BF=B3=AC=B9=FD=B4=CB=CF=DE=D6=C6=CB=FC=BB=E1=
=CA=C7=D2=BB=B8=F6=CD=A3=D6=B9split=B5=C4=D6=B8=C4=CF=A1=A3</div>=
<div>&nbsp;&nbsp; */</div><div>&nbsp; private int regionSplitLimi=
t;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =C6=E4=D6=D0=A3=AC=B9=D8=
=D3=DARegion=B5=C4Spilt=A1=A2Merge=CF=E0=B9=D8=B5=C4=B3=C9=D4=B1=B1=
=E4=C1=BF=CE=D2=C3=C7=D4=DD=CA=B1=BA=F6=C2=D4=A3=AC=B5=C8=B5=BD=D7=
=A8=C3=C5=BD=B2=BD=E2split=A1=A2merge=CA=B1=D4=D9=B5=A5=B6=C0=BD=E9=
=C9=DC=A1=A3=D5=E2=C0=EF=A3=AC=CF=C8=C1=CB=BD=E2=CF=C2CompactSpli=
tThread=D6=D0=B6=BC=D3=D0=C4=C4=D0=A9=B9=D8=D3=DAcompact=B5=C4=B3=
=C9=D4=B1=B1=E4=C1=BF=A3=AC=B4=F3=CC=E5=BF=C9=D2=D4=B7=D6=CE=AA=C8=
=FD=C0=E0=A3=BA</div><div>&nbsp; &nbsp; &nbsp; &nbsp; 1=A1=A2=B5=DA=
=D2=BB=C0=E0=CA=C7=C5=E4=D6=C3=B2=CE=CA=FD=BC=B0=C6=E4=C4=AC=C8=CF=
=D6=B5=CF=E0=B9=D8=B5=C4=A3=AC=C9=E6=BC=B0=B5=BDlarge=A1=A2small=BA=
=CF=B2=A2=CF=DF=B3=CC=CA=FD=B2=CE=CA=FD=BA=CD=C6=E4=C4=AC=C8=CF=D6=
=B5=D2=D4=BC=B0HBase=D5=FB=CC=E5=C5=E4=D6=C3=B1=E4=C1=BFConfigura=
tion=C0=E0=D0=CD=B5=C4conf=A3=BB</div><br><div>&nbsp; &nbsp; &nbs=
p; &nbsp; 2=A1=A2=B5=DA=B6=FE=C0=E0=CA=C7=CF=DF=B3=CC=B3=D8=A3=AC=
=B0=FC=C0=A8long=BA=CF=B2=A2=CF=DF=B3=CC=B3=D8longCompactions=BA=CD=
short=BA=CF=B2=A2=CF=DF=B3=CC=B3=D8shortCompactions=A3=AC=CB=FC=C3=
=C7=CD=B3=D2=BB=CA=B9=D3=C3=B5=C4Java=D6=D0=B5=C4ThreadPoolExecut=
or=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 3=A1=A2=B5=DA=C8=
=FD=C0=E0=CA=C7CompactSplitThread=B5=C4=D4=D8=CC=E5=A3=AC=BB=F2=D5=
=DF=CB=B5=B9=A4=D7=F7=B5=C4=BB=B7=BE=B3=A3=ACHRegionServer=CA=B5=C0=
=FDserver=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =BC=C8=C8=
=BB=D2=D1=BE=AD=B4=E6=D4=DA=BA=CF=B2=A2=B5=C4=CF=DF=B3=CC=B3=D8=A3=
=AC=C4=C7=C3=B4=BA=DC=BC=F2=B5=A5=A3=AC=BD=AB=BA=CF=B2=A2=CF=DF=B3=
=CC=C8=D3=B5=BD=CF=DF=B3=CC=B3=D8=D6=D0=B5=C8=B4=FD=B5=F7=B6=C8=BE=
=CD=CA=C7=C1=CB=A1=A3=C4=C7=C3=B4=CA=C7=D3=C9=C4=C4=D0=A9=B7=BD=B7=
=A8=C0=B4=CD=EA=B3=C9=B5=C4=D5=E2=D2=BB=B2=BD=C4=D8=A3=BF=B4=F0=B0=
=B8=BE=CD=D4=DArequestCompaction()=BC=B0requestSystemCompaction()=
=CF=B5=C1=D0=B7=BD=B7=A8=A3=AC=B6=F8=D5=E2=D2=BB=CF=B5=C1=D0=B5=C4=
requestCompaction()=BA=CDrequestSystemCompaction()=B7=BD=B7=A8=B2=
=CE=CA=FD=B2=BB=CD=AC=A3=AC=D2=B2=BD=F6=D2=E2=CE=B6=D7=C5=D3=A6=D3=
=C3=B3=A1=BE=B0=B2=BB=CD=AC=B6=F8=D2=D1=A3=AC=D7=EE=D6=D5=BB=B9=CA=
=C7=D2=AA=C2=E4=B5=BDrequestCompactionInternal()=B7=BD=B7=A8=C9=CF=
=B5=C4=A1=A3=CD=AC=CA=B1=A3=AC=D0=E8=D2=AA=C7=BF=B5=F7=D2=BB=B5=E3=
=A3=ACrequestCompaction()=B7=BD=B7=A8=BA=CDrequestSystemCompactio=
n()=B7=BD=B7=A8=D3=D0=D2=BB=B8=F6=CF=D4=D6=F8=B5=C4=C7=F8=B1=F0=A3=
=AC=C4=C7=BE=CD=CA=C7=D4=DA=D7=EE=D6=D5=B5=F7=D3=C3requestCompact=
ionInternal()=B7=BD=B7=A8=CA=B1=A3=AC=C7=B0=D5=DF=B4=AB=C8=EB=B5=C4=
selectNow=CE=AAtrue=A3=AC=B6=F8=BA=F3=D5=DF=B4=AB=C8=EB=B5=C4sele=
ctNow=CE=AAfalse=A3=AC=D5=E2=B5=E3=D0=E8=D2=AA=CC=D8=B1=F0=D7=A2=D2=
=E2=CF=C2=A3=AC=CF=C2=C3=E6=D2=B2=BB=E1=BD=B2=B5=BD=A1=A3=CF=C8=C6=
=B2=BF=AA=B6=BC=C4=C4=D0=A9=B5=D8=B7=BD=BB=E1=B5=F7=D3=C3requestC=
ompaction()=CF=B5=C1=D0=B7=BD=B7=A8=A3=AC=D2=B2=BE=CD=CA=C7compac=
t=B7=A2=C6=F0=B5=C4=CA=B1=BB=FA=A1=A2=CC=F5=BC=FE=B5=C8=A3=AC=CE=D2=
=C3=C7=BA=F3=D0=F8=BB=E1=B7=D6=CE=F6=A3=AC=D5=E2=C0=EF=CE=D2=C3=C7=
=CF=C8=C0=B4=BF=B4=CF=C2requestCompactionInternal()=A3=AC=B4=FA=C2=
=EB=C8=E7=CF=C2=A3=BA</div><br><div>/**</div><div>&nbsp;&nbsp; *=20=
@param r HRegion store belongs to</div><div>&nbsp;&nbsp; * @param=
 s Store to request compaction on</div><div>&nbsp;&nbsp; * @param=
 why Why compaction requested -- used in debug messages</div><div=
>&nbsp;&nbsp; * @param priority override the default priority (NO=
_PRIORITY =3D=3D decide)</div><div>&nbsp;&nbsp; * @param request=20=
custom compaction request. Can be &lt;tt&gt;null&lt;/tt&gt; in wh=
ich case a simple</div><div>&nbsp;&nbsp; *&nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; compaction will be used.</div><div>&nbsp;&nbsp; */</d=
iv><div>&nbsp; private synchronized CompactionRequest requestComp=
actionInternal(final HRegion r, final Store s,</div><div>&nbsp; &=
nbsp; &nbsp; final String why, int priority, CompactionRequest re=
quest, boolean selectNow)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; throws IOException {</div><div>&nbsp; &nbsp; </div><div>&nb=
sp; &nbsp; // =CA=D7=D1=A1=D7=F6=D2=BB=D0=A9=B1=D8=D2=AA=B5=C4=BB=
=B7=BE=B3=C5=D0=B6=CF=A3=AC=B1=C8=C8=E7HRegionServer=CA=C7=B7=F1=D2=
=D1=CD=A3=D6=B9=A1=A2HRegion=B6=D4=D3=A6=B5=C4=B1=ED=CA=C7=B7=F1=D4=
=CA=D0=EDCompact=B2=D9=D7=F7</div><div>&nbsp; &nbsp; if (this.ser=
ver.isStopped()</div><div>&nbsp; &nbsp; &nbsp; &nbsp; || (r.getTa=
bleDesc() !=3D null &amp;&amp; !r.getTableDesc().isCompactionEnab=
led())) {</div><div>&nbsp; &nbsp; &nbsp; return null;</div><div>&=
nbsp; &nbsp; }</div><div>&nbsp;</div><div>&nbsp; &nbsp; Compactio=
nContext compaction =3D null;</div><div>&nbsp; &nbsp; // =CF=B5=CD=
=B3=D7=D4=B6=AF=B4=A5=B7=A2=B5=C4system compaction=A3=ACselectNow=
=B2=CE=CA=FD=CE=AAfalse=A3=AC=C8=E7=B9=FB=CA=C7hbase shell=B5=C8=C8=
=CB=CE=AA=B4=A5=B7=A2=B5=C4=BA=CF=B2=A2=A3=AC=D4=F2selectNow=CE=AA=
true</div><div>&nbsp; &nbsp; if (selectNow) {</div><div>&nbsp; &n=
bsp; &nbsp; // =CD=A8=B9=FDhbase shell=B4=A5=B7=A2=B5=C4major com=
paction,selectNow=CE=AAtrue.=D5=E2=C0=EF=BD=F8=D0=D0=CA=B5=BC=CA=B5=
=C4=D1=A1=C8=A1=B4=FD=BA=CF=B2=A2=CE=C4=BC=FE=B2=D9=D7=F7</div><d=
iv>&nbsp; &nbsp; &nbsp; compaction =3D selectCompaction(r, s, pri=
ority, request);</div><div>&nbsp; &nbsp; &nbsp; if (compaction =3D=
=3D null) return null; // message logged inside</div><div>&nbsp;=20=
&nbsp; }</div><div>&nbsp;</div><div>&nbsp; &nbsp; // We assume th=
at most compactions are small. So, put system compactions into sm=
all</div><div>&nbsp; &nbsp; // pool; we will do selection there,=20=
and move to large pool if necessary.</div><div>&nbsp; &nbsp; // =CE=
=D2=C3=C7=BC=D9=C9=E8=B4=F3=B2=BF=B7=D6=BA=CF=B2=A2=B6=BC=CA=C7sm=
all=A1=A3=CB=F9=D2=D4=A3=AC=BD=AB=CF=B5=CD=B3=D2=FD=B7=A2=B5=C4=BA=
=CF=B2=A2=B7=C5=BD=F8small pool=A3=AC=D4=DA=C4=C7=C0=EF=CE=D2=C3=C7=
=BB=E1=D7=F6=B3=F6=D1=A1=D4=F1=A3=AC=C8=E7=B9=FB=D3=D0=B1=D8=D2=AA=
=B5=C4=BB=B0=BB=E1=C5=B2=D6=C1large pool</div><div>&nbsp; &nbsp;=20=
</div><div>&nbsp; &nbsp; // =D2=B2=BE=CD=CA=C7=CB=B5=A3=AC=C8=E7=B9=
=FBselectNow=CE=AAfalse=A3=AC=BC=B4=CF=B5=CD=B3=D7=D4=C9=ED=D2=FD=
=B7=A2=B5=C4=BA=CF=B2=A2=A3=AC=B1=C8=C8=E7MemStore flush=A1=A2com=
pact=BC=EC=B2=E9=CF=DF=B3=CC=B5=C8=A3=AC=CD=B3=D2=BB=B7=C5=C8=EB=B5=
=BDshortCompactions=D6=D0=A3=AC=BC=B4small pool</div><div>&nbsp;=20=
&nbsp; // =B6=F8=C8=E7=B9=FB=CA=C7=C8=CB=CE=AA=B4=A5=B7=A2=B5=C4=A3=
=AC=B1=C8=C8=E7HBase shell=A3=AC=D4=F2=BB=B9=D2=AA=BF=B4HStore=D6=
=D0=BA=CF=B2=A2=C7=EB=C7=F3=B4=F3=D0=A1=CA=C7=B7=F1=B3=AC=B9=FD=E3=
=D0=D6=B5=A3=AC=B3=AC=B9=FD=D4=F2=B7=C5=C8=EBlongCompactions=A3=AC=
=BC=B4large pool=A3=AC=B7=F1=D4=F2=BB=B9=CA=C7small pool</div><di=
v>&nbsp; &nbsp; ThreadPoolExecutor pool =3D (selectNow &amp;&amp;=
 s.throttleCompaction(compaction.getRequest().getSize()))</div><d=
iv>&nbsp; &nbsp; &nbsp; ? longCompactions : shortCompactions;</di=
v><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // =BD=AB=BA=CF=B2=A2=
=C7=EB=C7=F3=B0=FC=D7=B0=B3=C9CompactionRunner=A3=AC=C8=D3=BD=F8=CF=
=DF=B3=CC=B3=D8=C8=A5=D6=B4=D0=D0</div><div>&nbsp; &nbsp; pool.ex=
ecute(new CompactionRunner(s, r, compaction, pool));</div><div>&n=
bsp; &nbsp; </div><div>&nbsp; &nbsp; // =BC=C7=C2=BCdebug=BC=B6=B1=
=F0=B5=C4LOG=D0=C5=CF=A2</div><div>&nbsp; &nbsp; if (LOG.isDebugE=
nabled()) {</div><div>&nbsp; &nbsp; &nbsp; String type =3D (pool=20=
=3D=3D shortCompactions) ? "Small " : "Large ";</div><div>&nbsp;=20=
&nbsp; &nbsp; LOG.debug(type + "Compaction requested: " + (select=
Now ? compaction.toString() : "system")</div><div>&nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; + (why !=3D null &amp;&amp; !why.isEmpty() ?=20=
"; Because: " + why : "") + "; " + this);</div><div>&nbsp; &nbsp;=
 }</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // =B7=B5=BB=D8=
=A3=AC=C8=E7=B9=FB=CA=C7=C8=CB=CE=AA=B4=A5=B7=A2=B5=C4=A3=AC=B7=B5=
=BB=D8=BA=CF=B2=A2=C7=EB=C7=F3=A3=AC=B7=F1=D4=F2=B7=B5=BB=D8null<=
/div><div>&nbsp; &nbsp; return selectNow ? compaction.getRequest(=
) : null;</div><div>&nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp=
; =D6=B1=BD=D3=CB=B5=CF=C2=B4=F3=CC=E5=C1=F7=B3=CC=B0=C9=A3=A1=CA=
=D7=CF=C8=A3=AC=D0=E8=D2=AA=D7=F6=D2=BB=D0=A9=B1=D8=D2=AA=B5=C4=BC=
=EC=B2=E9=A3=AC=B1=C8=C8=E7=B1=C8=C8=E7HRegionServer=CA=C7=B7=F1=D2=
=D1=CD=A3=D6=B9=A1=A2HRegion=B6=D4=D3=A6=B5=C4=B1=ED=CA=C7=B7=F1=D4=
=CA=D0=EDCompact=B2=D9=D7=F7=B5=C8=A3=AC=C8=BB=BA=F3=D5=E2=C0=EF=D3=
=D0=D2=BB=B8=F6=B9=D8=BC=FC=B5=C4=B5=D8=B7=BD=A3=AC=BE=CD=CA=C7=C9=
=CF=CA=F6=B5=C4selectNow=A3=AC=C8=E7=B9=FB=B2=BB=CA=C7system comp=
action=A3=ACselectNow=CE=AAtrue=A3=AC=D2=B2=BE=CD=D2=E2=CE=B6=D7=C5=
=CB=FC=D0=E8=D2=AA=B5=F7=D3=C3selectCompaction()=B7=BD=B7=A8=A3=AC=
=BB=F1=C8=A1CompactionContext=A3=AC=B6=F8=D5=E2=B1=BE=D6=CA=C9=CF=
=BE=CD=CA=C7=D2=AA=D1=A1=C8=A1=B4=FD=BA=CF=B2=A2=CE=C4=BC=FE=A1=A3=
=CE=D2=C3=C7=CF=C8=BF=B4=CF=C2selectCompaction()=B7=BD=B7=A8=A3=AC=
=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</div><div>private CompactionContex=
t selectCompaction(final HRegion r, final Store s,</div><div>&nbs=
p; &nbsp; &nbsp; int priority, CompactionRequest request) throws=20=
IOException {</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; //=
 =B5=F7=D3=C3HStore=B5=C4requestCompaction()=B7=BD=B7=A8=A3=AC=BB=
=F1=C8=A1CompactionContext</div><div>&nbsp; &nbsp; CompactionCont=
ext compaction =3D s.requestCompaction(priority, request);</div><=
div>&nbsp; &nbsp; if (compaction =3D=3D null) {</div><div>&nbsp;=20=
&nbsp; &nbsp; if(LOG.isDebugEnabled()) {</div><div>&nbsp; &nbsp;=20=
&nbsp; &nbsp; LOG.debug("Not compacting " + r.getRegionNameAsStri=
ng() +</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; " beca=
use compaction request was cancelled");</div><div>&nbsp; &nbsp; &=
nbsp; }</div><div>&nbsp; &nbsp; &nbsp; return null;</div><div>&nb=
sp; &nbsp; }</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; //=20=
=C8=B7=B1=A3CompactionContext=D6=D0=BA=CF=B2=A2=C7=EB=C7=F3reques=
t=B2=BB=CE=AA=BF=D5</div><div>&nbsp; &nbsp; assert compaction.has=
Selection();</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; //=20=
=C9=E8=D6=C3priority</div><div>&nbsp; &nbsp; if (priority !=3D St=
ore.NO_PRIORITY) {</div><div>&nbsp; &nbsp; &nbsp; compaction.getR=
equest().setPriority(priority);</div><div>&nbsp; &nbsp; }</div><d=
iv>&nbsp; &nbsp; return compaction;</div><div>&nbsp; }</div><div>=
&nbsp; &nbsp; &nbsp; &nbsp; =B6=F8=D5=E2=B8=F6=B7=BD=B7=A8=D7=EE=D6=
=D5=BB=B9=CA=C7=B5=F7=D3=C3HStore=B5=C4requestCompaction()=B7=BD=B7=
=A8=C0=B4=BB=F1=C8=A1CompactionContext=A3=AC=BC=CC=D0=F8=B7=D6=CE=
=F6=A3=BA</div><br><div>&nbsp; @Override</div><div>&nbsp; public=20=
CompactionContext requestCompaction(int priority, CompactionReque=
st baseRequest)</div><div>&nbsp; &nbsp; &nbsp; throws IOException=
 {</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // don't even=
 select for compaction if writes are disabled</div><div>&nbsp; &n=
bsp; // =C8=E7=B9=FB=B6=D4=D3=A6HRegion=B2=BB=BF=C9=D0=B4=A3=AC=D6=
=B1=BD=D3=B7=B5=BB=D8null</div><div>&nbsp; &nbsp; if (!this.areWr=
itesEnabled()) {</div><div>&nbsp; &nbsp; &nbsp; return null;</div=
><div>&nbsp; &nbsp; }</div><div>&nbsp;</div><div>&nbsp; &nbsp; //=
 Before we do compaction, try to get rid of unneeded files to sim=
plify things.</div><div>&nbsp; &nbsp; // =D4=DA=CE=D2=C3=C7=D7=F6=
=BA=CF=B2=A2=D6=AE=C7=B0=A3=AC=CA=D4=D7=C5=B0=DA=CD=D1=B2=BB=B1=D8=
=D2=AA=B5=C4=CE=C4=BC=FE=C0=B4=BC=F2=BB=AF=CA=C2=C7=E9</div><div>=
&nbsp; &nbsp; removeUnneededFiles();</div><div>&nbsp;</div><div>&=
nbsp; &nbsp; // =CD=A8=B9=FD=B4=E6=B4=A2=D2=FD=C7=E6storeEngine=B4=
=B4=BD=A8=BA=CF=B2=A2=C9=CF=CF=C2=CE=C4CompactionContext</div><di=
v>&nbsp; &nbsp; CompactionContext compaction =3D storeEngine.crea=
teCompaction();</div><div>&nbsp; &nbsp; CompactionRequest request=
 =3D null;</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // =BC=
=D3=B6=C1=CB=F8</div><div>&nbsp; &nbsp; this.lock.readLock().lock=
();</div><div>&nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp;=20=
synchronized (filesCompacting) {</div><div>&nbsp; &nbsp; &nbsp; &=
nbsp; // First, see if coprocessor would want to override selecti=
on.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =C8=E7=B9=FB=B4=E6=D4=
=DA=D0=AD=B4=A6=C0=ED=C6=F7</div><div>&nbsp; &nbsp; &nbsp; &nbsp;=
 if (this.getCoprocessorHost() !=3D null) {</div><div>&nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; // =CD=A8=B9=FDCompactionContext=B5=C4preSelect()=B7=BD=
=B7=A8=A3=AC=D1=A1=D4=F1StoreFile=A3=AC=B7=B5=BB=D8StoreFilel=C1=D0=
=B1=ED</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; List&lt;Store=
File&gt; candidatesForCoproc =3D compaction.preSelect(this.filesC=
ompacting);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div><d=
iv>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // =C8=E7=B9=FB=B4=E6=D4=DA=
=D0=AD=B4=A6=C0=ED=C6=F7=A3=AC=C7=D2=C6=E4preCompactSelection()=B7=
=BD=B7=A8=B7=B5=BB=D8true=A3=AC=CA=B9=D3=C3CompactionContext=B5=C4=
forceSelect()=B7=BD=B7=A8=A3=AC=BD=F8=D0=D0=B8=B2=B8=C7</div><div=
>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; boolean override =3D this.get=
CoprocessorHost().preCompactSelection(</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; this, candidatesForCoproc, baseR=
equest);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (overrid=
e) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Copro=
cessor is overriding normal file selection.</div><div>&nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; compaction.forceSelect(new Compact=
ionRequest(candidatesForCoproc));</div><div>&nbsp; &nbsp; &nbsp;=20=
&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div=
>&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Normal case - co=
processor is not overriding file selection.</div><div>&nbsp; &nbs=
p; &nbsp; &nbsp; if (!compaction.hasSelection()) {// =C8=E7=B9=FB=
=BA=CF=B2=A2=C7=EB=C7=F3=CE=AA=BF=D5=A3=AC=BC=B4=B2=BB=B4=E6=D4=DA=
=D0=AD=B4=A6=C0=ED=C6=F7</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; </div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // =CA=C7=B7=F1=
=CE=AAUserCompaction</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 boolean isUserCompaction =3D priority =3D=3D Store.PRIORITY_USER=
;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; boolean mayUseOffP=
eak =3D offPeakHours.isOffPeakHour() &amp;&amp;</div><div>&nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offPeakCompactionTracke=
r.compareAndSet(false, true);</div><div>&nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; // =B5=F7=D3=C3CompactionContext=B5=C4select()=B7=BD=B7=A8</di=
v><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; compaction.selec=
t(this.filesCompacting, isUserCompaction,</div><div>&nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mayUseOffPeak, forceMajor &am=
p;&amp; filesCompacting.isEmpty());</div><div>&nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; } catch (IOException e) {</div><div>&nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; if (mayUseOffPeak) {</div><div>&nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offPeakCompactionTrac=
ker.set(false);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw e;=
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; assert compaction.hasSelection();</di=
v><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (mayUseOffPeak &amp;=
&amp; !compaction.getRequest().isOffPeak()) {</div><div>&nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; // Compaction policy doesn't wan=
t to take advantage of off-peak.</div><div>&nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; offPeakCompactionTracker.set(false);</div><di=
v>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (this.getC=
oprocessorHost() !=3D null) {</div><div>&nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; this.getCoprocessorHost().postCompactSelection(</div><d=
iv>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this, Immutab=
leList.copyOf(compaction.getRequest().getFiles()), baseRequest);<=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp;</div><di=
v>&nbsp; &nbsp; &nbsp; &nbsp; // Selected files; see if we have a=
 compaction with some custom base request.</div><div>&nbsp; &nbsp=
; &nbsp; &nbsp; if (baseRequest !=3D null) {// =C8=E7=B9=FB=D6=AE=
=C7=B0=B4=AB=C8=EB=B5=C4=C7=EB=C7=F3=B2=BB=CE=AA=BF=D5=A3=AC=D4=F2=
=BA=CF=B2=A2=D6=AE</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /=
/ Update the request with what the system thinks the request shou=
ld be;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // its up to=20=
the request if it wants to listen.</div><div>&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; compaction.forceSelect(</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; baseRequest.combineWith(compacti=
on.getRequest()));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><=
div>&nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &=
nbsp; // Finally, we have the resulting files list. Check if we h=
ave any files at all.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =BB=
=F1=C8=A1=BA=CF=B2=A2=C7=EB=C7=F3request</div><div>&nbsp; &nbsp;=20=
&nbsp; &nbsp; request =3D compaction.getRequest();</div><div>&nbs=
p; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &nbsp; //=
 =B4=D3=BA=CF=B2=A2=C7=EB=C7=F3request=D6=D0=BB=F1=C8=A1=B4=FD=BA=
=CF=B2=A2=CE=C4=BC=FE=BC=AF=BA=CFselectedFiles</div><div>&nbsp; &=
nbsp; &nbsp; &nbsp; final Collection&lt;StoreFile&gt; selectedFil=
es =3D request.getFiles();</div><div>&nbsp; &nbsp; &nbsp; &nbsp;=20=
if (selectedFiles.isEmpty()) {// =C8=E7=B9=FBselectedFiles=CE=AA=BF=
=D5=A3=AC=D6=B1=BD=D3=B7=B5=BB=D8null</div><div>&nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; return null;</div><div>&nbsp; &nbsp; &nbsp; &nb=
sp; }</div><div>&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =BD=
=AB=D1=A1=D4=F1=B5=C4=CE=C4=BC=FE=BC=AF=BA=CF=BC=D3=C8=EB=B5=BDfi=
lesCompacting=D6=D0=A3=AC=BD=E2=B4=F0=C1=CB=D6=AE=C7=B0=CE=C4=D5=C2=
=B5=C4=D2=C9=CE=CA</div><div>&nbsp; &nbsp; &nbsp; &nbsp; addToCom=
pactingFiles(selectedFiles);</div><div>&nbsp;</div><div>&nbsp; &n=
bsp; &nbsp; &nbsp; // If we're enqueuing a major, clear the force=
 flag.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =CA=C7=B7=F1=CE=AA=
major=BA=CF=B2=A2</div><div>&nbsp; &nbsp; &nbsp; &nbsp; this.forc=
eMajor =3D this.forceMajor &amp;&amp; !request.isMajor();</div><d=
iv>&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Set common req=
uest properties.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Set pri=
ority, either override value supplied by caller or from store.</d=
iv><div>&nbsp; &nbsp; &nbsp; &nbsp; // =C9=E8=D6=C3=D3=C5=CF=C8=BC=
=B6</div><div>&nbsp; &nbsp; &nbsp; &nbsp; request.setPriority((pr=
iority !=3D Store.NO_PRIORITY) ? priority : getCompactPriority())=
;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =C9=E8=D6=C3=C3=E8=CA=F6=
=D0=C5=CF=A2</div><div>&nbsp; &nbsp; &nbsp; &nbsp; request.setDes=
cription(getRegionInfo().getRegionNameAsString(), getColumnFamily=
Name());</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp;=
 } finally {</div><div>&nbsp; &nbsp; &nbsp; // =BD=E2=B3=FD=B6=C1=
=CB=F8</div><div>&nbsp; &nbsp; &nbsp; this.lock.readLock().unlock=
();</div><div>&nbsp; &nbsp; }</div><div>&nbsp;</div><div>&nbsp; &=
nbsp; LOG.debug(getRegionInfo().getEncodedName() + " - "&nbsp; +=20=
getColumnFamilyName()</div><div>&nbsp; &nbsp; &nbsp; &nbsp; + ":=20=
Initiating " + (request.isMajor() ? "major" : "minor") + " compac=
tion"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; + (request.isAllFiles=
() ? " (all files)" : ""));</div><div>&nbsp; &nbsp; </div><div>&n=
bsp; &nbsp; // =B5=F7=D3=C3HRegion=B5=C4reportCompactionRequestSt=
art()=B7=BD=B7=A8=A3=AC=BB=E3=B1=A8=D2=BB=B8=F6compact=C7=EB=C7=F3=
=BF=AA=CA=BC</div><div>&nbsp; &nbsp; this.region.reportCompaction=
RequestStart(request.isMajor());</div><div>&nbsp; &nbsp; </div><d=
iv>&nbsp; &nbsp; // =B7=B5=BB=D8=BA=CF=B2=A2=C9=CF=CF=C2=CE=C4com=
paction</div><div>&nbsp; &nbsp; return compaction;</div><div>&nbs=
p; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =D5=E2=C0=EF=CE=D2=C3=C7=
=D6=BB=D0=F0=CA=F6=CF=C2=D6=F7=D2=AA=B9=FD=B3=CC=A3=ACrequestComp=
action()=B7=BD=B7=A8=B5=C4=B4=A6=C0=ED=C2=DF=BC=AD=B4=F3=CC=E5=C8=
=E7=CF=C2=A3=BA</div><div>&nbsp; &nbsp; &nbsp; &nbsp; 1=A1=A2=C8=E7=
=B9=FB=B6=D4=D3=A6HRegion=B2=BB=BF=C9=D0=B4=A3=AC=D6=B1=BD=D3=B7=B5=
=BB=D8null=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 2=A1=A2=
=D4=DA=CE=D2=C3=C7=D7=F6=BA=CF=B2=A2=D6=AE=C7=B0=A3=AC=CA=D4=D7=C5=
=B0=DA=CD=D1=B2=BB=B1=D8=D2=AA=B5=C4=CE=C4=BC=FE=C0=B4=BC=F2=BB=AF=
=CA=C2=C7=E9=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 3=A1=
=A2=CD=A8=B9=FD=B4=E6=B4=A2=D2=FD=C7=E6storeEngine=B4=B4=BD=A8=BA=
=CF=B2=A2=C9=CF=CF=C2=CE=C4CompactionContext=C0=E0=D0=CD=B5=C4com=
paction=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 4=A1=A2=BC=
=D3=B6=C1=CB=F8=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 5=
=A1=A2=C8=E7=B9=FB=B4=E6=D4=DA=D0=AD=B4=A6=C0=ED=C6=F7=A3=BA=CD=A8=
=B9=FDCompactionContext=B5=C4preSelect()=B7=BD=B7=A8=A3=AC=D1=A1=D4=
=F1StoreFile=A3=AC=B7=B5=BB=D8StoreFilel=C1=D0=B1=ED=A3=BB</div><=
br><div>&nbsp; &nbsp; &nbsp; &nbsp; 6=A1=A2=C8=E7=B9=FB=BA=CF=B2=A2=
=C7=EB=C7=F3=CE=AA=BF=D5=A3=AC=BC=B4=B2=BB=B4=E6=D4=DA=D0=AD=B4=A6=
=C0=ED=C6=F7=A3=BA=B5=F7=D3=C3CompactionContext=B5=C4select()=B7=BD=
=B7=A8=A3=AC=B3=F5=CA=BC=BB=AFcompaction=D6=D0=B5=C4=BA=CF=B2=A2=C7=
=EB=C7=F3requst=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 7=
=A1=A2=C8=E7=B9=FB=D6=AE=C7=B0=B4=AB=C8=EB=B5=C4=C7=EB=C7=F3baseR=
equest=B2=BB=CE=AA=BF=D5=A3=AC=D4=F2=BA=CF=B2=A2=D6=AE=A3=BB</div=
><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 8=A1=A2=BB=F1=C8=A1=BA=CF=B2=
=A2=C7=EB=C7=F3request=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &=
nbsp; 9=A1=A2=B4=D3=BA=CF=B2=A2=C7=EB=C7=F3request=D6=D0=BB=F1=C8=
=A1=B4=FD=BA=CF=B2=A2=CE=C4=BC=FE=BC=AF=BA=CFselectedFiles=A3=BB<=
/div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 10=A1=A2=BD=AB=D1=A1=D4=
=F1=B5=C4=CE=C4=BC=FE=BC=AF=BA=CF=BC=D3=C8=EB=B5=BDfilesCompactin=
g=D6=D0=A3=AC=BD=E2=B4=F0=C1=CB=D6=AE=C7=B0=CE=C4=D5=C2=B5=C4=D2=C9=
=CE=CA=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 11=A1=A2=C9=
=E8=D6=C3=B1=EA=D6=BE=CE=BBforceMajor=A3=BA=CA=C7=B7=F1=CE=AAmajo=
r=BA=CF=B2=A2=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 12=A1=
=A2request=D6=D0=C9=E8=D6=C3=D3=C5=CF=C8=BC=B6=A1=A2=C9=E8=D6=C3=C3=
=E8=CA=F6=D0=C5=CF=A2=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &n=
bsp; 13=A1=A2=BD=E2=B3=FD=B6=C1=CB=F8=A3=BB</div><br><div>&nbsp;=20=
&nbsp; &nbsp; &nbsp; 14=A1=A2=B5=F7=D3=C3HRegion=B5=C4reportCompa=
ctionRequestStart()=B7=BD=B7=A8=A3=AC=BB=E3=B1=A8=D2=BB=B8=F6comp=
act=C7=EB=C7=F3=BF=AA=CA=BC=A3=BB</div><br><div>&nbsp; &nbsp; &nb=
sp; &nbsp; 15=A1=A2=B7=B5=BB=D8=BA=CF=B2=A2=C9=CF=CF=C2=CE=C4comp=
action=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =CF=D6=D4=DA=
=CE=D2=C3=C7=D7=C5=D6=D8=BF=B4=CF=C2=C8=E7=BA=CE=CD=A8=B9=FD=B5=F7=
=D3=C3CompactionContext=B5=C4select()=B7=BD=B7=A8=B3=F5=CA=BC=BB=AF=
compaction=D6=D0=B5=C4=BA=CF=B2=A2=C7=EB=C7=F3requst=A3=AC=C6=E4=CB=
=FB=B2=BD=D6=E8=B1=C8=BD=CF=BC=F2=B5=A5=A3=AC=D4=DA=B4=CB=B2=BB=D2=
=BB=D2=BB=D0=F0=CA=F6=C1=CB=A1=A3</div><br><div>&nbsp; &nbsp; &nb=
sp; &nbsp; =CF=D6=D4=DA=CE=D2=C3=C7=BE=CD=BF=B4=CF=C2=C6=E4=C4=AC=
=C8=CF=CA=B5=CF=D6=C0=E0DefaultCompactionContext=D6=D0=B5=C4selec=
t()=B7=BD=B7=A8=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</div><br><div=
>@Override</div><div>&nbsp; &nbsp; public boolean select(List&lt;=
StoreFile&gt; filesCompacting, boolean isUserCompaction,</div><di=
v>&nbsp; &nbsp; &nbsp; &nbsp; boolean mayUseOffPeak, boolean forc=
eMajor) throws IOException {</div><div>&nbsp; &nbsp; &nbsp; </div=
><div>&nbsp; &nbsp; &nbsp; // =C0=FB=D3=C3=BA=CF=B2=A2=B2=DF=C2=D4=
compactionPolicy=B5=C4selectCompaction()=B7=BD=B7=A8=A3=AC=BB=F1=C8=
=A1=BA=CF=B2=A2=C7=EB=C7=F3request</div><div>&nbsp; &nbsp; &nbsp;=
 request =3D compactionPolicy.selectCompaction(storeFileManager.g=
etStorefiles(),</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; file=
sCompacting, isUserCompaction, mayUseOffPeak, forceMajor);</div><=
div>&nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; // =B7=B5=
=BB=D8=CA=C7=B7=F1=B5=C3=B5=BDrequest=B5=C4=B1=EA=D6=BE=A3=ACtrue=
 or false</div><div>&nbsp; &nbsp; &nbsp; return request !=3D null=
;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp;=
 =CB=FC=CA=C7=C0=FB=D3=C3=BA=CF=B2=A2=B2=DF=C2=D4compactionPolicy=
=B5=C4selectCompaction()=B7=BD=B7=A8=A3=AC=BB=F1=C8=A1=BA=CF=B2=A2=
=C7=EB=C7=F3request=A1=A3=C4=C7=C3=B4=B0=B4=D5=D5=C9=CF=C3=E6=BD=B2=
=B5=C4=A3=AC=CE=D2=BF=B4=CF=C2=BA=CF=B2=A2=B2=DF=C2=D4=B5=C4=D2=BB=
=D6=D6=CA=B5=CF=D6RatioBasedCompactionPolicy=B5=C4selectCompactio=
n()=B7=BD=B7=A8=CA=B5=CF=D6=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</=
div><div>/**</div><div>&nbsp;&nbsp; * @param candidateFiles candi=
date files, ordered from oldest to newest. All files in store.</d=
iv><div>&nbsp;&nbsp; * @return subset copy of candidate list that=
 meets compaction criteria</div><div>&nbsp;&nbsp; * @throws java.=
io.IOException</div><div>&nbsp;&nbsp; */</div><div>&nbsp; public=20=
CompactionRequest selectCompaction(Collection&lt;StoreFile&gt; ca=
ndidateFiles,</div><div>&nbsp; &nbsp; &nbsp; final List&lt;StoreF=
ile&gt; filesCompacting, final boolean isUserCompaction,</div><di=
v>&nbsp; &nbsp; &nbsp; final boolean mayUseOffPeak, final boolean=
 forceMajor) throws IOException {</div><div>&nbsp; &nbsp; </div><=
div>&nbsp; &nbsp; // Preliminary compaction subject to filters</d=
iv><div>&nbsp; &nbsp; // =B3=F5=B2=BD=D1=B9=CB=F5=B9=FD=C2=CB=C6=F7=
=A3=AC=BC=B4=B8=F9=BE=DD=B4=AB=C8=EB=B5=C4=B2=CE=CA=FDcandidateFi=
les=A3=AC=B4=B4=BD=A8=D2=BB=B8=F6=BA=F2=D1=A1=B5=C4StoreFile=C1=D0=
=B1=ED</div><div>&nbsp; &nbsp; // candidateFiles=CE=AA=CD=A8=B9=FD=
storeFileManager.getStorefiles()=B7=BD=B7=A8=BB=F1=C8=A1=B5=C4Sto=
re=CF=C2=B5=C4=C8=AB=B2=BF=B4=E6=B4=A2=CE=C4=BC=FE</div><div>&nbs=
p; &nbsp; ArrayList&lt;StoreFile&gt; candidateSelection =3D new A=
rrayList&lt;StoreFile&gt;(candidateFiles);</div><div>&nbsp; &nbsp=
; // Stuck and not compacting enough (estimate). It is not guaran=
teed that we will be</div><div>&nbsp; &nbsp; // able to compact m=
ore if stuck and compacting, because ratio policy excludes some</=
div><div>&nbsp; &nbsp; // non-compacting files from consideration=
 during compaction (see getCurrentEligibleFiles).</div><div>&nbsp=
; &nbsp; </div><div>&nbsp; &nbsp; // =C8=B7=B6=A8futureFiles=A3=AC=
=C8=E7=B9=FBfilesCompacting=CE=AA=BF=D5=D4=F2=CE=AA0=A3=AC=B7=F1=D4=
=F2=CE=AA1</div><div>&nbsp; &nbsp; int futureFiles =3D filesCompa=
cting.isEmpty() ? 0 : 1;</div><div>&nbsp; &nbsp; boolean mayBeStu=
ck =3D (candidateFiles.size() - filesCompacting.size() + futureFi=
les)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &gt;=3D storeConfigInf=
o.getBlockingFileCount();</div><div>&nbsp; &nbsp; </div><div>&nbs=
p; &nbsp; // =B4=D3=BA=F2=D1=A1=C1=D0=B1=EDcandidateSelection=D6=D0=
=C5=C5=B3=FD=D5=FD=D4=DA=BA=CF=B2=A2=B5=C4=CE=C4=BC=FE=A3=AC=BC=B4=
filesCompacting=D6=D0=B5=C4=CE=C4=BC=FE</div><div>&nbsp; &nbsp; c=
andidateSelection =3D getCurrentEligibleFiles(candidateSelection,=
 filesCompacting);</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbs=
p; LOG.debug("Selecting compaction from " + candidateFiles.size()=
 + " store files, " +</div><div>&nbsp; &nbsp; &nbsp; &nbsp; files=
Compacting.size() + " compacting, " + candidateSelection.size() +=
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; " eligible, " + storeConfi=
gInfo.getBlockingFileCount() + " blocking");</div><div>&nbsp;</di=
v><div>&nbsp; &nbsp; // If we can't have all files, we cannot do=20=
major anyway</div><div>&nbsp; &nbsp; // =D1=E9=D6=A4=CA=C7=B7=F1=B0=
=FC=BA=AC=CB=F9=D3=D0=CE=C4=BC=FE=A3=AC=C9=E8=D6=C3=B1=EA=D6=BE=CE=
=BBisAllFiles=A3=AC=C5=D0=B6=CF=B5=C4=CC=F5=BC=FE=BE=CD=CA=C7=B4=CB=
=CA=B1=B5=C4=BA=F2=D1=A1=C1=D0=B1=EDcandidateSelection=B4=F3=D0=A1=
=CA=C7=B7=F1=B5=C8=D3=DA=B3=F5=CA=BC=B5=C4candidateFiles=C1=D0=B1=
=ED=B4=F3=D0=A1=A3=AC</div><div>&nbsp; &nbsp; // =B6=F8candidateF=
iles=B4=FA=B1=ED=C1=CBStore=CF=C2=B5=C4=C8=AB=B2=BF=CE=C4=BC=FE</=
div><div>&nbsp; &nbsp; boolean isAllFiles =3D candidateFiles.size=
() =3D=3D candidateSelection.size();</div><div>&nbsp; &nbsp; </di=
v><div>&nbsp; &nbsp; // =C8=E7=B9=FB=C3=BB=D3=D0=B0=FC=BA=AC=CB=F9=
=D3=D0=CE=C4=BC=FE=A3=AC=D4=F2=B2=BB=BF=C9=C4=DC=CE=AA=D2=BB=B8=F6=
Major=BA=CF=B2=A2</div><div>&nbsp; &nbsp; if (!(forceMajor &amp;&=
amp; isAllFiles)) {</div><div>&nbsp; &nbsp; &nbsp; // =C8=E7=B9=FB=
=B2=BB=CA=C7=C7=BF=D6=C6=B5=C4Major=BA=CF=B2=A2=A3=AC=C7=D2=B2=BB=
=B0=FC=BA=AC=CB=F9=D3=D0=B5=C4=CE=C4=BC=FE=A3=AC=D4=F2=B5=F7=D3=C3=
skipLargeFiles()=B7=BD=B7=A8=A3=AC=CC=F8=B9=FD=BD=CF=B4=F3=CE=C4=BC=
=FE</div><div>&nbsp; &nbsp; &nbsp; candidateSelection =3D skipLar=
geFiles(candidateSelection);</div><div>&nbsp; &nbsp; &nbsp; </div=
><div>&nbsp; &nbsp; &nbsp; // =D4=D9=B4=CE=C8=B7=B6=A8=B1=EA=D6=BE=
=CE=BBisAllFiles</div><div>&nbsp; &nbsp; &nbsp; isAllFiles =3D ca=
ndidateFiles.size() =3D=3D candidateSelection.size();</div><div>&=
nbsp; &nbsp; }</div><div>&nbsp;</div><div>&nbsp; &nbsp; // Try a=20=
major compaction if this is a user-requested major compaction,</d=
iv><div>&nbsp; &nbsp; // or if we do not have too many files to c=
ompact and this was requested as a major compaction</div><div>&nb=
sp; &nbsp; // =C8=B7=B6=A8isTryingMajor=A3=AC=B9=B2=C8=FD=D6=D6=C7=
=E9=BF=F6=A3=BA</div><div>&nbsp; &nbsp; // 1=A1=A2=C7=BF=D6=C6Maj=
or=BA=CF=B2=A2=A3=AC=C7=D2=B0=FC=BA=AC=CB=F9=D3=D0=CE=CA=CE=C4=BC=
=FE=A3=AC=C7=D2=CA=C7=D2=BB=B8=F6=D3=C3=BB=A7=BA=CF=B2=A2</div><d=
iv>&nbsp; &nbsp; // 2=A1=A2=C7=BF=D6=C6Major=BA=CF=B2=A2=A3=AC=C7=
=D2=B0=FC=BA=AC=CB=F9=D3=D0=CE=CA=CE=C4=BC=FE=A3=AC=BB=F2=D5=DF=B1=
=BE=C9=ED=BE=CD=CA=C7=D2=BB=B8=F6Major=BA=CF=B2=A2=A3=AC=CD=AC=CA=
=B1=A3=AC=B1=D8=D0=EB=CA=C7candidateSelection=B5=C4=CA=FD=C4=BF=D0=
=A1=D3=DA=C5=E4=D6=C3=B5=C4=B4=EF=B5=BD=BA=CF=B2=A2=CC=F5=BC=FE=B5=
=C4=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD=C4=BF</div><div>&nbsp; &nbsp; b=
oolean isTryingMajor =3D (forceMajor &amp;&amp; isAllFiles &amp;&=
amp; isUserCompaction)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; || (=
((forceMajor &amp;&amp; isAllFiles) || isMajorCompaction(candidat=
eSelection))</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;&a=
mp; (candidateSelection.size() &lt; comConf.getMaxFilesToCompact(=
)));</div><div>&nbsp; &nbsp; // Or, if there are any references a=
mong the candidates.</div><div>&nbsp; &nbsp; // candidates=D6=D0=B4=
=E6=D4=DA=D2=FD=D3=C3=B5=C4=BB=B0=A3=AC=D4=F2=CA=D3=CE=AA=CA=C7=D4=
=DA=B7=D6=C1=D1=BA=F3=B5=C4=CE=C4=BC=FE</div><div>&nbsp; &nbsp; b=
oolean isAfterSplit =3D StoreUtils.hasReferences(candidateSelecti=
on);</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // =C8=E7=B9=
=FB=B2=BB=CA=C7TryingMajor=A3=AC=C7=D2=B2=BB=CA=C7=D4=DA=B7=D6=C1=
=D1=BA=F3</div><div>&nbsp; &nbsp; if (!isTryingMajor &amp;&amp; !=
isAfterSplit) {</div><div>&nbsp; &nbsp; &nbsp; // We're are not c=
ompacting all files, let's see what files are applicable</div><di=
v>&nbsp; &nbsp; &nbsp; // =D4=D9=B4=CE=C9=B8=D1=A1=CE=C4=BC=FE</d=
iv><div>&nbsp; &nbsp; &nbsp; candidateSelection =3D filterBulk(ca=
ndidateSelection);// =C8=A1=B3=F6=B2=BB=D3=A6=B8=C3=CE=BB=D3=DAMi=
nor=BA=CF=B2=A2=B5=C4=CE=C4=BC=FE</div><div>&nbsp; &nbsp; &nbsp;=20=
candidateSelection =3D applyCompactionPolicy(candidateSelection,=20=
mayUseOffPeak, mayBeStuck);</div><div>&nbsp; &nbsp; &nbsp; candid=
ateSelection =3D checkMinFilesCriteria(candidateSelection);</div>=
<div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; </div><div>&nbsp; &n=
bsp; // candidateSelection=D6=D0=D2=C6=B3=FD=B9=FD=C1=BF=B5=C4=CE=
=C4=BC=FE</div><div>&nbsp; &nbsp; candidateSelection =3D removeEx=
cessFiles(candidateSelection, isUserCompaction, isTryingMajor);</=
div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // Now we have th=
e final file list, so we can determine if we can do major/all fil=
es.</div><div>&nbsp; &nbsp; // =B2=E9=BF=B4=CA=C7=B7=F1=CE=AA=C8=AB=
=B2=BF=CE=C4=BC=FE</div><div>&nbsp; &nbsp; isAllFiles =3D (candid=
ateFiles.size() =3D=3D candidateSelection.size());</div><div>&nbs=
p; &nbsp; </div><div>&nbsp; &nbsp; // =C0=FB=D3=C3candidateSelect=
ion=B9=B9=D4=EC=BA=CF=B2=A2=C7=EB=C7=F3CompactionRequest=B6=D4=CF=
=F3result</div><div>&nbsp; &nbsp; CompactionRequest result =3D ne=
w CompactionRequest(candidateSelection);</div><div>&nbsp; &nbsp;=20=
</div><div>&nbsp; &nbsp; // =C9=E8=D6=C3=C7=EB=C7=F3=D6=D0=B5=C4=B1=
=EA=D6=BE=CE=BB</div><div>&nbsp; &nbsp; result.setOffPeak(!candid=
ateSelection.isEmpty() &amp;&amp; !isAllFiles &amp;&amp; mayUseOf=
fPeak);</div><div>&nbsp; &nbsp; result.setIsMajor(isTryingMajor &=
amp;&amp; isAllFiles, isAllFiles);</div><div>&nbsp; &nbsp; </div>=
<div>&nbsp; &nbsp; // =B7=B5=BB=D8=BA=CF=B2=A2=C7=EB=C7=F3Compact=
ionRequest=B6=D4=CF=F3result</div><div>&nbsp; &nbsp; return resul=
t;</div><div>&nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =CE=D2=
=C3=C7=BC=F1=D6=D8=B5=E3=B5=C4=CB=B5=A3=AC=B4=F3=CC=E5=C1=F7=B3=CC=
=C8=E7=CF=C2=A3=BA</div><div>&nbsp; &nbsp; &nbsp; &nbsp; 1=A1=A2=B8=
=F9=BE=DD=B4=AB=C8=EB=B5=C4=B2=CE=CA=FDcandidateFiles=A3=AC=B4=B4=
=BD=A8=D2=BB=B8=F6=BA=F2=D1=A1=B5=C4StoreFile=C1=D0=B1=ED=A3=BB</=
div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbs=
p; candidateFiles=CE=AA=CD=A8=B9=FDstoreFileManager.getStorefiles=
()=B7=BD=B7=A8=BB=F1=C8=A1=B5=C4Store=CF=C2=B5=C4=C8=AB=B2=BF=B4=E6=
=B4=A2=CE=C4=BC=FE=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp=
; 2=A1=A2=C8=B7=B6=A8futureFiles=A3=AC=C8=E7=B9=FBfilesCompacting=
=CE=AA=BF=D5=D4=F2=CE=AA0=A3=AC=B7=F1=D4=F2=CE=AA1=A3=BB</div><br=
><div>&nbsp; &nbsp; &nbsp; &nbsp; 3=A1=A2=B4=D3=BA=F2=D1=A1=C1=D0=
=B1=EDcandidateSelection=D6=D0=C5=C5=B3=FD=D5=FD=D4=DA=BA=CF=B2=A2=
=B5=C4=CE=C4=BC=FE=A3=AC=BC=B4filesCompacting=D6=D0=B5=C4=CE=C4=BC=
=FE=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 4=A1=A2=D1=E9=
=D6=A4=CA=C7=B7=F1=B0=FC=BA=AC=CB=F9=D3=D0=CE=C4=BC=FE=A3=AC=C9=E8=
=D6=C3=B1=EA=D6=BE=CE=BBisAllFiles=A3=AC=C5=D0=B6=CF=B5=C4=CC=F5=BC=
=FE=BE=CD=CA=C7=B4=CB=CA=B1=B5=C4=BA=F2=D1=A1=C1=D0=B1=EDcandidat=
eSelection=B4=F3=D0=A1=CA=C7=B7=F1=B5=C8=D3=DA=B3=F5=CA=BC=B5=C4c=
andidateFiles=C1=D0=B1=ED=B4=F3=D0=A1=A3=AC=B6=F8candidateFiles=B4=
=FA=B1=ED=C1=CBStore=CF=C2=B5=C4=C8=AB=B2=BF=CE=C4=BC=FE=A3=BB</d=
iv><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 5=A1=A2=C8=E7=B9=FB=B2=BB=
=CA=C7=C7=BF=D6=C6=B5=C4Major=BA=CF=B2=A2=A3=AC=C7=D2=B2=BB=B0=FC=
=BA=AC=CB=F9=D3=D0=B5=C4=CE=C4=BC=FE=A3=AC=D4=F2=B5=F7=D3=C3skipL=
argeFiles()=B7=BD=B7=A8=A3=AC=CC=F8=B9=FD=BD=CF=B4=F3=CE=C4=BC=FE=
=A3=AC=B2=A2=D4=D9=B4=CE=C8=B7=B6=A8=B1=EA=D6=BE=CE=BBisAllFiles=A3=
=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 6=A1=A2=C8=B7=B6=A8=
isTryingMajor=A3=AC=B9=B2=C1=BD=D6=D6=C7=E9=BF=F6=A3=BA</div><br>=
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; =A3=A81=A3=A9=C7=BF=
=D6=C6Major=BA=CF=B2=A2=A3=AC=C7=D2=B0=FC=BA=AC=CB=F9=D3=D0=CE=CA=
=CE=C4=BC=FE=A3=AC=C7=D2=CA=C7=D2=BB=B8=F6=D3=C3=BB=A7=BA=CF=B2=A2=
=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; =A3=
=A82=A3=A9=C7=BF=D6=C6Major=BA=CF=B2=A2=A3=AC=C7=D2=B0=FC=BA=AC=CB=
=F9=D3=D0=CE=CA=CE=C4=BC=FE=A3=AC=BB=F2=D5=DF=B1=BE=C9=ED=BE=CD=CA=
=C7=D2=BB=B8=F6Major=BA=CF=B2=A2=A3=AC=CD=AC=CA=B1=A3=AC=B1=D8=D0=
=EB=CA=C7candidateSelection=B5=C4=CA=FD=C4=BF=D0=A1=D3=DA=C5=E4=D6=
=C3=B5=C4=B4=EF=B5=BD=BA=CF=B2=A2=CC=F5=BC=FE=B5=C4=D7=EE=B4=F3=CE=
=C4=BC=FE=CA=FD=C4=BF=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &n=
bsp; 7=A1=A2candidates=D6=D0=B4=E6=D4=DA=D2=FD=D3=C3=B5=C4=BB=B0=A3=
=AC=D4=F2=CA=D3=CE=AA=CA=C7=D4=DA=B7=D6=C1=D1=BA=F3=B5=C4=CE=C4=BC=
=FE=A3=AC=BC=B4isAfterSplit=CE=AAtrue=A3=BB</div><br><div>&nbsp;=20=
&nbsp; &nbsp; &nbsp; 8=A1=A2=C8=E7=B9=FB=B2=BB=CA=C7TryingMajor=A3=
=AC=C7=D2=B2=BB=CA=C7=D4=DA=B7=D6=C1=D1=BA=F3isAfterSplit=A3=AC=D4=
=D9=B4=CE=C9=B8=D1=A1=CE=C4=BC=FE=A3=BA</div><br><div>&nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8.1=A1=A2=CD=A8=B9=FDfilter=
Bulk()=B7=BD=B7=A8=C8=A1=B3=F6=B2=BB=D3=A6=B8=C3=CE=BB=D3=DAMinor=
=BA=CF=B2=A2=B5=C4=CE=C4=BC=FE=A3=BB</div><br><div>&nbsp; &nbsp;=20=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8.2=A1=A2=CD=A8=B9=FDapplyComp=
actionPolicy()=B7=BD=B7=A8=A3=AC=CA=B9=D3=C3=D2=BB=B6=A8=B5=C4=CB=
=E3=B7=A8=A3=AC=BD=F8=D0=D0=CE=C4=BC=FE=B5=C4=C9=B8=D1=A1=A3=BB</=
div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8.3=
=A1=A2=CD=A8=B9=FDcheckMinFilesCriteria()=B7=BD=B7=A8=A3=AC=C5=D0=
=B6=CF=CA=C7=B7=F1=C2=FA=D7=E3=BA=CF=B2=A2=CA=B1=D7=EE=D0=A1=CE=C4=
=BC=FE=CA=FD=B5=C4=D2=AA=C7=F3=A3=BB</div><br><div>&nbsp; &nbsp;=20=
&nbsp; &nbsp; 9=A1=A2=CD=A8=B9=FDremoveExcessFiles()=B7=BD=B7=A8=D4=
=DAcandidateSelection=D6=D0=D2=C6=B3=FD=B9=FD=C1=BF=B5=C4=CE=C4=BC=
=FE=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 10=A1=A2=B2=E9=
=BF=B4=CA=C7=B7=F1=CE=AA=C8=AB=B2=BF=CE=C4=BC=FE=A3=BA=D4=D9=B4=CE=
=C8=B7=B6=A8=B1=EA=D6=BE=CE=BBisAllFiles=A3=BB</div><br><div>&nbs=
p; &nbsp; &nbsp; &nbsp; 11=A1=A2=C0=FB=D3=C3candidateSelection=B9=
=B9=D4=EC=BA=CF=B2=A2=C7=EB=C7=F3CompactionRequest=B6=D4=CF=F3res=
ult=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 12=A1=A2=C9=E8=
=D6=C3=C7=EB=C7=F3=D6=D0=B5=C4=B1=EA=D6=BE=CE=BB=A3=BB</div><br><=
div>&nbsp; &nbsp; &nbsp; &nbsp; 13=A1=A2=B7=B5=BB=D8=BA=CF=B2=A2=C7=
=EB=C7=F3CompactionRequest=B6=D4=CF=F3result=A1=A3</div><br><div>=
&nbsp; &nbsp; &nbsp; &nbsp; =CE=D2=C3=C7=D6=F7=D2=AA=B7=D6=CE=F6=CF=
=C2=C6=E4=D6=D0=CE=C4=BC=FE=C9=B8=D1=A1=B5=C4=D2=BB=D0=A9=B7=BD=B7=
=A8=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =CA=D7=CF=C8=BF=
=B4=CC=F8=B9=FD=B4=F3=CE=C4=BC=FE=B5=C4skipLargeFiles()=B7=BD=B7=A8=
=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</div><br><div>/**</div><div>=
&nbsp;&nbsp; * @param candidates pre-filtrate</div><div>&nbsp;&nb=
sp; * @return filtered subset</div><div>&nbsp;&nbsp; * exclude al=
l files above maxCompactSize</div><div>&nbsp;&nbsp; * Also save a=
ll references. We MUST compact them</div><div>&nbsp;&nbsp; */</di=
v><div>&nbsp; private ArrayList&lt;StoreFile&gt; skipLargeFiles(A=
rrayList&lt;StoreFile&gt; candidates) {</div><div>&nbsp; &nbsp; i=
nt pos =3D 0;</div><div>&nbsp; &nbsp; while (pos &lt; candidates.=
size() &amp;&amp; !candidates.get(pos).isReference()</div><div>&n=
bsp; &nbsp; &nbsp; &amp;&amp; (candidates.get(pos).getReader().le=
ngth() &gt; comConf.getMaxCompactSize())) {</div><div>&nbsp; &nbs=
p; &nbsp; // =D7=EE=D6=F7=D2=AA=B5=C4=D2=BB=B8=F6=C5=D0=B6=CF=A3=AC=
=C1=D0=B1=ED=D6=B8=B6=A8=CE=BB=D6=C3=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=
=CA=C7=B7=F1=B3=AC=B9=FD=E3=D0=D6=B5comConf.getMaxCompactSize()</=
div><div>&nbsp; &nbsp; &nbsp; // =D5=E2=B8=F6=E3=D0=D6=B5=D3=C5=CF=
=C8=C8=A1=B2=CE=CA=FDhbase.hstore.compaction.max.size=A3=AC=B2=CE=
=CA=FD=CE=B4=C5=E4=D6=C3=B5=C4=BB=B0=C8=A1Long.MAX_VALUE</div><di=
v>&nbsp; &nbsp; &nbsp; ++pos;</div><div>&nbsp; &nbsp; }</div><div=
>&nbsp; &nbsp; if (pos &gt; 0) {</div><div>&nbsp; &nbsp; &nbsp; L=
OG.debug("Some files are too large. Excluding " + pos</div><div>&=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + " files from compaction candi=
dates");</div><div>&nbsp; &nbsp; &nbsp; // =D3=C9=B4=CB=BF=C9=BC=FB=
candidates=D3=A6=B8=C3=CA=C7=D2=BB=B8=F6=D2=D4=CE=C4=BC=FE=B4=F3=D0=
=A1=B5=B9=D0=F2=C5=C5=D0=F2=B5=C4=C1=D0=B1=ED</div><div>&nbsp; &n=
bsp; &nbsp; candidates.subList(0, pos).clear();</div><div>&nbsp;=20=
&nbsp; }</div><div>&nbsp; &nbsp; return candidates;</div><div>&nb=
sp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =CB=FC=BB=E1=B1=E9=C0=
=FA=CE=C4=BC=FE=C1=D0=B1=EDcandidates=A3=AC=D7=EE=D6=F7=D2=AA=B5=C4=
=D2=BB=B8=F6=C5=D0=B6=CF=A3=AC=C1=D0=B1=ED=D6=B8=B6=A8=CE=BB=D6=C3=
=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=CA=C7=B7=F1=B3=AC=B9=FD=E3=D0=D6=B5=
comConf.getMaxCompactSize()=A3=AC=D5=E2=B8=F6=E3=D0=D6=B5=D3=C5=CF=
=C8=C8=A1=B2=CE=CA=FDhbase.hstore.compaction.max.size=A3=AC=B2=CE=
=CA=FD=CE=B4=C5=E4=D6=C3=B5=C4=BB=B0=C8=A1Long.MAX_VALUE=A1=A3</d=
iv><div>&nbsp; &nbsp; &nbsp; &nbsp; =C6=E4=B4=CE=D4=D9=BF=B4=CF=C2=
=C8=A1=B3=F6=B2=BB=D3=A6=B8=C3=CE=BB=D3=DAMinor=BA=CF=B2=A2=B5=C4=
=CE=C4=BC=FE=B5=C4filterBulk()=B7=BD=B7=A8=A3=AC=B4=FA=C2=EB=C8=E7=
=CF=C2=A3=BA</div><br><div>/**</div><div>&nbsp;&nbsp; * @param ca=
ndidates pre-filtrate</div><div>&nbsp;&nbsp; * @return filtered s=
ubset</div><div>&nbsp;&nbsp; * exclude all bulk load files if con=
figured</div><div>&nbsp;&nbsp; */</div><div>&nbsp; private ArrayL=
ist&lt;StoreFile&gt; filterBulk(ArrayList&lt;StoreFile&gt; candid=
ates) {</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // =C8=A5=
=B3=FD=B5=F4=B2=BB=D3=A6=B8=C3=D4=DAMinor=BA=CF=B2=A2=D6=D0=B5=C4=
=CE=C4=BC=FE=A3=BA=B8=F9=BE=DD StoreFile=B5=C4=B1=EA=D6=BE=CE=BBe=
xcludeFromMinorCompaction=C5=D0=B6=CF</div><div>&nbsp; &nbsp; //=20=
=CB=FC=B5=C4=C5=D0=B6=CF=CA=C7HFile=D0=C5=CF=A2=B5=C4=D4=AA=CA=FD=
=BE=DD=D6=D0=B4=E6=D4=DAEXCLUDE_FROM_MINOR_COMPACTION=B1=EA=D6=BE=
</div><div>&nbsp; &nbsp; candidates.removeAll(Collections2.filter=
(candidates,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; new Predicate&=
lt;StoreFile&gt;() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 @Override</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public bo=
olean apply(StoreFile input) {</div><div>&nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; return input.excludeFromMinorCompaction();</div=
><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp=
; &nbsp; &nbsp; }));</div><div>&nbsp; &nbsp; return candidates;</=
div><div>&nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =CB=FC=B8=
=F9=BE=DDStoreFile=B5=C4=B1=EA=D6=BE=CE=BBexcludeFromMinorCompact=
ion=C5=D0=B6=CF=A3=AC=B6=F8excludeFromMinorCompaction=CE=AAtrue=CA=
=C7=B5=B1HFile=D0=C5=CF=A2=B5=C4=D4=AA=CA=FD=BE=DD=D6=D0=B4=E6=D4=
=DAEXCLUDE_FROM_MINOR_COMPACTION=B1=EA=D6=BE=CA=B1=C9=E8=D6=C3=B5=
=C4=A3=AC=CB=B5=C1=CB=D5=E2=C3=B4=B6=E0=A3=AC=C6=E4=CA=B5=CB=FC=BE=
=CD=CA=C7=D2=AA=C5=C5=B3=FDBulkLoad=BD=F8=C8=EBHBase=B5=C4=CE=C4=BC=
=FE=A3=A1</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =C8=BB=BA=F3=A3=AC=
=CE=D2=C3=C7=D4=D9=BF=B4=CF=C2=B1=C8=BD=CF=B8=B4=D4=D3=B5=C4apply=
CompactionPolicy()=B7=BD=B7=A8=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA=
</div><br><div>/**</div><div>&nbsp; &nbsp; * @param candidates pr=
e-filtrate</div><div>&nbsp; &nbsp; * @return filtered subset</div=
><div>&nbsp; &nbsp; * -- Default minor compaction selection algor=
ithm:</div><div>&nbsp; &nbsp; * choose CompactSelection from cand=
idates --</div><div>&nbsp; &nbsp; * First exclude bulk-load files=
 if indicated in configuration.</div><div>&nbsp; &nbsp; * Start a=
t the oldest file and stop when you find the first file that</div=
><div>&nbsp; &nbsp; * meets compaction criteria:</div><div>&nbsp;=
 &nbsp; * (1) a recently-flushed, small file (i.e. &lt;=3D minCom=
pactSize)</div><div>&nbsp; &nbsp; * OR</div><div>&nbsp; &nbsp; *=20=
(2) within the compactRatio of sum(newer_files)</div><div>&nbsp;=20=
&nbsp; * Given normal skew, any newer files will also meet this c=
riteria</div><div>&nbsp; &nbsp; * &lt;p/&gt;</div><div>&nbsp; &nb=
sp; * Additional Note:</div><div>&nbsp; &nbsp; * If fileSizes.siz=
e() &gt;&gt; maxFilesToCompact, we will recurse on</div><div>&nbs=
p; &nbsp; * compact().&nbsp; Consider the oldest files first to a=
void a</div><div>&nbsp; &nbsp; * situation where we always compac=
t [end-threshold,end).&nbsp; Then, the</div><div>&nbsp; &nbsp; *=20=
last file becomes an aggregate of the previous compactions.</div>=
<div>&nbsp; &nbsp; *</div><div>&nbsp; &nbsp; * normal skew:</div>=
<div>&nbsp; &nbsp; *</div><div>&nbsp; &nbsp; *&nbsp; &nbsp; &nbsp=
; &nbsp;&nbsp; older ----&gt; newer (increasing seqID)</div><div>=
&nbsp; &nbsp; *&nbsp; &nbsp;&nbsp; _</div><div>&nbsp; &nbsp; *&nb=
sp; &nbsp; | |&nbsp;&nbsp; _</div><div>&nbsp; &nbsp; *&nbsp; &nbs=
p; | |&nbsp; | |&nbsp;&nbsp; _</div><div>&nbsp; &nbsp; *&nbsp; --=
|-|- |-|- |-|---_-------_-------&nbsp; minCompactSize</div><div>&=
nbsp; &nbsp; *&nbsp; &nbsp; | |&nbsp; | |&nbsp; | |&nbsp; | |&nbs=
p; _&nbsp; | |</div><div>&nbsp; &nbsp; *&nbsp; &nbsp; | |&nbsp; |=
 |&nbsp; | |&nbsp; | | | | | |</div><div>&nbsp; &nbsp; *&nbsp; &n=
bsp; | |&nbsp; | |&nbsp; | |&nbsp; | | | | | |</div><div>&nbsp; &=
nbsp; */</div><div>&nbsp; ArrayList&lt;StoreFile&gt; applyCompact=
ionPolicy(ArrayList&lt;StoreFile&gt; candidates,</div><div>&nbsp;=
 &nbsp; &nbsp; boolean mayUseOffPeak, boolean mayBeStuck) throws=20=
IOException {</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; //=
 =C8=E7=B9=FB=CE=C4=BC=FE=C1=D0=B1=ED=CE=AA=BF=D5=A3=AC=D4=AD=D1=F9=
=B7=B5=BB=D8&nbsp; </div><div>&nbsp; &nbsp; if (candidates.isEmpt=
y()) {</div><div>&nbsp; &nbsp; &nbsp; return candidates;</div><di=
v>&nbsp; &nbsp; }</div><div>&nbsp;</div><div>&nbsp; &nbsp; // we'=
re doing a minor compaction, let's see what files are applicable<=
/div><div>&nbsp; &nbsp; int start =3D 0;</div><div>&nbsp; &nbsp;=20=
</div><div>&nbsp; &nbsp; // =BB=F1=C8=A1=CE=C4=BC=FE=BA=CF=B2=A2=B1=
=C8=C0=FD=A3=BA=C8=A1=B2=CE=CA=FDhbase.hstore.compaction.ratio=A3=
=AC=C4=AC=C8=CF=CE=AA1.2</div><div>&nbsp; &nbsp; double ratio =3D=
 comConf.getCompactionRatio();</div><div>&nbsp; &nbsp; if (mayUse=
OffPeak) {// =C8=E7=B9=FB=B2=BB=CA=C7=D4=DA=B7=E5=D6=B5=CA=B9=D3=C3=
</div><div>&nbsp; &nbsp; &nbsp; // =C8=A1=B2=CE=CA=FDhbase.hstore=
.compaction.ratio.offpeak=A3=AC=C4=AC=C8=CF=CE=AA5.0</div><div>&n=
bsp; &nbsp; &nbsp; ratio =3D comConf.getCompactionRatioOffPeak();=
</div><div>&nbsp; &nbsp; &nbsp; LOG.info("Running an off-peak com=
paction, selection ratio =3D " + ratio);</div><div>&nbsp; &nbsp;=20=
}</div><div>&nbsp;</div><div>&nbsp; &nbsp; // get store file size=
s for incremental compacting selection.</div><div>&nbsp; &nbsp; <=
/div><div>&nbsp; &nbsp; // =B4=FD=BA=CF=B2=A2=CE=C4=BC=FE=CA=FD=C4=
=BFcountOfFiles</div><div>&nbsp; &nbsp; final int countOfFiles =3D=
 candidates.size();</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nb=
sp; // =D3=C3=D3=DA=B4=E6=B7=C5=CE=C4=BC=FE=B4=F3=D0=A1=B5=C4=CA=FD=
=D7=E9fileSizes</div><div>&nbsp; &nbsp; long[] fileSizes =3D new=20=
long[countOfFiles];</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nb=
sp; // =D3=C3=D3=DA=B4=E6=B7=C5=B8=C3=CE=C4=BC=FE=D6=AE=BA=F3=D4=DA=
=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD=D5=E2=B8=F6=B7=B6=CE=A7=C4=DA=CB=F9=
=D3=D0=CE=C4=BC=FE=A3=A8=B0=FC=BA=AC=B8=C3=CE=C4=BC=FE=A3=A9=B4=F3=
=D0=A1=BA=CF=BC=C6=B5=C4=CA=FD=D7=E9sumSize</div><div>&nbsp; &nbs=
p; long[] sumSize =3D new long[countOfFiles];</div><div>&nbsp; &n=
bsp; </div><div>&nbsp; &nbsp; // =B5=B9=D0=F2=B1=E9=C0=FAcandidat=
es=CE=C4=BC=FE=C0=E1=EC=AD</div><div>&nbsp; &nbsp; for (int i =3D=
 countOfFiles - 1; i &gt;=3D 0; --i) {</div><div>&nbsp; &nbsp; &n=
bsp; StoreFile file =3D candidates.get(i);</div><div>&nbsp; &nbsp=
; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; // =BD=AB=CE=C4=BC=FE=B4=
=F3=D0=A1=B7=C5=C8=EB=CA=FD=D7=E9fileSizes</div><div>&nbsp; &nbsp=
; &nbsp; fileSizes[i] =3D file.getReader().length();</div><div>&n=
bsp; &nbsp; &nbsp; // calculate the sum of fileSizes[i,i+maxFiles=
ToCompact-1) for algo</div><div>&nbsp; &nbsp; &nbsp; // tooFar=B1=
=ED=CA=BE=BA=F3=D2=C6=B6=AF=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD=CE=BB=D6=
=C3=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=A3=AC=C6=E4=CA=B5=D2=B2=BE=CD=CA=
=C7=B8=D5=B8=D5=C2=FA=D7=E3=B4=EF=B5=BD=D7=EE=B4=F3=CE=C4=BC=FE=CA=
=FD=CE=BB=D6=C3=B5=C4=C4=C7=B8=F6=CE=C4=BC=FE=A3=AC=D2=B2=BE=CD=CA=
=C7=CB=B5=A3=AC=B4=D3i=D6=C1tooFar=CA=FD=C4=BF=CE=AA=BA=CF=B2=A2=CA=
=B1=D4=CA=D0=ED=B5=C4=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD</div><div>&nb=
sp; &nbsp; &nbsp; int tooFar =3D i + comConf.getMaxFilesToCompact=
() - 1;</div><div>&nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &=
nbsp; // =BC=C6=CB=E3=BA=CF=BC=C6=A3=BA=B8=C3=CE=C4=BC=FE=B4=F3=D0=
=A1fileSizes[i] + =A3=A8=BD=D8=D6=B9=B5=BD=CF=C2=D2=BB=B8=F6=CE=C4=
=BC=FE=B4=F3=D0=A1sumSize[i + 1]=A3=A9 - =BA=F3=D2=C6=B6=AF=D7=EE=
=B4=F3=CE=C4=BC=FE=CA=FD=CE=BB=D6=C3=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=
</div><div>&nbsp; &nbsp; &nbsp; // =D2=B2=BE=CD=CA=C7=CB=B5sumSiz=
e[i]=B5=C4=D6=B5=A3=AC=C9=E6=BC=B0=B5=BD=B5=C4=CE=C4=BC=FE=CA=FD=C4=
=BF=A3=AC=D3=C0=D4=B6=CA=C7=C2=FA=D7=E3=BA=CF=B2=A2=CA=B1=D4=CA=D0=
=ED=B5=C4=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD=D5=E2=B8=F6=E3=D0=D6=B5=B5=
=C4=A3=AC=CB=FC=CF=E0=B5=B1=D3=DA=D2=BB=B8=F6=BB=AC=B6=AF=B5=C4=C7=
=F8=BC=E4=A3=AC=C7=F8=BC=E4=B4=F3=D0=A1=CE=AA=BA=CF=B2=A2=CA=B1=D4=
=CA=D0=ED=B5=C4=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD</div><div>&nbsp; &n=
bsp; &nbsp; sumSize[i] =3D fileSizes[i]</div><div>&nbsp; &nbsp; &=
nbsp; &nbsp; + ((i + 1 &lt; countOfFiles) ? sumSize[i + 1] : 0)</=
div><div>&nbsp; &nbsp; &nbsp; &nbsp; - ((tooFar &lt; countOfFiles=
) ? fileSizes[tooFar] : 0);</div><div>&nbsp; &nbsp; }</div><div>&=
nbsp;</div><div>&nbsp; &nbsp; // =B5=B9=D0=F2=D1=AD=BB=B7=A3=AC=C8=
=E7=B9=FB=CE=C4=BC=FE=CA=FD=C4=BF=C2=FA=D7=E3=D7=EE=D0=A1=BA=CF=B2=
=A2=CA=B1=D4=CA=D0=ED=B5=C4=D7=EE=D0=A1=CE=C4=BC=FE=CA=FD=A3=AC=C7=
=D2=B8=C3=CE=BB=D6=C3=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=A3=AC</div><d=
iv>&nbsp; &nbsp; // =B4=F3=D3=DA=BA=CF=B2=A2=CA=B1=D4=CA=D0=ED=B5=
=C4=CE=C4=BC=FE=D7=EE=D0=A1=B4=F3=D0=A1=D3=EB=CF=C2=D2=BB=B8=F6=CE=
=C4=BC=FE=B4=B0=BF=DA=CE=C4=BC=FE=D7=DC=B4=F3=D0=A1=B3=CB=D2=D4=D2=
=BB=B6=A8=B1=C8=C0=FD=D6=D0=B5=C4=BD=CF=B4=F3=D5=DF=A3=AC=D4=F2=BC=
=CC=D0=F8=A3=AC</div><div>&nbsp; &nbsp; // =CA=B5=BC=CA=C9=CF=BE=CD=
=CA=C7=D1=A1=D4=F1=B3=F6=D2=BB=B8=F6=CE=C4=BC=FE=B4=B0=BF=DA=C4=DA=
=C4=DC=D7=EE=D0=A1=C4=DC=C2=FA=D7=E3=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=
=B5=C4=D2=BB=D7=E9=CE=C4=BC=FE</div><div>&nbsp; &nbsp; while (cou=
ntOfFiles - start &gt;=3D comConf.getMinFilesToCompact() &amp;&am=
p;</div><div>&nbsp; &nbsp; &nbsp; fileSizes[start] &gt; Math.max(=
comConf.getMinCompactSize(),</div><div>&nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; (long) (sumSize[start + 1] * ratio))) {</div><div>&nbsp;=
 &nbsp; &nbsp; ++start;</div><div>&nbsp; &nbsp; }</div><div>&nbsp=
; &nbsp; if (start &lt; countOfFiles) {</div><div>&nbsp; &nbsp; &=
nbsp; LOG.info("Default compaction algorithm has selected " + (co=
untOfFiles - start)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; + " fil=
es from " + countOfFiles + " candidates");</div><div>&nbsp; &nbsp=
; } else if (mayBeStuck) {</div><div>&nbsp; &nbsp; &nbsp; // We m=
ay be stuck. Compact the latest files if we can.</div><div>&nbsp;=
 &nbsp; &nbsp; // =B1=A3=D6=A4=D7=EE=D0=A1=CE=C4=BC=FE=CA=FD=C4=BF=
=B5=C4=D2=AA=C7=F3</div><div>&nbsp; &nbsp; &nbsp; int filesToLeav=
e =3D candidates.size() - comConf.getMinFilesToCompact();</div><d=
iv>&nbsp; &nbsp; &nbsp; if (filesToLeave &gt;=3D 0) {</div><div>&=
nbsp; &nbsp; &nbsp; &nbsp; start =3D filesToLeave;</div><div>&nbs=
p; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nb=
sp; </div><div>&nbsp; &nbsp; // =BD=D8=C8=A1</div><div>&nbsp; &nb=
sp; candidates.subList(0, start).clear();</div><div>&nbsp; &nbsp;=
 return candidates;</div><div>&nbsp; }</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; =D5=E2=B8=F6applyCompactionPolicy()=B7=BD=B7=A8=CA=C7=
RatioBasedCompactionPolicy=BA=CF=B2=A2=B2=DF=C2=D4=B5=C4=BE=AB=CB=
=E8=A3=AC=CE=D2=C3=C7=D0=E8=D2=AA=CF=B8=CF=B8=B7=D6=CE=F6=A3=AC=CB=
=FC=B5=C4=D6=F7=D2=AA=B2=BD=D6=E8=CE=AA=A3=BA</div><div>&nbsp; &n=
bsp; &nbsp; &nbsp; 1=A1=A2=C8=E7=B9=FB=CE=C4=BC=FE=C1=D0=B1=ED=CE=
=AA=BF=D5=A3=AC=D4=AD=D1=F9=B7=B5=BB=D8;</div><br><div>&nbsp; &nb=
sp; &nbsp; &nbsp; 2=A1=A2=BB=F1=C8=A1=CE=C4=BC=FE=BA=CF=B2=A2=B1=C8=
=C0=FD=A3=BA=C8=A1=B2=CE=CA=FDhbase.hstore.compaction.ratio=A3=AC=
=C4=AC=C8=CF=CE=AA1.2=A3=AC=C8=E7=B9=FB=BF=C9=D2=D4=D4=DA=B7=E5=D6=
=B5=CA=B9=D3=C3=A3=AC=C8=A1=B2=CE=CA=FDhbase.hstore.compaction.ra=
tio.offpeak=A3=AC=C4=AC=C8=CF=CE=AA5.0=A3=AC=D2=B2=BE=CD=CA=C7=CB=
=B5=BD=AB=B2=CE=CA=FD=B5=F7=D5=FB=B4=F3=D0=A9=A3=BB</div><br><div=
>&nbsp; &nbsp; &nbsp; &nbsp; 3=A1=A2=BC=C6=CB=E3=B4=FD=BA=CF=B2=A2=
=CE=C4=BC=FE=CA=FD=C4=BFcountOfFiles=A3=BB</div><br><div>&nbsp; &=
nbsp; &nbsp; &nbsp; 4=A1=A2=B6=A8=D2=E5=D3=C3=D3=DA=B4=E6=B7=C5=CE=
=C4=BC=FE=B4=F3=D0=A1=B5=C4=CA=FD=D7=E9fileSizes=A3=BB</div><br><=
div>&nbsp; &nbsp; &nbsp; &nbsp; 5=A1=A2=B6=A8=D2=E5=D3=C3=D3=DA=B4=
=E6=B7=C5=B8=C3=CE=C4=BC=FE=D6=AE=BA=F3=D4=DA=D7=EE=B4=F3=CE=C4=BC=
=FE=CA=FD=D5=E2=B8=F6=B7=B6=CE=A7=C4=DA=CB=F9=D3=D0=CE=C4=BC=FE=A3=
=A8=B0=FC=BA=AC=B8=C3=CE=C4=BC=FE=A3=A9=B4=F3=D0=A1=BA=CF=BC=C6=B5=
=C4=CA=FD=D7=E9sumSize=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &=
nbsp; 6=A1=A2=B5=B9=D0=F2=B1=E9=C0=FAcandidates=CE=C4=BC=FE=C1=D0=
=B1=ED=A3=BA</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; 6.1=A1=A2=BD=AB=CE=C4=BC=FE=B4=F3=D0=A1=B7=C5=C8=EB=CA=
=FD=D7=E9fileSizes=D6=B8=B6=A8=CE=BB=D6=C3=A3=BB</div><br><div>&n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6.2=A1=A2tooFar=B1=
=ED=CA=BE=BA=F3=D2=C6=B6=AF=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD=CE=BB=D6=
=C3=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=A3=AC=C6=E4=CA=B5=D2=B2=BE=CD=CA=
=C7=B4=D3i=BF=AA=CA=BC=B8=D5=B8=D5=C2=FA=D7=E3=B4=EF=B5=BD=D7=EE=B4=
=F3=CE=C4=BC=FE=CA=FD=CE=BB=D6=C3=B5=C4=C4=C7=B8=F6=CE=C4=BC=FE=A3=
=AC=D2=B2=BE=CD=CA=C7=CB=B5=A3=AC=B4=D3i=D6=C1tooFar=CA=FD=C4=BF=CE=
=AA=BA=CF=B2=A2=CA=B1=D4=CA=D0=ED=B5=C4=D7=EE=B4=F3=CE=C4=BC=FE=CA=
=FD=A3=AC=CB=FC=C0=E0=CB=C6=D3=DA=D2=BB=B8=F6=C6=BD=BB=AC=B5=C4=CE=
=C4=BC=FE=B4=B0=BF=DA=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; 6.3=A1=A2=BC=C6=CB=E3=BA=CF=BC=C6=A3=BA=
=B8=C3=CE=C4=BC=FE=B4=F3=D0=A1fileSizes[i] + =A3=A8=BD=D8=D6=B9=B5=
=BD=CF=C2=D2=BB=B8=F6=CE=C4=BC=FE=B4=F3=D0=A1sumSize[i + 1]=A3=A9=
 - =BA=F3=D2=C6=B6=AF=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD=CE=BB=D6=C3=B5=
=C4=CE=C4=BC=FE=B4=F3=D0=A1=A3=AC=D2=B2=BE=CD=CA=C7=CB=B5sumSize[=
i]=B6=D4=D3=A6=B5=C4=B1=BB=CD=B3=BC=C6=CE=C4=BC=FE=A3=AC=D3=C0=D4=
=B6=CA=C7=C2=FA=D7=E3=BA=CF=B2=A2=CA=B1=D4=CA=D0=ED=B5=C4=D7=EE=B4=
=F3=CE=C4=BC=FE=CA=FD=D5=E2=B8=F6=E3=D0=D6=B5=B5=C4=A3=AC=CB=FC=CF=
=E0=B5=B1=D3=DA=D2=BB=B8=F6=BB=AC=B6=AF=B5=C4=C7=F8=BC=E4=A3=AC=C7=
=F8=BC=E4=B4=F3=D0=A1=CE=AA=BA=CF=B2=A2=CA=B1=D4=CA=D0=ED=B5=C4=D7=
=EE=B4=F3=CE=C4=BC=FE=CA=FD=A3=ACsumSize[i]=B6=D4=D3=A6=B5=C4=D6=B5=
=CE=AA=D2=D1=B8=C3i=BF=AA=CA=BC=CB=F9=B4=A6=CE=C4=BC=FE=B4=B0=BF=DA=
=B5=C4=CB=F9=D3=D0=CE=C4=BC=FE=B4=F3=D0=A1=BA=CF=BC=C6=A1=A3</div=
><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 7=A1=A2=D5=FD=D0=F2=D1=AD=BB=
=B7=A3=AC=C8=E7=B9=FB=CE=C4=BC=FE=CA=FD=C4=BF=C2=FA=D7=E3=D7=EE=D0=
=A1=BA=CF=B2=A2=CA=B1=D4=CA=D0=ED=B5=C4=D7=EE=D0=A1=CE=C4=BC=FE=CA=
=FD=A3=AC=C7=D2=B8=C3=CE=BB=D6=C3=B5=C4=CE=C4=BC=FE=B4=F3=D0=A1=A3=
=AC=B4=F3=D3=DA=BA=CF=B2=A2=CA=B1=D4=CA=D0=ED=B5=C4=CE=C4=BC=FE=D7=
=EE=D0=A1=B4=F3=D0=A1=D3=EB=CF=C2=D2=BB=B8=F6=CE=C4=BC=FE=B4=B0=BF=
=DA=CE=C4=BC=FE=D7=DC=B4=F3=D0=A1=B3=CB=D2=D4=D2=BB=B6=A8=B1=C8=C0=
=FD=D6=D0=B5=C4=BD=CF=B4=F3=D5=DF=A3=AC=D4=F2=BC=CC=D0=F8=A3=AC=CA=
=B5=BC=CA=C9=CF=BE=CD=CA=C7=D1=A1=D4=F1=B3=F6=D2=BB=B8=F6=CE=C4=BC=
=FE=B4=B0=BF=DA=C4=DA=C4=DC=BC=E6=B9=CB=D7=EE=D0=A1=CE=C4=BC=FE=CA=
=FD=BA=CD=D7=EE=D0=A1=CE=C4=BC=FE=B4=F3=D0=A1=B5=C4=D2=BB=D7=E9=CE=
=C4=BC=FE=A3=BB</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; 8=A1=A2=
=B1=A3=D6=A4=D7=EE=D0=A1=CE=C4=BC=FE=CA=FD=C4=BF=B5=C4=D2=AA=C7=F3=
=A3=AC=B1=D8=D2=AA=CA=B1=BD=F8=D0=D0=BD=D8=C8=A1=A3=BB</div><br><=
div>&nbsp; &nbsp; &nbsp; &nbsp; 9=A1=A2=BD=D8=C8=A1=B2=A2=B7=B5=BB=
=D8=BD=D8=C8=A1=BA=F3=B5=C4=CE=C4=BC=FE=C1=D0=B1=ED=A1=A3</div><b=
r><div>&nbsp; &nbsp; &nbsp; &nbsp; =C9=CF=C3=E6=B5=C4=D2=BB=B8=F6=
=D6=D0=D0=C4=CB=BC=CF=EB=BE=CD=CA=C7=D1=A1=B3=F6=C2=FA=D7=E3=CC=F5=
=BC=FE=B5=C4=D7=EE=D0=A1=B5=C4=D2=BB=D7=E9=CE=C4=BC=FE=C0=B4=BA=CF=
=B2=A2=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =BD=F4=BD=D3=
=D7=C5=A3=AC=CE=D2=C3=C7=BF=B4=CF=C2=BC=EC=B2=E2=CA=C7=B7=F1=C2=FA=
=D7=E3=D7=EE=D0=A1=CE=C4=BC=FE=CA=FD=B4=F3=B5=C4checkMinFilesCrit=
eria()=B7=BD=B7=A8=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</div><br><=
div>/**</div><div>&nbsp;&nbsp; * @param candidates pre-filtrate</=
div><div>&nbsp;&nbsp; * @return filtered subset</div><div>&nbsp;&=
nbsp; * forget the compactionSelection if we don't have enough fi=
les</div><div>&nbsp;&nbsp; */</div><div>&nbsp; private ArrayList&=
lt;StoreFile&gt; checkMinFilesCriteria(ArrayList&lt;StoreFile&gt;=
 candidates) {</div><div>&nbsp; &nbsp; int minFiles =3D comConf.g=
etMinFilesToCompact();</div><div>&nbsp; &nbsp; if (candidates.siz=
e() &lt; minFiles) {</div><div>&nbsp; &nbsp; &nbsp; if(LOG.isDebu=
gEnabled()) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; LOG.debug("No=
t compacting files because we only have " + candidates.size() +</=
div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; " files ready for com=
paction. Need " + minFiles + " to initiate.");</div><div>&nbsp; &=
nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; candidates.clear();=
</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; return candida=
tes;</div><div>&nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =BA=
=DC=D6=B1=BD=D3=D3=D0=C4=BE=D3=D0=A3=AC=B2=BB=C2=FA=D7=E3=BA=CF=B2=
=A2=CA=B1=D7=EE=D0=A1=CE=C4=BC=FE=CA=FD=D2=AA=C7=F3=A3=AC=D6=B1=BD=
=D3clear=A3=AC=CC=AB=B1=BC=B7=C5=C1=CB=A3=A1</div><div>&nbsp; &nb=
sp; &nbsp; &nbsp; =D7=EE=BA=F3=A3=AC=CE=D2=C3=C7=BF=B4=CF=C2=C8=E7=
=BA=CE=D2=C6=B3=FD=B9=FD=C1=BF=B5=C4=CE=C4=BC=FE=A3=AC=BC=B4remov=
eExcessFiles()=B7=BD=B7=A8=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</d=
iv><br><div>/**</div><div>&nbsp;&nbsp; * @param candidates pre-fi=
ltrate</div><div>&nbsp;&nbsp; * @return filtered subset</div><div=
>&nbsp;&nbsp; * take upto maxFilesToCompact from the start</div><=
div>&nbsp;&nbsp; */</div><div>&nbsp; private ArrayList&lt;StoreFi=
le&gt; removeExcessFiles(ArrayList&lt;StoreFile&gt; candidates,</=
div><div>&nbsp; &nbsp; &nbsp; boolean isUserCompaction, boolean i=
sMajorCompaction) {</div><div>&nbsp; &nbsp; // =CA=C7=B7=F1=B9=FD=
=C1=BF=A3=BA=CE=C4=BC=FE=C1=D0=B1=ED=B4=F3=D0=A1=BC=F5=C8=A5=C2=FA=
=D7=E3=BA=CF=B2=A2=B5=C4=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD</div><div>=
&nbsp; &nbsp; int excess =3D candidates.size() - comConf.getMaxFi=
lesToCompact();</div><div>&nbsp; &nbsp; if (excess &gt; 0) {</div=
><div>&nbsp; &nbsp; &nbsp; if (isMajorCompaction &amp;&amp; isUse=
rCompaction) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; LOG.debug("W=
arning, compacting more than " + comConf.getMaxFilesToCompact() +=
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; " files beca=
use of a user-requested major compaction");</div><div>&nbsp; &nbs=
p; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; LOG.debu=
g("Too many admissible files. Excluding " + excess</div><div>&nbs=
p; &nbsp; &nbsp; &nbsp; &nbsp; + " files from compaction candidat=
es");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; candidates.subList(co=
mConf.getMaxFilesToCompact(), candidates.size()).clear();</div><d=
iv>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nb=
sp; &nbsp; return candidates;</div><div>&nbsp; }</div><div>&nbsp;=
 &nbsp; &nbsp; &nbsp; =CB=FC=CA=C7=D2=AA=C7=F3=B4=FD=BA=CF=B2=A2=CE=
=C4=BC=FE=CA=FD=B2=BB=C4=DC=B3=AC=B9=FD=CF=B5=CD=B3=C9=E8=D6=C3=B5=
=C4=BA=CF=B2=A2=CA=B1=D7=EE=B4=F3=CE=C4=BC=FE=CA=FD=A1=A3</div><d=
iv>&nbsp; &nbsp; &nbsp; &nbsp; =D6=C1=B4=CB=A3=AC=BA=CF=B2=A2=C7=EB=
=C7=F3=B5=C4=C9=FA=B3=C9=BA=CD=CE=C4=BC=FE=B5=C4=D1=A1=D4=F1=BE=CD=
=B5=BD=B4=CB=CE=AA=D6=B9=C1=CB=A1=A3</div><br><div>&nbsp; &nbsp;=20=
&nbsp; &nbsp; =BD=D3=CF=C2=C0=B4=D4=D9=BB=D8=B5=BDCompactSplitThr=
ead=B5=C4requestCompactionInternal()=B7=BD=B7=A8=A3=AC=BF=B4=CF=C2=
=CB=FC=B6=D4=CF=DF=B3=CC=B3=D8=CA=C7=C8=E7=BA=CE=B4=A6=C0=ED=B5=C4=
=A1=A3=D5=E2=C0=EF=A3=AC=CB=FC=CA=D7=CF=C8=BC=D9=C9=E8=B4=F3=B2=BF=
=B7=D6=BA=CF=B2=A2=B6=BC=CA=C7small=A3=AC=CB=F9=D2=D4=CB=FC=BD=AB=
=CF=B5=CD=B3=D2=FD=B7=A2=B5=C4=BA=CF=B2=A2=B7=C5=BD=F8small pool=A3=
=AC=C8=BB=BA=F3=D4=DA=CC=D8=B6=A8=B5=C4=CA=B1=BB=FA=D4=D9=D7=F6=BE=
=F6=B6=CF=A3=AC=C8=E7=B9=FB=D3=D0=B1=D8=D2=AA=B5=C4=BB=B0=BB=E1=C5=
=B2=D6=C1large pool=A1=A3=D2=B2=BE=CD=CA=C7=CB=B5=A3=AC=C8=E7=B9=FB=
selectNow=CE=AAfalse=A3=AC=BC=B4=CF=B5=CD=B3=D7=D4=C9=ED=D2=FD=B7=
=A2=B5=C4=BA=CF=B2=A2=A3=AC=B1=C8=C8=E7MemStore flush=A1=A2compac=
t=BC=EC=B2=E9=CF=DF=B3=CC=B5=C8=A3=AC=CD=B3=D2=BB=B7=C5=C8=EB=B5=BD=
shortCompactions=D6=D0=A3=AC=BC=B4small pool=A3=BB=B6=F8=C8=E7=B9=
=FB=CA=C7=C8=CB=CE=AA=B4=A5=B7=A2=B5=C4=A3=AC=BC=B4selectNow=CE=AA=
true=A3=AC=B1=C8=C8=E7HBase shell=B4=A5=B7=A2=B5=C4=A3=AC=D4=F2=BB=
=B9=D2=AA=BF=B4HStore=D6=D0=BA=CF=B2=A2=C7=EB=C7=F3=B4=F3=D0=A1=CA=
=C7=B7=F1=B3=AC=B9=FD=E3=D0=D6=B5=A3=AC=B3=AC=B9=FD=D4=F2=B7=C5=C8=
=EBlongCompactions=A3=AC=BC=B4large pool=A3=AC=B7=F1=D4=F2=BB=B9=CA=
=C7small pool=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =C4=
=C7=C3=B4=D5=E2=B8=F6HStore=D6=D0=BA=CF=B2=A2=C7=EB=C7=F3=B4=F3=D0=
=A1=CA=C7=B7=F1=B3=AC=B9=FD=E3=D0=D6=B5=CA=C7=C8=E7=BA=CE=BC=C6=CB=
=E3=B5=C4=C4=D8=A3=BF=CE=D2=C3=C7=B8=FA=D7=D9=CF=C2HStore=B5=C4th=
rottleCompaction()=B7=BD=B7=A8=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA=
</div><br><div>@Override</div><div>&nbsp; public boolean throttle=
Compaction(long compactionSize) {</div><div>&nbsp; &nbsp; return=20=
storeEngine.getCompactionPolicy().throttleCompaction(compactionSi=
ze);</div><div>&nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =CB=
=FC=CA=B5=BC=CA=C9=CF=CA=C7=B5=F7=D3=C3=B5=C4=BA=CF=B2=A2=B2=DF=C2=
=D4CompactionPolicy=B5=C4throttleCompaction()=B7=BD=B7=A8=A1=A3=C4=
=C7=C3=B4=A3=AC=B6=BC=D3=D0=C4=C4=BC=B8=D6=D6=BA=CF=B2=A2=B2=DF=C2=
=D4=C4=D8=A3=BF=D7=DC=BD=E1=C6=F0=C0=B4=A3=AC=D2=BB=B9=B2=D3=D0=C1=
=BD=D6=D6=A3=BARatioBasedCompactionPolicy=BA=CDStripeCompactionPo=
licy=A1=A3=CF=D6=D4=DA=CE=D2=C3=C7=D2=D4RatioBasedCompactionPolic=
y=CE=AA=C0=FD=C0=B4=BD=B2=A3=AC=C1=ED=D2=BB=D6=D6StripeCompaction=
Policy=D2=D4=BA=F3=D4=D9=B7=D6=CE=F6=A1=A3=BF=B4=CF=C2=CB=FC=B5=C4=
throttleCompaction()=B7=BD=B7=A8=A3=BA</div><div>/**</div><div>&n=
bsp;&nbsp; * @param compactionSize Total size of some compaction<=
/div><div>&nbsp;&nbsp; * @return whether this should be a large o=
r small compaction</div><div>&nbsp;&nbsp; */</div><div>&nbsp; @Ov=
erride</div><div>&nbsp; public boolean throttleCompaction(long co=
mpactionSize) {</div><div>&nbsp; &nbsp; return compactionSize &gt=
; comConf.getThrottlePoint();</div><div>&nbsp; }</div><div>&nbsp;=
 &nbsp; &nbsp; &nbsp; =CB=FC=CA=C7=BD=AB=B4=AB=C8=EB=B5=C4compact=
ionSize=D3=EBcomConf.getThrottlePoint()=C0=B4=B1=C8=BD=CF=B5=C4=A3=
=AC=B4=AB=C8=EB=B5=C4compactionSize=CA=B5=BC=CA=C9=CF=CE=AA=C9=CF=
=C3=E6=CC=E1=B5=BD=B5=C4compaction.getRequest().getSize()=A3=AC=D2=
=B2=BE=CD=CA=C7=BA=CF=B2=A2=C7=EB=C7=F3=B5=C4=B4=F3=D0=A1totalSiz=
e=A3=AC=D5=E2=B8=F6totalSize=CA=C7=CD=A8=B9=FDCompactionRequest=B5=
=C4recalculateSize()=B7=BD=B7=A8=BC=C6=CB=E3=B5=C3=B5=BD=B5=C4=A3=
=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</div><div>/**</div><div>&nbsp;&=
nbsp; * Recalculate the size of the compaction based on current f=
iles.</div><div>&nbsp;&nbsp; * @param files files that should be=20=
included in the compaction</div><div>&nbsp;&nbsp; */</div><div>&n=
bsp; private void recalculateSize() {</div><div>&nbsp; &nbsp; lon=
g sz =3D 0;</div><div>&nbsp; &nbsp; for (StoreFile sf : this.file=
sToCompact) {</div><div>&nbsp; &nbsp; &nbsp; Reader r =3D sf.getR=
eader();</div><div>&nbsp; &nbsp; &nbsp; sz +=3D r =3D=3D null ? 0=
 : r.length();</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp;=20=
this.totalSize =3D sz;</div><div>&nbsp; }</div><div>&nbsp; &nbsp;=
 &nbsp; &nbsp; =CB=FC=B1=E9=C0=FA=B4=FD=BA=CF=B2=A2=CE=C4=BC=FESt=
oreFile=A3=AC=BB=F1=C8=A1=C6=E4Reader=A3=AC=CD=A8=B9=FD=CB=FC=BB=F1=
=B5=C3=CE=C4=BC=FE=B3=A4=B6=C8=B2=A2=C0=DB=BC=D3=D6=C1totalSize=A1=
=A3</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =B6=F8comConf=CA=C7=C6=E4=
=B8=B8=C0=E0CompactionPolicy=D6=D0=B9=D8=D3=DAcompact=C5=E4=D6=C3=
=B5=C4CompactionConfiguration=C0=E0=D0=CD=B3=C9=D4=B1=B1=E4=C1=BF=
=A3=AC=C6=E4getThrottlePoint()=B7=BD=B7=A8=C8=E7=CF=C2=A3=BA</div=
><br><div>/**</div><div>&nbsp;&nbsp; * @return ThrottlePoint used=
 for classifying small and large compactions</div><div>&nbsp;&nbs=
p; */</div><div>&nbsp; public long getThrottlePoint() {</div><div=
>&nbsp; &nbsp; return throttlePoint;</div><div>&nbsp; }</div><div=
>&nbsp; &nbsp; &nbsp; &nbsp; =CA=B5=BC=CA=C9=CF=C8=A1=B5=C3=CA=C7=
CompactionConfiguration=B5=C4=B3=C9=D4=B1=B1=E4=C1=BFthrottlePoin=
t=A3=AC=B6=F8throttlePoint=D4=DA=C6=E4=B9=B9=D4=EC=B7=BD=B7=A8=D6=
=D0=B6=A8=D2=E5=C8=E7=CF=C2=A3=BA</div><div>throttlePoint =3D con=
f.getLong("hbase.regionserver.thread.compaction.throttle",</div><=
div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 * maxFilesToCompact * st=
oreConfigInfo.getMemstoreFlushSize());</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; =D3=C5=CF=C8=C8=A1=B2=CE=CA=FDhbase.regionserver.thre=
ad.compaction.throttle=A3=AC=C8=E7=B9=FB=B2=CE=CA=FD=CE=B4=C5=E4=D6=
=C3=A3=AC=C4=AC=C8=CF=CE=AA=D7=EE=B4=F3=BA=CF=B2=A2=CE=C4=BC=FE=CA=
=FDmaxFilesToCompact=D3=EBMemStore flush=B4=F3=D0=A1=B5=C4=C1=BD=B1=
=B6=A3=AC=B6=F8=D5=E2=B8=F6maxFilesToCompact=B5=C4=C8=A1=D6=B5=C8=
=E7=CF=C2=A3=BA</div><div>maxFilesToCompact =3D conf.getInt(HBASE=
_HSTORE_COMPACTION_MAX_KEY, 10);</div><div>&nbsp; &nbsp; &nbsp; &=
nbsp; =D2=B2=BE=CD=CA=C7=C8=A1=B2=CE=CA=FDhbase.hstore.compaction=
.max=A3=AC=B2=CE=CA=FD=CE=B4=C5=E4=D6=C3=B5=C4=BB=B0=C4=AC=C8=CF=CE=
=AA10=A1=A3=C4=C7=C3=B4MemStore flush=B4=F3=D0=A1=CA=C7=C8=E7=BA=CE=
=BB=F1=C8=A1=B5=C4=C4=D8=A3=BF=CB=FC=CA=B5=BC=CA=C9=CF=CA=C7=CD=A8=
=B9=FDStoreConfigInformation=BD=D3=BF=DA=B5=C4getMemstoreFlushSiz=
e()=B7=BD=B7=A8=BB=F1=C8=A1=B5=C4=A3=AC=B6=F8=D0=E8=D2=AA=CA=B9=D3=
=C3=B5=C4=D7=EE=D6=D5=CA=B5=CF=D6=B8=C3=B7=BD=B7=A8=B5=C4=C0=E0=A3=
=AC=BB=B9=CA=C7HStore=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</div><d=
iv>@Override</div><div>&nbsp; public long getMemstoreFlushSize()=20=
{</div><div>&nbsp; &nbsp; // TODO: Why is this in here?&nbsp; The=
 flushsize of the region rather than the store?&nbsp; St.Ack</div=
><div>&nbsp; &nbsp; return this.region.memstoreFlushSize;</div><d=
iv>&nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =B8=F7=CE=BB=BF=
=B4=B9=D9=BF=C9=C4=DC=D3=D0=D2=C9=CE=CA=C1=CB=A3=AC=BC=C8=C8=BBco=
mpact=CA=C7=D2=D4Store=CE=AA=B5=A5=CE=BB=BD=F8=D0=D0=B5=C4=A3=AC=CE=
=AA=CA=B2=C3=B4=D5=E2=C0=EF=BB=F1=C8=A1=B5=C4=CA=C7region=B5=C4me=
mstoreFlushSize=C4=D8=A3=BF=CE=D2=C3=C7=D6=AA=B5=C0=A3=ACHBase=B2=
=A2=B2=BB=CA=C7=D2=BB=B8=F6=B4=BF=B4=E2=D2=E2=D2=E5=C9=CF=B5=C4=C1=
=D0=CA=BD=CA=FD=BE=DD=BF=E2=A3=AC=CB=FC=B5=C4MemStore flush=B5=C4=
=B7=A2=C6=F0=A3=AC=B2=A2=B2=BB=CA=C7=D2=D4Store=CE=AA=B5=A5=CE=BB=
=BD=F8=D0=D0=B5=C4=A3=AC=B6=F8=CA=C7=D5=FB=B8=F6Region=A3=AC=D5=E2=
=D2=B2=CA=C7HBase=D2=BB=BF=AA=CA=BC=B1=A5=CA=DC=DA=B8=B2=A1=B5=C4=
=C1=D0=B4=D8Column Family=B2=BB=C4=DC=B9=FD=B6=E0=B5=C4=D4=AD=D2=F2=
=A1=A3=C4=C7=C3=B4=A3=AC=D5=E2=C0=EF=B5=C4memstoreFlushSize=BE=CD=
=BF=C9=D2=D4=BA=DC=C8=DD=D2=D7=C0=ED=BD=E2=CE=AA=CA=B2=C3=B4=D2=AA=
=BB=F1=C8=A1Region=B5=C4=C1=CB=A1=A3</div><div>&nbsp; &nbsp; &nbs=
p; &nbsp; =D5=E2=B8=F6memstoreFlushSize=CE=D2=C3=C7=D6=AE=C7=B0=BD=
=E9=C9=DC=B9=FD=A3=AC=D5=E2=C0=EF=D4=D9=BB=D8=B9=CB=CF=C2=A3=ACme=
mstoreFlushSize=CE=AAHRegion=C9=CF=C9=E8=B6=A8=B5=C4=D2=BB=B8=F6=E3=
=D0=D6=B5=A3=AC=B5=B1MemStore=B5=C4=B4=F3=D0=A1=B3=AC=B9=FD=D5=E2=
=B8=F6=E3=D0=D6=B5=CA=B1=A3=AC=BD=AB=BB=E1=B7=A2=C6=F0flush=C7=EB=
=C7=F3=A3=AC=CB=FC=B5=C4=BC=C6=CB=E3=CA=D7=CF=C8=CA=C7=D3=C9Table=
=BE=F6=B6=A8=B5=C4=A3=AC=BC=B4=C3=BF=B8=F6=B1=ED=BF=C9=D2=D4=C9=E8=
=B6=A8=D7=D4=BC=BA=B5=C4memstoreFlushSize=A3=AC=CD=A8=B9=FD=B9=D8=
=BC=FC=D7=D6MEMSTORE_FLUSHSIZE=C0=B4=C9=E8=B6=A8=A3=AC=C8=E7=B9=FB=
MEMSTORE_FLUSHSIZE=CE=B4=C9=E8=B6=A8=A3=AC=D4=F2=C8=A1=B2=CE=CA=FD=
hbase.hregion.memstore.flush.size=A3=AC=B2=CE=CA=FD=CE=B4=C5=E4=D6=
=C3=B5=C4=BB=B0=A3=AC=D4=F2=C4=AC=C8=CF=CE=AA1024*1024*128L=A3=AC=
=BC=B4128M=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp; =D3=C3=
=B0=B3=C3=C7=C9=BD=B6=AB=C8=CB=B5=C4=BB=B0=C0=B4=CB=B5=A3=AC=C2=E4=
=C2=E4=C1=CB=D5=E2=C3=B4=B6=E0=A3=AC=B5=BD=B5=D7=CA=C7=CA=B2=C3=B4=
=D2=E2=CB=BC=C4=D8=A3=BF=BA=DC=BC=F2=B5=A5=A3=AC=CB=FC=BE=CD=CA=C7=
=BF=B4=BA=CF=B2=A2=C7=EB=C7=F3=D6=D0=C9=E6=BC=B0=B5=C4=CA=FD=BE=DD=
=C1=BF=B4=F3=D0=A1=CA=C7=B7=F1=B3=AC=B9=FD=D2=BB=B8=F6=E3=D0=D6=B5=
=A3=AC=B3=AC=B9=FD=D4=F2=B7=C5=C8=EBlarge pool=A3=AC=CE=B4=B3=AC=B9=
=FD=D4=F2=B7=C5=C8=EBsmall pool=A1=A3=D5=E2=B8=F6=E3=D0=D6=B5=BF=C9=
=D2=D4=CD=A8=B9=FD=B2=CE=CA=FD=D6=B1=BD=D3=C5=E4=D6=C3=A3=AC=B2=BB=
=C5=E4=D6=C3=B5=C4=BB=B0=A3=AC=D4=F2=CA=C7=D7=EE=B4=F3=BF=C9=BA=CF=
=B2=A2=CE=C4=BC=FE=CA=FD=D3=EB=D2=FD=C6=F0MemStore=B5=C4flush=B5=C4=
=E3=D0=D6=B5memstoreFlushSize=B5=C4=C1=BD=B1=B6=A3=AC=D5=E2=B8=F6=
memstore flush=B5=BD=CE=C4=BC=FE=D6=D0=A3=AC=CA=C7=B2=BB=CA=C7=BE=
=CD=CA=C7=CE=C4=BC=FE=B5=C4=D7=DC=B4=F3=D0=A1=C4=D8=A3=BF=CE=C4=BC=
=FE=CA=FD=B3=CB=D2=D4=CE=C4=BC=FE=B4=F3=D0=A1=A3=AC=CA=C7=B2=BB=CA=
=C7=C2=DF=BC=AD=C9=CF=BD=FC=CB=C6=D3=DA=B4=FD=BA=CF=B2=A2=CA=FD=BE=
=DD=B5=C4=B4=F3=D0=A1=C4=D8=A3=BF=B4=F3=CC=E5=BE=CD=CA=C7=D5=E2=C3=
=B4=B8=F6=D2=E2=CB=BC=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &n=
bsp; =BA=C3=C1=CB=A3=AC=A1=B0=CA=FD=BE=DD=A1=B1=B5=C4=C4=BF=B5=C4=
=B5=D8--=CF=DF=B3=CC=B3=D8=D1=A1=BA=C3=C1=CB=A3=AC=BD=D3=CF=C2=C0=
=B4=BE=CD=CA=C7=B8=C3=B0=D1=A1=B0=CA=FD=BE=DD=A1=B1=B7=C5=C8=EB=CF=
=DF=B3=CC=B3=D8=C1=CB=A1=A3=BC=C8=C8=BB=CA=C7=CF=DF=B3=CC=B3=D8=A3=
=AC=C4=C7=C3=B4=D5=E2=B8=F6=A1=B0=CA=FD=BE=DD=A1=B1=BE=CD=D3=A6=B8=
=C3=CA=C7=D2=BB=B8=F6=CF=DF=B3=CC=A3=AC=CE=D2=C3=C7=BC=CC=D0=F8=BF=
=B4=A1=A3</div><br><div>// =BD=AB=BA=CF=B2=A2=C7=EB=C7=F3=B0=FC=D7=
=B0=B3=C9CompactionRunner=A3=AC=C8=D3=BD=F8=CF=DF=B3=CC=B3=D8=C8=A5=
=D6=B4=D0=D0</div><div>&nbsp; &nbsp; pool.execute(new CompactionR=
unner(s, r, compaction, pool));</div><div>&nbsp; &nbsp; &nbsp; &n=
bsp; =D5=E2=D2=BB=BE=E4=CC=E5=CF=D6=B5=C4=D4=D9=C3=F7=B0=D7=B2=BB=
=B9=FD=C1=CB=A3=AC=BD=ABHStore=A1=A2HRegion=A1=A2=BA=CF=B2=A2=C9=CF=
=CF=C2=CE=C4CompactionContext=A1=A2=CF=DF=B3=CC=B3=D8ThreadPoolEx=
ecutor=B0=FC=D7=B0=B3=C9=D2=BB=B8=F6CompactionRunner=B6=D4=CF=F3=A3=
=AC=C8=D3=C8=EB=CF=DF=B3=CC=B3=D8=D6=D0=D6=B4=D0=D0=A1=A3=B6=F8Co=
mpactionRunner=B8=F8=CE=D2=C3=C7=B5=C4=B5=DA=D2=BB=D3=A1=CF=F3=BE=
=CD=CA=C7=A3=AC=CB=FC=B1=D8=B6=A8=CA=C7=D2=BB=B8=F6=BF=C9=D6=B4=D0=
=D0=B5=C4=CF=DF=B3=CC=A1=A3=C4=C7=C3=B4=CE=D2=C3=C7=BE=CD=BF=B4=CF=
=C2=CB=FC=B5=C4=B4=FA=C2=EB=B0=C9=A3=BA</div><br><div>@edu.umd.cs=
.findbugs.annotations.SuppressWarnings(value=3D"EQ_COMPARETO_USE_=
OBJECT_EQUALS",</div><div>&nbsp; &nbsp; &nbsp; justification=3D"C=
ontrived use of compareTo")</div><div>&nbsp; private class Compac=
tionRunner implements Runnable, Comparable&lt;CompactionRunner&gt=
; {</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // =C0=E0=B5=
=C4=B6=A8=D2=E5=D6=D0=D6=B1=BD=D3=CC=E5=CF=D6=C1=CB=A3=AC=CA=B5=CF=
=D6=C1=CBRunnable=BD=D3=BF=DA=D2=E2=CE=B6=D7=C5=CB=FC=CA=C7=D2=BB=
=B8=F6=CF=DF=B3=CC=A1=A3</div><div>&nbsp; &nbsp; </div><div>&nbsp=
; &nbsp; private final Store store;</div><div>&nbsp; &nbsp; priva=
te final HRegion region;</div><div>&nbsp; &nbsp; private Compacti=
onContext compaction;</div><div>&nbsp; &nbsp; private int queuedP=
riority;</div><div>&nbsp; &nbsp; private ThreadPoolExecutor paren=
t;</div><div>&nbsp;</div><div>&nbsp; &nbsp; public CompactionRunn=
er(Store store, HRegion region,</div><div>&nbsp; &nbsp; &nbsp; &n=
bsp; CompactionContext compaction, ThreadPoolExecutor parent) {</=
div><div>&nbsp; &nbsp; &nbsp; super();</div><div>&nbsp; &nbsp; &n=
bsp; this.store =3D store;</div><div>&nbsp; &nbsp; &nbsp; this.re=
gion =3D region;</div><div>&nbsp; &nbsp; &nbsp; this.compaction =3D=
 compaction;</div><div>&nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nb=
sp; &nbsp; // =BA=CF=B2=A2=C5=C5=B6=D3=B5=C4=D3=C5=CF=C8=BC=B6=A3=
=AC=C8=E7=B9=FB=BA=CF=B2=A2=C9=CF=CF=C2=CE=C4compaction=CE=AA=BF=D5=
=A3=AC=D4=F2=CD=A8=B9=FDHStore=B5=C4getCompactPriority()=B7=BD=B7=
=A8=BB=F1=C8=A1=A3=AC=B7=F1=D4=F2=D6=B1=BD=D3=B4=D3=BA=CF=B2=A2=C7=
=EB=C7=F3=D6=D0=BB=F1=C8=A1=A3=AC</div><div>&nbsp; &nbsp; &nbsp;=20=
// =B6=F8=BA=CF=B2=A2=C7=EB=C7=F3=D6=D0=B5=C4=A3=AC=CA=B5=BC=CA=C9=
=CF=D2=B2=CA=C7=CD=A8=B9=FD=B5=F7=D3=C3requestCompactionInternal(=
)=B7=BD=B7=A8=B5=C4priority=B4=AB=C8=EB=B5=C4</div><div>&nbsp; &n=
bsp; &nbsp; this.queuedPriority =3D (this.compaction =3D=3D null)=
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ? store.getCompactP=
riority() : compaction.getRequest().getPriority();</div><div>&nbs=
p; &nbsp; &nbsp; this.parent =3D parent;</div><div>&nbsp; &nbsp;=20=
}</div><div>&nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =CF=C8=
=BF=B4=C0=E0=B5=C4=B6=A8=D2=E5=A3=AC=C0=E0=B5=C4=B6=A8=D2=E5=D6=D0=
=D6=B1=BD=D3=CC=E5=CF=D6=C1=CB=A3=AC=CA=B5=CF=D6=C1=CBRunnable=BD=
=D3=BF=DA=D2=E2=CE=B6=D7=C5=CB=FC=CA=C7=D2=BB=B8=F6=CF=DF=B3=CC=A1=
=A3=B6=F8=CB=FC=B3=FD=C1=CB=B9=B9=D4=EC=BA=AF=CA=FD=B4=AB=C8=EB=B5=
=C4=C4=C7=CB=C4=B8=F6=B3=C9=D4=B1=B1=E4=C1=BF=CD=E2=A3=AC=BB=B9=D3=
=D0=B8=F6=B1=ED=CA=BE=D3=C5=CF=C8=BC=B6=B5=C4=B3=C9=D4=B1=B1=E4=C1=
=BFqueuedPriority=A3=AC=CB=FC=B5=C4=B3=F5=CA=BC=BB=AF=CA=C7=D4=DA=
=B9=B9=D4=EC=B7=BD=B7=A8=D6=D0=CD=EA=B3=C9=B5=C4=A1=A3=C8=E7=B9=FB=
=BA=CF=B2=A2=C9=CF=CF=C2=CE=C4compaction=CE=AA=BF=D5=A3=AC=D4=F2=CD=
=A8=B9=FDHStore=B5=C4getCompactPriority()=B7=BD=B7=A8=BB=F1=C8=A1=
=A3=AC=B7=F1=D4=F2=D6=B1=BD=D3=B4=D3=BA=CF=B2=A2=C7=EB=C7=F3=D6=D0=
=BB=F1=C8=A1=A3=AC=B6=F8=BA=CF=B2=A2=C7=EB=C7=F3=D6=D0=B5=C4=A3=AC=
=CA=B5=BC=CA=C9=CF=D2=B2=CA=C7=CD=A8=B9=FD=B5=F7=D3=C3requestComp=
actionInternal()=B7=BD=B7=A8=B5=C4priority=B4=AB=C8=EB=B5=C4=A1=A3=
=CE=D2=C3=C7=BD=D3=CF=C2=C0=B4=BF=B4=CF=C2HStore=B5=C4getCompactP=
riority()=B7=BD=B7=A8=A3=BA</div><div>@Override</div><div>&nbsp;=20=
public int getCompactPriority() {</div><div>&nbsp; &nbsp; &nbsp;=20=
</div><div>&nbsp; &nbsp; // =B4=D3StoreFileManager=D6=D0=BB=F1=C8=
=A1Compact Priority</div><div>&nbsp; &nbsp; int priority =3D this=
.storeEngine.getStoreFileManager().getStoreCompactionPriority();<=
/div><div>&nbsp; &nbsp; if (priority =3D=3D PRIORITY_USER) {</div=
><div>&nbsp; &nbsp; &nbsp; LOG.warn("Compaction priority is USER=20=
despite there being no user compaction");</div><div>&nbsp; &nbsp;=
 }</div><div>&nbsp; &nbsp; return priority;</div><div>&nbsp; }</d=
iv><div>&nbsp; &nbsp; &nbsp; &nbsp; =CB=FC=D7=AA=B6=F8=B4=D3Store=
FileManager=D6=D0=BB=F1=C8=A1Compact Priority=A3=AC=BC=CC=D0=F8=B0=
=C9=A3=A1=D4=DAStoreFileManager=B5=C4=C4=AC=C8=CF=CA=B5=CF=D6Defa=
ultStoreFileManager=D6=D0=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</di=
v><div>&nbsp; @Override</div><div>&nbsp; public int getStoreCompa=
ctionPriority() {</div><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp=
; // blockingFileCount=D3=C5=CF=C8=C8=A1=B2=CE=CA=FDhbase.hstore.=
blockingStoreFiles=A3=AC=CE=B4=C5=E4=D6=C3=B5=C4=BB=B0=D4=D9=C4=AC=
=C8=CF=CE=AA7</div><div>&nbsp; &nbsp; // =BB=B9=BC=C7=B5=C3isTooM=
anyStoreFiles=D5=E2=B8=F6=B7=BD=B7=A8=C2=F0=A3=BFMemStore=D4=DA=BD=
=F8=D0=D0flush=CA=B1=BB=E1=C5=D0=B6=CFHRegion=C9=CF=C3=BF=B8=F6HS=
tore=CF=C2=B5=C4=CE=C4=BC=FE=CA=FD=CA=C7=B7=F1=CC=AB=B6=E0=A3=AC<=
/div><div>&nbsp; &nbsp; // =CC=AB=B6=E0=D4=F2=D2=E2=CE=B6=D7=C5Me=
mStore=B5=C4flush=BB=E1=B1=BB=CD=C6=B3=D9=BD=F8=D0=D0=A3=AC=D3=C5=
=CF=C8=BD=F8=D0=D0compact=A3=AC=B7=F1=D4=F2=CE=C4=BC=FE=CA=FD=D4=F2=
=BB=E1=D4=BD=C0=B4=D4=BD=B6=E0=A3=AC=B6=F8=D5=E2=C0=EF=A3=AC=C0=EB=
blockingFileCount=D4=BD=D4=B6=A3=AC=B5=B1=C7=B0=CE=C4=BC=FE=CA=FD=
=D4=BD=D0=A1</div><div>&nbsp; &nbsp; // =B5=C4=BB=B0=A3=AC=D4=F2=D2=
=E2=CE=B6=D7=C5MemStore=B5=C4flush=BF=C9=D2=D4=D3=C5=CF=C8=BD=F8=D0=
=D0=A3=AC=B6=F8compact=BF=C9=D2=D4=D4=DA=CB=FCflush=D6=AE=BA=F3=D4=
=D9=BD=F8=D0=D0=A3=AC=BD=AB=D7=CA=D4=B4=C0=FB=D3=C3=D0=A7=C2=CA=D7=
=EE=B4=F3=BB=AF</div><div>&nbsp; &nbsp; int blockingFileCount =3D=
 conf.getInt(</div><div>&nbsp; &nbsp; &nbsp; &nbsp; HStore.BLOCKI=
NG_STOREFILES_KEY, HStore.DEFAULT_BLOCKING_STOREFILE_COUNT);</div=
><div>&nbsp; &nbsp; </div><div>&nbsp; &nbsp; // =D3=C5=CF=C8=BC=B6=
=CE=AA=C9=CF=CA=F6blockingFileCount=BC=F5=C8=A5=B5=B1=C7=B0storef=
iles=B5=C4=CA=FD=C4=BF</div><div>&nbsp; &nbsp; int priority =3D b=
lockingFileCount - storefiles.size();</div><div>&nbsp; &nbsp; </d=
iv><div>&nbsp; &nbsp; // =C8=E7=B9=FBpriority=CE=AA1=A3=AC=D4=F2=B7=
=B5=BB=D82=A3=AC=B7=F1=D4=F2=B7=B5=BB=D8=D4=AD=D6=B5</div><div>&n=
bsp; &nbsp; return (priority =3D=3D HStore.PRIORITY_USER) ? prior=
ity + 1 : priority;</div><div>&nbsp; }</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; =D3=C5=CF=C8=BC=B6=CE=AA=C9=CF=CA=F6blockingFileCount=
=BC=F5=C8=A5=B5=B1=C7=B0storefiles=B5=C4=CA=FD=C4=BF=A1=A3=B6=F8b=
lockingFileCount=D3=C5=CF=C8=C8=A1=B2=CE=CA=FDhbase.hstore.blocki=
ngStoreFiles=A3=AC=CE=B4=C5=E4=D6=C3=B5=C4=BB=B0=D4=D9=C4=AC=C8=CF=
=CE=AA7=A1=A3=BB=B9=BC=C7=B5=C3isTooManyStoreFiles=D5=E2=B8=F6=B7=
=BD=B7=A8=C2=F0=A3=BFMemStore=D4=DA=BD=F8=D0=D0flush=CA=B1=BB=E1=C5=
=D0=B6=CFHRegion=C9=CF=C3=BF=B8=F6HStore=CF=C2=B5=C4=CE=C4=BC=FE=CA=
=FD=CA=C7=B7=F1=CC=AB=B6=E0=A3=AC=CC=AB=B6=E0=D4=F2=D2=E2=CE=B6=D7=
=C5MemStore=B5=C4flush=BB=E1=B1=BB=CD=C6=B3=D9=BD=F8=D0=D0=A3=AC=D3=
=C5=CF=C8=BD=F8=D0=D0compact=A3=AC=B7=F1=D4=F2=CE=C4=BC=FE=CA=FD=D4=
=F2=BB=E1=D4=BD=C0=B4=D4=BD=B6=E0=A3=AC=B6=F8=D5=E2=C0=EF=A3=AC=C0=
=EBblockingFileCount=D4=BD=D4=B6=A3=AC=B5=B1=C7=B0=CE=C4=BC=FE=CA=
=FD=D4=BD=D0=A1=B5=C4=BB=B0=A3=AC=D4=F2=D2=E2=CE=B6=D7=C5MemStore=
=B5=C4flush=BF=C9=D2=D4=D3=C5=CF=C8=BD=F8=D0=D0=A3=AC=B6=F8compac=
t=BF=C9=D2=D4=D4=DA=CB=FCflush=D6=AE=BA=F3=D4=D9=BD=F8=D0=D0=A3=AC=
=BD=AB=D7=CA=D4=B4=C0=FB=D3=C3=D0=A7=C2=CA=D7=EE=B4=F3=BB=AF=A1=A3=
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; =BD=D3=CF=C2=C0=B4=A3=AC=CE=
=D2=C3=C7=D4=DA=BF=B4=CF=C2CompactionRunner=D6=D0=D7=EE=D6=D8=D2=AA=
=B5=C4run()=B7=BD=B7=A8=A3=AC=B4=FA=C2=EB=C8=E7=CF=C2=A3=BA</div>=
<br><div>@Override</div><div>&nbsp; &nbsp; public void run() {</d=
iv><div>&nbsp; &nbsp; &nbsp; Preconditions.checkNotNull(server);<=
/div><div>&nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; //=
 =CA=D7=D1=A1=D7=F6=D2=BB=D0=A9=B1=D8=D2=AA=B5=C4=BB=B7=BE=B3=C5=D0=
=B6=CF=A3=AC=B1=C8=C8=E7HRegionServer=CA=C7=B7=F1=D2=D1=CD=A3=D6=B9=
=A1=A2HRegion=B6=D4=D3=A6=B5=C4=B1=ED=CA=C7=B7=F1=D4=CA=D0=EDComp=
act=B2=D9=D7=F7</div><div>&nbsp; &nbsp; &nbsp; if (server.isStopp=
ed()</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; || (region.getT=
ableDesc() !=3D null &amp;&amp; !region.getTableDesc().isCompacti=
onEnabled())) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return;</di=
v><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; // C=
ommon case - system compaction without a file selection. Select n=
ow.</div><div>&nbsp; &nbsp; &nbsp; // =B3=A3=BC=FB=B5=C4=A3=AC=CF=
=B5=CD=B3=BA=CF=B2=A2=BB=B9=C3=BB=D3=D0=D1=A1=D4=F1=B4=FD=BA=CF=B2=
=A2=B5=C4=CE=C4=BC=FE=A1=A3=CF=D6=D4=DA=D1=A1=D4=F1=CF=C2=A1=A3</=
div><div>&nbsp; &nbsp; &nbsp; if (this.compaction =3D=3D null) {<=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; // =D6=AE=C7=B0=B5=C4Compact=D3=C5=CF=C8=BC=B6=B8=B3=D6=
=B5=B8=F8oldPriority</div><div>&nbsp; &nbsp; &nbsp; &nbsp; int ol=
dPriority =3D this.queuedPriority;</div><div>&nbsp; &nbsp; &nbsp;=
 &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =BB=F1=C8=A1HSt=
ore=B5=C4Compact=D3=C5=CF=C8=BC=B6</div><div>&nbsp; &nbsp; &nbsp;=
 &nbsp; this.queuedPriority =3D this.store.getCompactPriority();<=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; // =C8=E7=B9=FB=B5=B1=C7=B0=D3=C5=CF=C8=BC=B6queuedPr=
iority=B4=F3=D3=DA=D6=AE=C7=B0=B5=C4oldPriority</div><div>&nbsp;=20=
&nbsp; &nbsp; &nbsp; if (this.queuedPriority &gt; oldPriority) {<=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Store priority de=
creased while we were in queue (due to some other compaction?),</=
div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // requeue with new p=
riority to avoid blocking potential higher priorities.</div><div>=
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; // =BD=AB=B8=C3CompactionRunner=D4=DA=C8=D3=BB=D8=
=CF=DF=B3=CC=B3=D8</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t=
his.parent.execute(this);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&=
nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &nbsp;=
 // =D1=A1=D4=F1storefile</div><div>&nbsp; &nbsp; &nbsp; &nbsp; t=
ry {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.compaction=
 =3D selectCompaction(this.region, this.store, queuedPriority, nu=
ll);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; } catch (IOException e=
x) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LOG.error("Comp=
action selection failed " + this, ex);</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; server.checkFileSystem();</div><div>&nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &=
nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (this.compaction=
 =3D=3D null) return; // nothing to do</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; // Now see if we are in correct pool for the size; if=
 not, go to the correct one.</div><div>&nbsp; &nbsp; &nbsp; &nbsp=
; // We might end up waiting for a while, so cancel the selection=
.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp;=20=
&nbsp; &nbsp; // =C8=B7=B1=A3=BA=CF=B2=A2=C7=EB=C7=F3=B4=E6=D4=DA=
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; assert this.compaction.has=
Selection();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nb=
sp; &nbsp; &nbsp; &nbsp; // =D4=D9=B4=CE=C5=D0=B6=CF=CF=C2=CA=C7=D3=
=A6=B8=C3=D4=DAlarge=B3=D8=D6=D0=D6=B4=D0=D0=BB=B9=CA=C7=D3=A6=B8=
=C3=D4=DAsmall=B3=D8=D6=D0=D6=B4=D0=D0=A3=AC=B4=CB=B4=CE=D6=BB=B8=
=F9=BE=DD=C9=CF=CA=F6=B5=C4=C4=C7=B8=F6=E3=D0=D6=B5=C0=B4=C5=D0=B6=
=CF</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ThreadPoolExecutor pool=
 =3D store.throttleCompaction(</div><div>&nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; compaction.getRequest().getSize()) ? longCompac=
tions : shortCompactions;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (this.parent !=3D pool)=20=
{// =BB=BB=B3=D8=C1=CB</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; // HStore=C8=A1=CF=FB=BA=CF=B2=A2=C7=EB=C7=F3</div><div>&nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; this.store.cancelRequestedCompaction=
(this.compaction);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // =B8=B4=CE=BBcompa=
ction=CE=AAnull</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this=
.compaction =3D null;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; </div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // =BB=BB=B3=D8</=
div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.parent =3D pool;=
</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; // =B7=C5=C8=EB=CF=DF=B3=CC=B3=D8=A3=AC=
=BA=F3=D0=F8=BB=E1=D4=D9=B3=F5=CA=BC=BB=AFcompaction</div><div>&n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; this.parent.execute(this);</div>=
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp;=20=
&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div=
>&nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; // Finally=20=
we can compact something.</div><div>&nbsp; &nbsp; &nbsp; // =C8=B7=
=B1=A3compaction=B2=BB=CE=AA=BF=D5</div><div>&nbsp; &nbsp; &nbsp;=
 assert this.compaction !=3D null;</div><div>&nbsp;</div><div>&nb=
sp; &nbsp; &nbsp; // =D6=B4=D0=D0=D6=AE=C7=B0</div><div>&nbsp; &n=
bsp; &nbsp; this.compaction.getRequest().beforeExecute();</div><d=
iv>&nbsp; &nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbs=
p; // Note: please don't put single-compaction logic here;</div><=
div>&nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp;&nbsp; put=20=
it into region/store/etc. This is CST logic.</div><div>&nbsp; &nb=
sp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =D6=B4=
=D0=D0=BF=AA=CA=BC=CA=B1=BC=E4</div><div>&nbsp; &nbsp; &nbsp; &nb=
sp; long start =3D EnvironmentEdgeManager.currentTime();</div><di=
v>&nbsp; &nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &nb=
sp; // =B5=F7=D3=C3HRegion=B5=C4compact=A3=AC=D5=EB=B6=D4store=D6=
=B4=D0=D0compact</div><div>&nbsp; &nbsp; &nbsp; &nbsp; boolean co=
mpleted =3D region.compact(compaction, store);</div><div>&nbsp; &=
nbsp; &nbsp; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =BC=
=C6=CB=E3=D6=B4=D0=D0=CA=B1=BC=E4</div><div>&nbsp; &nbsp; &nbsp;=20=
&nbsp; long now =3D EnvironmentEdgeManager.currentTime();</div><d=
iv>&nbsp; &nbsp; &nbsp; &nbsp; LOG.info(((completed) ? "Completed=
" : "Aborted") + " compaction: " +</div><div>&nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; this + "; duration=3D" + StringUtils=
.formatTimeDiff(now, start));</div><div>&nbsp; &nbsp; &nbsp; &nbs=
p; </div><div>&nbsp; &nbsp; &nbsp; &nbsp; // =B8=F9=BE=DD=BA=CF=B2=
=A2=BD=E1=B9=FB=C8=B7=B6=A8=CF=C2=D2=BB=B2=BD=B2=D9=D7=F7</div><d=
iv>&nbsp; &nbsp; &nbsp; &nbsp; if (completed) {// =C8=E7=B9=FB=BA=
=CF=B2=A2=B3=C9=B9=A6</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; // degenerate case: blocked regions require recursive enqueues<=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (store.getCompact=
Priority() &lt;=3D 0) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; // =C8=E7=B9=FB=D3=C5=CF=C8=BC=B6Priority=D0=A1=D3=DA=B5=
=C8=D3=DA0=A3=AC=D2=E2=CE=B6=D7=C5=B5=B1=C7=B0=CE=C4=BC=FE=D2=D1=BE=
=AD=CC=AB=B6=E0=A3=AC=D4=F2=D0=E8=D2=AA=B7=A2=C6=F0=D2=BB=B4=CESy=
stemCompaction</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; requestSystemCompaction(region, store, "Recursive enqueue");</d=
iv><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // see if the compaction h=
as caused us to exceed max region size</div><div>&nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; // =C7=EB=C7=F3=B7=D6=C1=D1=A3=AC=CA=B5=
=BC=CA=C9=CF=CA=C7=BF=B4Region=B5=C4=B4=F3=D0=A1=CA=C7=B7=F1=B3=AC=
=B9=FD=E3=D0=D6=B5=A3=AC=B4=D3=B6=F8=D2=FD=C6=F0=B7=D6=C1=D1</div=
><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; requestSplit(regi=
on);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nb=
sp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; } catch=
 (IOException ex) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; IOExcep=
tion remoteEx =3D RemoteExceptionHandler.checkIOException(ex);</d=
iv><div>&nbsp; &nbsp; &nbsp; &nbsp; LOG.error("Compaction failed=20=
" + this, remoteEx);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (re=
moteEx !=3D ex) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LO=
G.info("Compaction failed at original callstack: " + formatStackT=
race(ex));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbs=
p; &nbsp; &nbsp; &nbsp; server.checkFileSystem();</div><div>&nbsp=
; &nbsp; &nbsp; } catch (Exception ex) {</div><div>&nbsp; &nbsp;=20=
&nbsp; &nbsp; LOG.error("Compaction failed " + this, ex);</div><d=
iv>&nbsp; &nbsp; &nbsp; &nbsp; server.checkFileSystem();</div><di=
v>&nbsp; &nbsp; &nbsp; } finally {</div><div>&nbsp; &nbsp; &nbsp;=
 &nbsp; LOG.debug("CompactSplitThread Status: " + CompactSplitThr=
ead.this);</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbs=
p; &nbsp; </div><div>&nbsp; &nbsp; &nbsp; // =C7=EB=C7=F3=BA=CF=B2=
=A2=D6=AE=BA=F3=B5=C4=B4=A6=C0=ED</div><div>&nbsp; &nbsp; &nbsp;=20=
this.compaction.getRequest().afterExecute();</div><div>&nbsp; &nb=
sp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; run()=B7=BD=B7=A8=D2=D4=
=C9=CF=C0=B4=A3=AC=D2=B2=CA=C7=BB=E1=CA=D7=D1=A1=D7=F6=D2=BB=D0=A9=
=B1=D8=D2=AA=B5=C4=BB=B7=BE=B3=C5=D0=B6=CF=A3=AC=B1=C8=C8=E7HRegi=
onServer=CA=C7=B7=F1=D2=D1=CD=A3=D6=B9=A1=A2HRegion=B6=D4=D3=A6=B5=
=C4=B1=ED=CA=C7=B7=F1=D4=CA=D0=EDCompact=B2=D9=D7=F7=B5=C8=A1=A3<=
/div><div>&nbsp; &nbsp; &nbsp; &nbsp; =C8=BB=BA=F3=A3=AC=D5=EB=B6=
=D4compaction=CE=AAnull=B5=C4=C7=E9=BF=F6=A3=AC=BD=F8=D0=D0compac=
tion=B5=C4=B3=F5=CA=BC=BB=AF=A3=AC=BC=B4=B4=FD=BA=CF=B2=A2=CE=C4=BC=
=FE=B5=C4=D1=A1=D4=F1=A1=A3=D4=DA=D5=E2=B8=F6=B9=FD=B3=CC=D6=AE=C7=
=B0=A3=AC=BB=E1=CF=C8=C5=D0=B6=CF=CF=C2=D3=C5=CF=C8=BC=B6=A3=AC=D6=
=AE=C7=B0=B5=C4Compact=D3=C5=CF=C8=BC=B6=B8=B3=D6=B5=B8=F8oldPrio=
rity=A3=AC=BB=F1=C8=A1HStore=B5=C4Compact=D3=C5=CF=C8=BC=B6=A3=AC=
=C8=E7=B9=FB=B5=B1=C7=B0=D3=C5=CF=C8=BC=B6queuedPriority=B4=F3=D3=
=DA=D6=AE=C7=B0=B5=C4oldPriority=B5=C4=BB=B0=A3=AC=BC=B4HStore=CF=
=C2=CE=C4=BC=FE=CA=FD=C4=BF=BC=F5=C9=D9=C1=CB=A3=AC=D4=F2=BB=E1=CD=
=C6=B3=D9compact=A3=AC=BF=C9=D2=D4=D3=C5=CF=C8=BD=F8=D0=D0flush=A3=
=AC=BD=AB=B8=C3CompactionRunner=D4=D9=C8=D3=BB=D8=CF=DF=B3=CC=B3=D8=
=A1=A3=C8=E7=B9=FB=D3=C5=CF=C8=BC=B6=C2=FA=D7=E3=CC=F5=BC=FE=A3=AC=
=D4=F2=BC=CC=D0=F8=A3=AC=CD=A8=B9=FDselectCompaction()=D1=A1=D4=F1=
=B4=FD=BA=CF=B2=A2=CE=C4=BC=FE=A3=AC=B2=A2=D4=D9=B4=CE=C5=D0=B6=CF=
=CF=C2=CA=C7=D3=A6=B8=C3=D4=DAlarge=B3=D8=D6=D0=D6=B4=D0=D0=BB=B9=
=CA=C7=D3=A6=B8=C3=D4=DAsmall=B3=D8=D6=D0=D6=B4=D0=D0=A3=AC=B4=CB=
=B4=CE=D6=BB=B8=F9=BE=DD=C9=CF=CA=F6=B5=C4=C4=C7=B8=F6=E3=D0=D6=B5=
=C0=B4=C5=D0=B6=CF=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp; &nbsp=
; =BD=D3=CF=C2=C0=B4=A3=AC=C8=E7=B9=FB=BB=BB=B3=D8=C1=CB=A3=ACHSt=
ore=B5=F7=D3=C3cancelRequestedCompaction()=B7=BD=B7=A8=C8=A1=CF=FB=
=BA=CF=B2=A2=C7=EB=C7=F3=A3=AC=B8=B4=CE=BBcompaction=CE=AAnull=A3=
=AC=BB=BB=B3=D8=A3=AC=B2=A2=D4=D9=B4=CE=B7=C5=C8=EB=CF=DF=B3=CC=B3=
=D8=A3=AC=BA=F3=D0=F8=BB=E1=D4=D9=B3=F5=CA=BC=BB=AFcompaction=A3=AC=
=C8=BB=BA=F3=BE=CDreturn=A1=A3</div><br><div>&nbsp; &nbsp; &nbsp;=
 &nbsp; =C8=E7=B9=FB=C3=BB=BB=BB=B3=D8=B5=C4=BB=B0=A3=AC=C8=B7=B1=
=A3compaction=B2=BB=CE=AA=BF=D5=A3=AC=B5=F7=D3=C3HRegion=B5=C4com=
pact=A3=AC=D5=EB=B6=D4store=D6=B4=D0=D0compact=A3=AC=BC=C6=CB=E3=D6=
=B4=D0=D0=CA=B1=BC=E4=A3=AC=B2=A2=BB=F1=B5=C3compact=B5=C4=D6=B4=D0=
=D0=BD=E1=B9=FB=A3=AC=B8=F9=BE=DD=BA=CF=B2=A2=BD=E1=B9=FB=C8=B7=B6=
=A8=CF=C2=D2=BB=B2=BD=B2=D9=D7=F7=A1=A3</div><br><div>&nbsp; &nbs=
p; &nbsp; &nbsp; =C8=E7=B9=FB=BA=CF=B2=A2=B3=C9=B9=A6=A3=AC=C8=E7=
=B9=FB=D3=C5=CF=C8=BC=B6Priority=D0=A1=D3=DA=B5=C8=D3=DA0=A3=AC=D2=
=E2=CE=B6=D7=C5=B5=B1=C7=B0=CE=C4=BC=FE=D2=D1=BE=AD=CC=AB=B6=E0=A3=
=AC=D4=F2=D0=E8=D2=AA=B7=A2=C6=F0=D2=BB=B4=CESystemCompaction=A3=AC=
=B7=F1=D4=F2=C7=EB=C7=F3=B7=D6=C1=D1=A3=AC=CA=B5=BC=CA=C9=CF=CA=C7=
=BF=B4Region=B5=C4=B4=F3=D0=A1=CA=C7=B7=F1=B3=AC=B9=FD=E3=D0=D6=B5=
=A3=AC=B4=D3=B6=F8=D2=FD=C6=F0=B7=D6=C1=D1=A1=A3</div><br><div>&n=
bsp; &nbsp; &nbsp; &nbsp; =D5=FB=B8=F6CompactSplitThread=B5=C4=B9=
=A4=D7=F7=C1=F7=B3=CC=D2=D1=C3=E8=CA=F6=CD=EA=B1=CF=A1=A3=C4=C7=C3=
=B4=BD=D3=CF=C2=C0=B4=B5=C4=CE=CA=CC=E2=A3=AC=BE=CD=CA=C7=BA=CE=CA=
=B1=CA=B2=C3=B4=C7=E9=BF=F6=CF=C2=BB=E1=B7=A2=C6=F0compact=C7=EB=C7=
=F3=A3=BF=B7=A2=C6=F0=B5=C4compact=C7=EB=C7=F3=D3=D6=D3=D0=C8=E7=BA=
=CE=B2=BB=CD=AC=C4=D8=A3=BF=CA=C7=B7=F1=BB=E1=D3=D0=B6=A8=C6=DA=BC=
=EC=B2=E9=B5=C4=B9=A4=D7=F7=CF=DF=B3=CC=A3=AC=B4=D9=CA=B9compact=D4=
=DA=C2=FA=D7=E3=D2=BB=B6=A8=CC=F5=BC=FE=B5=C4=C7=E9=BF=F6=CF=C2=BD=
=F8=D0=D0=C4=D8=A3=BF</div><br></div><div>&nbsp; &nbsp; &nbsp; &n=
bsp; =C7=D2=CC=FD=CF=C2=BB=D8=B7=D6=BD=E2=A1=A3</div><div>=A1=AA=A1=
=AA=A1=AA=A1=AA=A1=AA=A1=AA=A1=AA=A1=AA=A1=AA=A1=AA=A1=AA=A1=AA=A1=
=AA=A1=AA=A1=AA=A1=AA</div><div>=B0=E6=C8=A8=C9=F9=C3=F7=A3=BA=B1=
=BE=CE=C4=CE=AACSDN=B2=A9=D6=F7=A1=B8lipeng_bigdata=A1=B9=B5=C4=D4=
=AD=B4=B4=CE=C4=D5=C2=A3=AC=D7=F1=D1=ADCC 4.0 BY-SA=B0=E6=C8=A8=D0=
=AD=D2=E9=A3=AC=D7=AA=D4=D8=C7=EB=B8=BD=C9=CF=D4=AD=CE=C4=B3=F6=B4=
=A6=C1=B4=BD=D3=BC=B0=B1=BE=C9=F9=C3=F7=A1=A3</div><div>=D4=AD=CE=
=C4=C1=B4=BD=D3=A3=BAhttps://blog.csdn.net/lipeng_bigdata/article=
/details/50807990</div><div><br></div></body></html>

------=_Next_Part_0000351078.080--

------=_Next_Part_0001053234.962--

