From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?c3Rvcm3Kws7x?=
Date: Date: Fri, 23 Jul 2021 05:51:18 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0000676593.058"

This is a multi-part message in MIME format.

------=_Next_Part_0000676593.058
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000225531.926"


------=_Next_Part_0000225531.926
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000225531.926
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!doctype html><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A=0A=0A=
=0A=0A=0A=0A<title>storm=CA=C2=CE=F1</title>=0A    =0A<style id=3D=
"wiz_custom_css">html, body {font-size: 12pt;}body {font-family:=20=
Helvetica, 'Hiragino Sans GB', '=CE=A2=C8=ED=D1=C5=BA=DA', 'Micro=
soft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.=
6;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}h1, h2=
, h3, h4, h5, h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;pa=
dding: 0;font-weight: bold;}h1 {font-size:20pt;font-size:1.67rem;=
}h2 {font-size:18pt;font-size:1.5rem;}h3 {font-size:15pt;font-siz=
e:1.25rem;}h4 {font-size:14pt;font-size:1.17rem;}h5 {font-size:12=
pt;font-size:1rem;}h6 {font-size:12pt;font-size:1rem;color: #7777=
77;margin: 1rem 0;}div, p, ul, ol, dl, li {margin:0;}blockquote,=20=
table, pre, code {margin:8px 0;}ul, ol {padding-left:32px;padding=
-left:2rem;}ol.wiz-list-level1 > li {list-style-type:decimal;}ol.=
wiz-list-level2 > li {list-style-type:lower-latin;}ol.wiz-list-le=
vel3 > li {list-style-type:lower-roman;}blockquote {padding:0 12p=
x;padding:0 0.75rem;}blockquote > :first-child {margin-top:0;}blo=
ckquote > :last-child {margin-bottom:0;}img {border:0;max-width:1=
00%;height:auto !important;margin:2px 0;}table {border-collapse:c=
ollapse;border:1px solid #bbbbbb;}td, th {padding:4px 8px;border-=
collapse:collapse;border:1px solid #bbbbbb;min-height:28px;word-b=
reak:break-all;box-sizing: border-box;}.wiz-hide {display:none !i=
mportant;}</style><style id=3D"wiz_code_style">.wiz-code-containe=
r{position: relative; padding:8px 0; margin: 5px 25px 5px 5px;tex=
t-indent:0; text-align:left;}.CodeMirror {font-family: Consolas,=20=
"Liberation Mono", Menlo, Courier, monospace; color: black; font-=
size: 10pt; font-size: 0.83rem}.CodeMirror-lines {padding: 4px 0;=
}.CodeMirror pre {padding: 0 4px;}.CodeMirror-scrollbar-filler, .=
CodeMirror-gutter-filler {background-color: white;}.CodeMirror-gu=
tters {border-right: 1px solid #ddd; background-color: #f7f7f7; w=
hite-space: nowrap;}.CodeMirror-linenumbers {}.CodeMirror-linenum=
ber {padding: 0 3px 0 5px; min-width: 20px; text-align: right; co=
lor: #999; white-space: nowrap;}.CodeMirror-guttermarker {color:=20=
black;}.CodeMirror-guttermarker-subtle {color: #999;}.CodeMirror-=
cursor {border-left: 1px solid black; border-right: none; width:=20=
0;}.CodeMirror div.CodeMirror-secondarycursor {border-left: 1px s=
olid silver;}.cm-fat-cursor .CodeMirror-cursor {width: auto; bord=
er: 0 !important; background: #7e7;}.cm-fat-cursor div.CodeMirror=
-cursors {z-index: 1;}.cm-animate-fat-cursor {width: auto; border=
: 0; -webkit-animation: blink 1.06s steps(1) infinite; -moz-anima=
tion: blink 1.06s steps(1) infinite; animation: blink 1.06s steps=
(1) infinite; background-color: #7e7;}@-moz-keyframes blink {  0%=
 {}  50% { background-color: transparent; }  100% {}}@-webkit-key=
frames blink {  0% {}  50% { background-color: transparent; }  10=
0% {}}@keyframes blink {  0% {}  50% { background-color: transpar=
ent; }  100% {}}.CodeMirror-overwrite .CodeMirror-cursor {}.cm-ta=
b { display: inline-block; text-decoration: inherit; }.CodeMirror=
-rulers {position: absolute; left: 0; right: 0; top: -50px; botto=
m: -20px; overflow: hidden;}.CodeMirror-ruler {border-left: 1px s=
olid #ccc; top: 0; bottom: 0; position: absolute;}.cm-s-default .=
cm-header {color: blue;}.cm-s-default .cm-quote {color: #090;}.cm=
-negative {color: #d44;}.cm-positive {color: #292;}.cm-header, .c=
m-strong {font-weight: bold;}.cm-em {font-style: italic;}.cm-link=
 {text-decoration: underline;}.cm-strikethrough {text-decoration:=
 line-through;}.cm-s-default .cm-keyword {color: #708;}.cm-s-defa=
ult .cm-atom {color: #219;}.cm-s-default .cm-number {color: #164;=
}.cm-s-default .cm-def {color: #00f;}.cm-s-default .cm-variable,.=
cm-s-default .cm-punctuation,.cm-s-default .cm-property,.cm-s-def=
ault .cm-operator {}.cm-s-default .cm-variable-2 {color: #05a;}.c=
m-s-default .cm-variable-3 {color: #085;}.cm-s-default .cm-commen=
t {color: #a50;}.cm-s-default .cm-string {color: #a11;}.cm-s-defa=
ult .cm-string-2 {color: #f50;}.cm-s-default .cm-meta {color: #55=
5;}.cm-s-default .cm-qualifier {color: #555;}.cm-s-default .cm-bu=
iltin {color: #30a;}.cm-s-default .cm-bracket {color: #997;}.cm-s=
-default .cm-tag {color: #170;}.cm-s-default .cm-attribute {color=
: #00c;}.cm-s-default .cm-hr {color: #999;}.cm-s-default .cm-link=
 {color: #00c;}.cm-s-default .cm-error {color: #f00;}.cm-invalidc=
har {color: #f00;}.CodeMirror-composing { border-bottom: 2px soli=
d; }div.CodeMirror span.CodeMirror-matchingbracket {color: #0f0;}=
div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #f22;}.=
CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }.Cod=
eMirror-activeline-background {background: #e8f2ff;}.CodeMirror {=
position: relative; background: #f5f5f5;}.CodeMirror-scroll {over=
flow: hidden !important; margin-bottom: 0; margin-right: -30px; p=
adding: 16px 30px 16px 0; outline: none; position: relative;}.Cod=
eMirror-sizer {position: relative; border-right: 30px solid trans=
parent;}.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirr=
or-scrollbar-filler, .CodeMirror-gutter-filler {position: absolut=
e; z-index: 6; display: none;}.CodeMirror-vscrollbar {right: 0; t=
op: 0; overflow-x: hidden; overflow-y: scroll;}.CodeMirror-hscrol=
lbar {bottom: 0; left: 0 !important; overflow-y: hidden; overflow=
-x: scroll;}.CodeMirror-scrollbar-filler {right: 0; bottom: 0;}.C=
odeMirror-gutter-filler {left: 0; bottom: 0;}.CodeMirror-gutters=20=
{position: absolute; left: 0; top: -5px; min-height: 100%; z-inde=
x: 3;}.CodeMirror-gutter {white-space: normal; height: inherit; d=
isplay: inline-block; vertical-align: top; margin-bottom: -30px;}=
.CodeMirror-gutter-wrapper {position: absolute; z-index: 4; backg=
round: none !important; border: none !important;}.CodeMirror-gutt=
er-background {position: absolute; top: 0; bottom: 0; z-index: 4;=
}.CodeMirror-gutter-elt {position: absolute; cursor: default; z-i=
ndex: 4; text-align: center;}.CodeMirror-gutter-wrapper ::selecti=
on { background-color: transparent }.CodeMirror-gutter-wrapper ::=
-moz-selection { background-color: transparent }.CodeMirror-lines=
 {cursor: text; min-height: 1px;}.CodeMirror pre {-moz-border-rad=
ius: 0; -webkit-border-radius: 0; border-radius: 0; border-width:=
 0; background: transparent; font-family: inherit; font-size: inh=
erit; margin: 0; white-space: pre; word-wrap: normal; line-height=
: inherit; color: inherit; z-index: 2; position: relative; overfl=
ow: visible; -webkit-tap-highlight-color: transparent; -webkit-fo=
nt-variant-ligatures: contextual; font-variant-ligatures: context=
ual;}.CodeMirror-wrap pre {word-wrap: break-word; white-space: pr=
e-wrap; word-break: normal;}.CodeMirror-linebackground {position:=
 absolute; left: 0; right: 0; top: 0; bottom: 0; z-index: 0;}.Cod=
eMirror-linewidget {position: relative; z-index: 2; overflow: aut=
o;}.CodeMirror-widget {}.CodeMirror-rtl pre { direction: rtl; }.C=
odeMirror-code {outline: none;}.CodeMirror-scroll,.CodeMirror-siz=
er,.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber=20=
{-moz-box-sizing: content-box; box-sizing: content-box;}.CodeMirr=
or-measure {position: absolute; width: 100%; height: 0; overflow:=
 hidden; visibility: hidden;}.CodeMirror-cursor {position: absolu=
te; pointer-events: none;}.CodeMirror-measure pre { position: sta=
tic; }div.CodeMirror-cursors {visibility: hidden; position: relat=
ive; z-index: 3;}div.CodeMirror-dragcursors {visibility: visible;=
}.CodeMirror-focused div.CodeMirror-cursors {visibility: visible;=
}.CodeMirror-selected { background: #d9d9d9; }.CodeMirror-focused=
 .CodeMirror-selected { background: #d7d4f0; }.CodeMirror-crossha=
ir { cursor: crosshair; }.CodeMirror-line::selection, .CodeMirror=
-line > span::selection, .CodeMirror-line > span > span::selectio=
n { background: #d7d4f0; }.CodeMirror-line::-moz-selection, .Code=
Mirror-line > span::-moz-selection, .CodeMirror-line > span > spa=
n::-moz-selection { background: #d7d4f0; }.cm-searching {backgrou=
nd: #ffa; background: rgba(255, 255, 0, .4);}.cm-force-border { p=
adding-right: .1px; }@media print {  .CodeMirror div.CodeMirror-c=
ursors {visibility: hidden;}}.cm-tab-wrap-hack:after { content: "=
"; }span.CodeMirror-selectedtext { background: none; }.CodeMirror=
-activeline-background, .CodeMirror-selected {transition: visibil=
ity 0ms 100ms;}.CodeMirror-blur .CodeMirror-activeline-background=
, .CodeMirror-blur .CodeMirror-selected {visibility:hidden;}.Code=
Mirror-blur .CodeMirror-matchingbracket {color:inherit !important=
;outline:none !important;text-decoration:none !important;}</style=
></head>=0A=0A<body class spellcheck=3D"false"><div><div class=3D=
"blog-single-head" style=3D"border-radius:0px !important;"><h1 cl=
ass=3D"blog-single-head-title" style=3D"margin:0px 0px 40px;font-=
size:1.563rem;font-family:&quot;Open Sans&quot;, sans-serif;font-=
weight:600;color:rgb(78, 90, 100);display:inline-block;">Trident=BC=
=F2=BD=E9</h1><div class=3D"blog-single-head-date" style=3D"borde=
r-radius:0px !important;font-size:0.813rem;font-weight:600;margin=
-top:7px;"><i class=3D"icon-calendar font-blue" style=3D"display:=
inline-block;color:rgb(53, 152, 220) !important;margin-right:5px;=
"></i><span class=3D"Apple-converted-space">&nbsp;</span>2016-04-=
06 11:28:52<span class=3D"Apple-converted-space">&nbsp;</span><i=20=
class=3D"fa fa-eye font-blue" style=3D"display:inline-block;font-=
style:normal;font-weight:normal;font-family:FontAwesome;color:rgb=
(53, 152, 220) !important;margin-right:5px;"></i><span class=3D"A=
pple-converted-space">&nbsp;</span>6,499<span class=3D"Apple-conv=
erted-space">&nbsp;</span><a href style=3D"color:rgb(154, 165, 17=
8);text-decoration:none;border-radius:0px !important;"><i class=3D=
"icon-bubbles font-blue" style=3D"display:inline-block;color:rgb(=
53, 152, 220) !important;"></i><span class=3D"Apple-converted-spa=
ce">&nbsp;</span>0</a></div></div><div class=3D"blog-single-desc"=
 style=3D"border-radius:0px !important;"><p style=3D"margin:0px;b=
order-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);=
font-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;f=
ont-weight:normal;text-align:start;text-indent:0px;background-col=
or:rgb(255, 255, 255);"><br data-filtered=3D"filtered"></p><p sty=
le=3D"margin:0px;border-radius:0px !important;font-size:1rem;colo=
r:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;f=
ont-style:normal;font-weight:normal;text-align:start;background-c=
olor:rgb(255, 255, 255);text-indent:2em;"><code class=3D"cCode" s=
tyle=3D"font-family:Menlo, Monaco, Consolas, &quot;Courier New&qu=
ot;, monospace;font-size:0.9rem;padding:2px 4px;color:rgb(199, 37=
, 78);background-color:rgb(249, 242, 244);border-radius:0px !impo=
rtant;border:1px solid rgb(225, 225, 225);">Trident</code>=CA=C7S=
torm=D6=D0=D7=EE=CE=AA=BA=CB=D0=C4=B5=C4=B8=C5=C4=EE=A3=AC=D4=DA=D7=
=F6Strom=BF=AA=B7=A2=B5=C4=B9=FD=B3=CC=D6=D0=A3=AC=BE=F8=B4=F3=B2=
=BF=B7=D6=C7=E9=BF=F6=CF=C2=CE=D2=C3=C7=B6=BC=BB=E1=CA=B9=D3=C3Tr=
ident=A3=AC=B6=F8=B2=BB=CA=C7=CA=B9=D3=C3=B4=AB=CD=B3=B5=C4Spout=A1=
=A2Bolt=A1=A3Trident=CA=C7Storm=D4=AD=D3=EF=B5=C4=B8=DF=BC=B6=B7=E2=
=D7=B0=A3=AC=D1=A7=BB=E1Trident=D6=AE=BA=F3=A3=AC=BD=AB=BB=E1=CA=B9=
=B5=C3=CE=D2=C3=C7Storm=BF=AA=B7=A2=B1=E4=B5=C3=B7=C7=B3=A3=BC=F2=
=B5=A5=A1=A3</p><p style=3D"margin:0px;border-radius:0px !importa=
nt;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sa=
ns&quot;, sans-serif;font-style:normal;font-weight:normal;text-al=
ign:start;text-indent:0px;background-color:rgb(255, 255, 255);"><=
strong style=3D"font-weight:700;"><span style=3D"border-radius:0p=
x !important;font-size:1.25rem;">=D2=BB=A1=A2=CA=B2=C3=B4=CA=C7St=
orm Trident =A3=BF</span></strong></p><p style=3D"margin:0px;bord=
er-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);fon=
t-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;font=
-weight:normal;text-align:start;background-color:rgb(255, 255, 25=
5);text-indent:2em;">=BC=F2=B6=F8=D1=D4=D6=AE=A3=BATrident=CA=C7=B1=
=E0=D0=B4Storm Topology=B5=C4=D2=BB=CC=D7=B8=DF=BC=B6=BF=F2=BC=DC=
=A3=AC=CA=C7=B6=D4=B4=AB=CD=B3Spout=A1=A2Bolt=B5=C4=B8=DF=BC=B6=B7=
=E2=D7=B0=A1=A3=D4=DA=D1=A7=CF=B0Trident=D6=AE=C7=B0=A3=AC=CE=D2=C3=
=C7=B6=BC=CA=C7=B6=BCSpout=A1=A2Bolt=B5=C4=CF=E0=B9=D8API=C0=B4=B1=
=E0=D0=B4=D2=BB=B8=F6Topology=A3=AC=D4=DA=D1=A7=CF=B0=C1=CBTriden=
t=D6=AE=BA=F3=A3=AC=CE=D2=C3=C7=BB=E1=CA=B9=D3=C3Trident API=C0=B4=
=B1=E0=D0=B4Topology=A1=A3</p><p style=3D"margin:0px;border-radiu=
s:0px !important;font-size:1rem;color:rgb(47, 53, 59);font-family=
:&quot;Open Sans&quot;, sans-serif;font-style:normal;font-weight:=
normal;text-align:start;background-color:rgb(255, 255, 255);text-=
indent:2em;">=BF=C9=D2=D4=BD=ABStormTopology=D3=EB<code class=3D"=
cCode" style=3D"font-family:Menlo, Monaco, Consolas, &quot;Courie=
r New&quot;, monospace;font-size:0.9rem;padding:2px 4px;color:rgb=
(199, 37, 78);background-color:rgb(249, 242, 244);border-radius:0=
px !important;border:1px solid rgb(225, 225, 225);">TridentTopolo=
gy</code>=B5=C4=B9=D8=CF=B5=A3=AC=C0=E0=B1=C8=CE=AAJDBC=D3=EBORM=BF=
=F2=BC=DC(mybatis=A1=A2hibernate)=D6=AE=BC=E4=B5=C4=B9=D8=CF=B5=A3=
=AC=BA=F3=D5=DF=CA=C7=C7=B0=D5=DF=B5=C4=B8=DF=BC=B6=B7=E2=D7=B0=A3=
=AC=B9=A6=C4=DC=CF=E0=CD=AC=A3=AC=B5=AB=CA=C7=BF=C9=D2=D4=BC=AB=B4=
=F3=B5=C4=BC=F5=C9=D9=CE=D2=C3=C7=B5=C4=BF=AA=B7=A2=B5=C4=B9=A4=D7=
=F7=C1=BF=A1=A3</p><p style=3D"margin:0px;border-radius:0px !impo=
rtant;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open=
 Sans&quot;, sans-serif;font-style:normal;font-weight:normal;text=
-align:start;background-color:rgb(255, 255, 255);text-indent:2em;=
">=B5=B1=C8=BB=A3=AC=BE=CD=CF=F1=CE=D2=C3=C7=D1=A7=CF=B0JDBC=D3=EB=
ORM=BF=F2=BC=DC=D2=BB=D1=F9=A3=ACJDBC=BF=C9=C4=DC=BA=DC=C8=DD=D2=D7=
=C0=ED=BD=E2=A3=AC=B5=AB=CA=C7=D1=A7=CF=B0ORM=BF=F2=BC=DC=A3=AC=BF=
=C9=C4=DC=BE=CD=CF=E0=B6=D4=B8=B4=D4=D3=D2=BB=B5=E3=A1=A3=C9=F5=D6=
=C1=D1=A7=CF=B0ORM=BF=F2=BC=DC=B5=C4=CA=B1=BC=E4=BF=C9=C4=DC=D2=AA=
=B1=C8=D1=A7=CF=B0JDBC=B5=C4=CA=B1=BC=E4=D2=AA=B8=FC=B3=A4=A3=AC=B5=
=AB=CA=C7=D2=BB=B5=A9=CE=D2=C3=C7=D1=A7=BB=E1=C1=CBORM=BF=F2=BC=DC=
=A3=AC=BF=C9=C4=DC=BE=CD=D4=D9=D2=B2=B2=BB=CF=EB=C8=A5=CA=B9=D3=C3=
JDBC=C1=CB=A3=AC=D2=F2=CE=AAORM=BF=F2=BC=DC=BF=C9=D2=D4=B0=EF=D6=FA=
=CE=D2=C3=C7=B8=FC=B8=DF=D0=A7=B5=C4=BD=F8=D0=D0=BF=AA=B7=A2=A1=A3=
</p><p style=3D"margin:0px;border-radius:0px !important;font-size=
:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sa=
ns-serif;font-style:normal;font-weight:normal;text-align:start;ba=
ckground-color:rgb(255, 255, 255);text-indent:2em;">=D1=A7=CF=B0T=
rident=D2=B2=D2=BB=D1=F9=A3=AC=BF=C9=C4=DC=CE=D2=C3=C7=D1=A7=CF=B0=
=C0=ED=BD=E2=D0=ED=B6=E0=D0=C2=B5=C4=B8=C5=C4=EE=A3=AC=B5=AB=CA=C7=
=D1=A7=BB=E1=C1=CB=BB=E1=BC=AB=B4=F3=B5=C4=CC=E1=B8=DF=CE=D2=C3=C7=
=B5=C4=BF=AA=B7=A2=D0=A7=C2=CA=A1=A3</p><p style=3D"margin:0px;bo=
rder-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);f=
ont-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;fo=
nt-weight:normal;text-align:start;background-color:rgb(255, 255,=20=
255);text-indent:2em;">Storm=D4=AD=D3=EF=D6=D0=A3=AC=D7=EE=D6=D8=D2=
=AA=B5=C4=BE=CD=CA=C7Spout=A1=A2Bolt=A1=A2Grouping=B5=C8=B8=C5=C4=
=EE=A1=A3</p><p style=3D"margin:0px;border-radius:0px !important;=
font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&=
quot;, sans-serif;font-style:normal;font-weight:normal;text-align=
:start;background-color:rgb(255, 255, 255);text-indent:2em;">Trid=
ent=B6=D4=D3=DAStorm=D4=AD=D3=EF=B5=C4=B3=E9=CF=F3=D6=F7=D2=AA=D2=
=B2=BE=CD=CA=C7=D5=EB=B6=D4=D5=E2=D0=A9=BB=F9=B1=BE=B8=C5=C4=EE=B5=
=C4=B3=E9=CF=F3=A1=A3=D6=F7=D2=AA=CC=E5=CF=D6=D4=DA=A3=BATrident=20=
Spout,Operation=A1=A2State =A1=A3</p><p style=3D"margin:0px;borde=
r-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);font=
-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;font-=
weight:normal;text-align:start;background-color:rgb(255, 255, 255=
);text-indent:2em;"><strong style=3D"font-weight:700;">Trident Sp=
out</strong>=CA=C7=D5=EB=B6=D4Storm=D4=AD=D3=EF=D6=D0=B5=C4Spout=BD=
=F8=D0=D0=B5=C4=B3=E9=CF=F3</p><p style=3D"margin:0px;border-radi=
us:0px !important;font-size:1rem;color:rgb(47, 53, 59);font-famil=
y:&quot;Open Sans&quot;, sans-serif;font-style:normal;font-weight=
:normal;text-align:start;background-color:rgb(255, 255, 255);text=
-indent:2em;"><strong style=3D"font-weight:700;">Operation</stron=
g>=CA=C7=D5=EB=B6=D4Bolt=A1=A2Grouping=B5=C8=B8=C5=C4=EE=B5=C4=B3=
=E9=CF=F3</p><p style=3D"margin:0px;border-radius:0px !important;=
font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&=
quot;, sans-serif;font-style:normal;font-weight:normal;text-align=
:start;background-color:rgb(255, 255, 255);text-indent:2em;"><str=
ong style=3D"font-weight:700;">State</strong>=CA=C7=D0=C2=CC=E1=B3=
=F6=B5=C4=B8=C5=C4=EE=A3=AC=CA=B5=BC=CA=C9=CF=BE=CD=CA=C7=CA=FD=BE=
=DD=B3=D6=BE=C3=BB=AF=B5=C4=BD=D3=BF=DA=A1=A3</p><p style=3D"marg=
in:0px;border-radius:0px !important;font-size:1rem;color:rgb(47,=20=
53, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-style:=
normal;font-weight:normal;text-align:start;text-indent:0px;backgr=
ound-color:rgb(255, 255, 255);"><br data-filtered=3D"filtered"></=
p><p style=3D"margin:0px;border-radius:0px !important;font-size:1=
rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sans=
-serif;font-style:normal;font-weight:normal;text-align:start;back=
ground-color:rgb(255, 255, 255);text-indent:2em;">=CD=A8=B3=A3=C7=
=E9=BF=F6=CF=C2=A3=AC=D0=C2=B5=C4=B8=C5=C4=EE=D2=E2=CE=B6=D7=C5=D2=
=AA=CA=B9=D3=C3=D0=C2=B5=C4API=A1=A3=B5=AB=CA=C7=B9=E9=B8=F9=BD=E1=
=B5=D7=A3=AC=BB=B9=CA=C7=B5=D7=B2=E3=BB=B9=CA=C7=CD=A8=B9=FDstorm=
=D4=AD=D3=EF=C0=B4=CA=B5=CF=D6=A1=A3=D4=DATrident=D6=D0=A3=AC=CE=D2=
=C3=C7=CA=B9=D3=C3TridentTopology=B1=ED=CA=BE=D2=BB=B8=F6=CD=D8=C6=
=CB=A3=AC=B6=F8=D4=DAStorm=D4=AD=D3=EF=D6=D0=A3=AC=CE=D2=C3=C7=CA=
=B9=D3=C3StormTopology=C0=B4=B1=ED=CA=BE=D2=BB=B8=F6=CD=D8=C6=CB=A1=
=A3TridentTopology=D7=EE=D6=D5=BB=E1=B1=BB=D7=AA=BB=BB=B3=C9Storm=
Topology=A1=A3=D4=DA=BD=D3=CF=C2=C0=B4=B5=C4=C4=DA=C8=DD=A3=AC=CE=
=D2=C3=C7=BD=AB=CA=D7=CF=C8=BD=E9=C9=DCTridentTopology=B5=C4=B9=B9=
=BD=A8=B9=FD=B3=CC=A3=AC=D2=D4=BC=B0TridentTopology=C8=E7=BA=CE=D7=
=AA=BB=AF=CE=AAStormTopology=A1=A3</p><p style=3D"margin:0px;bord=
er-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);fon=
t-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;font=
-weight:normal;text-align:start;text-indent:0px;background-color:=
rgb(255, 255, 255);"><strong style=3D"font-weight:700;"><span sty=
le=3D"border-radius:0px !important;font-size:1.25rem;">=B6=FE=A1=A2=
TridentTopology=D3=EBStormToplogy</span></strong></p><p style=3D"=
margin:0px;border-radius:0px !important;font-size:1rem;color:rgb(=
47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-st=
yle:normal;font-weight:normal;text-align:start;text-indent:0px;ba=
ckground-color:rgb(255, 255, 255);"><strong style=3D"font-weight:=
700;">1=A1=A2API=C7=F8=B1=F0=A3=BA</strong><br data-filtered=3D"f=
iltered"></p><p style=3D"margin:0px;border-radius:0px !important;=
font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&=
quot;, sans-serif;font-style:normal;font-weight:normal;text-align=
:start;text-indent:0px;background-color:rgb(255, 255, 255);">=D4=DA=
Trident=D6=D0=A3=AC=D3=D0=D7=C5=D0=C2=B5=C4=D2=BB=CC=D7=B9=B9=BD=A8=
Topology=B5=C4API=A3=AC=CE=D2=C3=C7=CF=C8=CD=A8=B9=FD=B4=D3=B4=FA=
=C2=EB=B2=E3=C3=E6=C9=CF=B6=D4=B1=C8=C0=B4=BD=F8=D0=D0=B7=D6=CE=F6=
=A3=BA<br data-filtered=3D"filtered"></p><p style=3D"margin:0px;b=
order-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);=
font-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;f=
ont-weight:normal;text-align:start;text-indent:0px;background-col=
or:rgb(255, 255, 255);">StormTopology=A3=BA=D3=C9=B4=AB=CD=B3=B5=C4=
Spout=BA=CDBolt=B5=C4API=B1=E0=D0=B4=B5=C4Topology=A3=AC=D7=EE=D6=
=D5=CA=C7=CD=A8=B9=FD<code class=3D"cCode" style=3D"font-family:M=
enlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;font-s=
ize:0.9rem;padding:2px 4px;color:rgb(199, 37, 78);background-colo=
r:rgb(249, 242, 244);border-radius:0px !important;border:1px soli=
d rgb(225, 225, 225);">TopologyBuilder</code>=B6=D4=CF=F3=C0=B4=B4=
=B4=BD=A8=B5=C4=A3=AC=B7=B5=BB=D8=B5=C4=BD=E1=B9=FB=BE=CD=CA=C7St=
ormTopology=B6=D4=CF=F3=A1=A3<br data-filtered=3D"filtered"></p><=
br><div style=3D"color:gray;"><small>=C0=B4=D4=B4=A3=BA&nbsp;<a h=
ref=3D"http://www.tianshouzhi.com/api/tutorials/storm/56">http://=
www.tianshouzhi.com/api/tutorials/storm/56</a></small></div></div=
></div><div data-mode=3D"Java" data-theme=3D"default" id=3D"wiz_c=
m_1527492141697_1317" class=3D"wiz-code-container"><textarea styl=
e=3D"display:none;">StormTopologytopology=3D&nbsp;topologyBuilder=
.createTopology();</textarea><wiz_code_mirror><div class=3D"CodeM=
irror cm-s-default CodeMirror-wrap" data-id=3D"wiz_cm_15274921415=
77_548"><div style=3D"overflow: hidden; position: relative; width=
: 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect=
=3D"off" autocapitalize=3D"off" spellcheck=3D"false" style=3D"pad=
ding:0px; width:1000px; height:1em;" tabindex=3D"0"></textarea></=
div><div class=3D"CodeMirror-scrollbar-filler"></div><div class=3D=
"CodeMirror-gutter-filler"></div><div class=3D"CodeMirror-scroll"=
><div class=3D"CodeMirror-sizer" style=3D"margin-left: 30px; marg=
in-bottom: 0px; border-right-width: 30px; min-height: 29px; paddi=
ng-right: 0px; padding-bottom: 0px;"><div style=3D"position: rela=
tive; top: 0px;"><div class=3D"CodeMirror-lines"><div style=3D"po=
sition: relative; outline: none;"><div class=3D"CodeMirror-measur=
e"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt"><di=
v>1</div></div></div><div class=3D"CodeMirror-measure"></div><div=
 style=3D"position: relative; z-index: 1;"></div><div class=3D"wi=
z-hide wiz_CodeMirror-cursors"><div class=3D"CodeMirror-cursor" s=
tyle=3D"left: 4px; top: 0px; height: 21px;">&nbsp;</div></div><di=
v class=3D"CodeMirror-code"><div class=3D"CodeMirror-activeline"=20=
style=3D"position: relative;"><div class=3D"wiz-hide wiz_CodeMirr=
or-activeline-background CodeMirror-linebackground"></div><div cl=
ass=3D"CodeMirror-gutter-background CodeMirror-activeline-gutter"=
 style=3D"left: -30px; width: 30px;"></div><div class=3D"CodeMirr=
or-gutter-wrapper CodeMirror-activeline-gutter" style=3D"left: -3=
0px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt"=20=
style=3D"left: 0px; width: 21px;">1</div></div><pre class=3D"Code=
Mirror-line"><span style=3D"padding-right: 0.1px;"><span class=3D=
"cm-variable">StormTopologytopology</span><span class=3D"cm-opera=
tor">=3D</span>&nbsp;<span class=3D"cm-variable">topologyBuilder<=
/span>.<span class=3D"cm-variable">createTopology</span>();</span=
></pre></div></div></div></div></div></div><div style=3D"position=
: absolute; height: 13px; width: 1px; border-bottom-width: 0px; b=
order-bottom-style: solid; border-bottom-color: transparent; top:=
 29px;"></div><div class=3D"CodeMirror-gutters" style=3D"height:=20=
59px;"><div class=3D"CodeMirror-gutter CodeMirror-linenumbers" st=
yle=3D"width: 29px;"></div></div></div></div></wiz_code_mirror></=
div><div><div class=3D"blog-single-desc" style=3D"border-radius:0=
px !important;"><p style=3D"margin:0px;border-radius:0px !importa=
nt;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sa=
ns&quot;, sans-serif;font-style:normal;font-weight:normal;text-al=
ign:start;text-indent:0em;background-color:rgb(255, 255, 255);">T=
ridentTopology=A3=BA=D3=C9Trident=B5=C4API=B1=E0=D0=B4=B5=C4Topol=
ogy=A3=AC=D2=F2=CE=AA=D4=DATrident=B5=C4API=D6=D0=A3=AC=CA=B9=D3=C3=
TridentTopology=C0=B4=B1=ED=CA=BE=D2=BB=B8=F6Topology=A3=AC=CA=C7=
=D6=B1=BD=D3new=B3=F6=C0=B4=B5=C4=A1=A3</p></div></div><div data-=
mode=3D"Java" data-theme=3D"default" id=3D"wiz_cm_1527492141697_5=
909" class=3D"wiz-code-container"><textarea style=3D"display:none=
;">TridentTopology&nbsp;tridentTopology&nbsp;=3D&nbsp;new&nbsp;Tr=
identTopology();</textarea><wiz_code_mirror><div class=3D"CodeMir=
ror cm-s-default CodeMirror-wrap" data-id=3D"wiz_cm_1527492141565=
_6723"><div style=3D"overflow: hidden; position: relative; width:=
 3px; height: 0px; top: 20px; left: 34px;"><textarea autocorrect=3D=
"off" autocapitalize=3D"off" spellcheck=3D"false" style=3D"paddin=
g:0px; width:1000px; height:1em;" tabindex=3D"0"></textarea></div=
><div class=3D"CodeMirror-scrollbar-filler"></div><div class=3D"C=
odeMirror-gutter-filler"></div><div class=3D"CodeMirror-scroll"><=
div class=3D"CodeMirror-sizer" style=3D"margin-left: 30px; margin=
-bottom: 0px; border-right-width: 30px; min-height: 29px; padding=
-right: 0px; padding-bottom: 0px;"><div style=3D"position: relati=
ve; top: 0px;"><div class=3D"CodeMirror-lines"><div style=3D"posi=
tion: relative; outline: none;"><div class=3D"CodeMirror-measure"=
><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt"><div>=
1</div></div></div><div class=3D"CodeMirror-measure"></div><div s=
tyle=3D"position: relative; z-index: 1;"></div><div class=3D"wiz-=
hide wiz_CodeMirror-cursors"><div class=3D"CodeMirror-cursor" sty=
le=3D"left: 4px; top: 0px; height: 21px;">&nbsp;</div></div><div=20=
class=3D"CodeMirror-code"><div class=3D"CodeMirror-activeline" st=
yle=3D"position: relative;"><div class=3D"wiz-hide wiz_CodeMirror=
-activeline-background CodeMirror-linebackground"></div><div clas=
s=3D"CodeMirror-gutter-background CodeMirror-activeline-gutter" s=
tyle=3D"left: -30px; width: 30px;"></div><div class=3D"CodeMirror=
-gutter-wrapper CodeMirror-activeline-gutter" style=3D"left: -30p=
x;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" st=
yle=3D"left: 0px; width: 21px;">1</div></div><pre class=3D"CodeMi=
rror-line"><span style=3D"padding-right: 0.1px;"><span class=3D"c=
m-variable">TridentTopology</span>&nbsp;<span class=3D"cm-variabl=
e">tridentTopology</span>&nbsp;<span class=3D"cm-operator">=3D</s=
pan>&nbsp;<span class=3D"cm-keyword">new</span>&nbsp;<span class=3D=
"cm-variable">TridentTopology</span>();</span></pre></div></div><=
/div></div></div></div><div style=3D"position: absolute; height:=20=
13px; width: 1px; border-bottom-width: 0px; border-bottom-style:=20=
solid; border-bottom-color: transparent; top: 29px;"></div><div c=
lass=3D"CodeMirror-gutters" style=3D"height: 59px;"><div class=3D=
"CodeMirror-gutter CodeMirror-linenumbers" style=3D"width: 29px;"=
></div></div></div></div></wiz_code_mirror></div><div><div class=3D=
"blog-single-desc" style=3D"border-radius:0px !important;"><p sty=
le=3D"margin:0px;border-radius:0px !important;font-size:1rem;colo=
r:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;f=
ont-style:normal;font-weight:normal;text-align:start;background-c=
olor:rgb(255, 255, 255);text-indent:2em;">=B5=A5=B6=C0=CC=E1=B3=F6=
=D5=E2=C1=BD=B8=F6=B8=C5=C4=EE=A3=AC=CA=C7=CE=AA=C1=CB=D2=D4=BA=F3=
=B5=C4=C7=F8=B7=D6=A1=A3=D2=D4=BA=F3=CE=D2=C3=C7=CC=E1=B5=BDStorm=
Topology=CA=B1=A3=AC=B1=ED=CA=BE=B5=C4=BE=CD=CA=C7=D2=D4Spout=A1=A2=
Bolt=B5=C8=D5=E2=D0=A9API=B4=B4=BD=A8=B5=C4Topology=A3=AC=B6=F8=CC=
=E1=B5=BDTridentTopology=B1=ED=CA=BE=B5=C4=BE=CD=CA=C7=D2=D4Tride=
nt=B5=C4API=B4=B4=BD=A8=B5=C4Topology=A1=A3</p><p style=3D"margin=
:0px;border-radius:0px !important;font-size:1rem;color:rgb(47, 53=
, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-style:no=
rmal;font-weight:normal;text-align:start;text-indent:0px;backgrou=
nd-color:rgb(255, 255, 255);"><strong style=3D"font-weight:700;">=
2=A1=A2=B4=B4=BD=A8Topology=B5=C4=C7=F8=B1=F0</strong></p><p styl=
e=3D"margin:0px;border-radius:0px !important;font-size:1rem;color=
:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;fo=
nt-style:normal;font-weight:normal;text-align:start;text-indent:0=
px;background-color:rgb(255, 255, 255);">=CE=D2=C3=C7=D2=D4=B5=A5=
=B4=CA=BC=C6=CA=FD=B0=B8=C0=FDWordCountApp(=B3=AC=C1=B4=BD=D3)=BD=
=F8=D0=D0=B6=D4=B1=C8<br data-filtered=3D"filtered"></p><p style=3D=
"margin:0px;border-radius:0px !important;font-size:1rem;color:rgb=
(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-s=
tyle:normal;font-weight:normal;text-align:start;text-indent:0px;b=
ackground-color:rgb(255, 255, 255);">StormTopology</p></div></div=
><div data-mode=3D"Java" data-theme=3D"default" id=3D"wiz_cm_1527=
492141697_8662" class=3D"wiz-code-container"><textarea style=3D"d=
isplay:none;">&nbsp;&nbsp;TopologyBuilder&nbsp;builder&nbsp;=3D&n=
bsp;new&nbsp;TopologyBuilder();=0A&nbsp;&nbsp;builder.setSpout("w=
ord-reader"&nbsp;,&nbsp;new&nbsp;WordReader(),4);=0A&nbsp;&nbsp;b=
uilder.setBolt("word-normalizer"&nbsp;,&nbsp;new&nbsp;WordNormali=
zer(),3).shuffleGrouping("word-reader"&nbsp;);=0A&nbsp;&nbsp;buil=
der.setBolt("word-counter"&nbsp;,&nbsp;new&nbsp;WordCounter(),1).=
fieldsGrouping("word-normalizer"&nbsp;,&nbsp;new&nbsp;Fields("wor=
d"));=0A&nbsp;&nbsp;StormTopology&nbsp;topology&nbsp;=3D&nbsp;bui=
lder&nbsp;.createTopology();</textarea><wiz_code_mirror><div clas=
s=3D"CodeMirror cm-s-default CodeMirror-wrap" data-id=3D"wiz_cm_1=
527492141547_1447"><div style=3D"overflow: hidden; position: rela=
tive; width: 3px; height: 0px; top: 20px; left: 34px;"><textarea=20=
autocorrect=3D"off" autocapitalize=3D"off" spellcheck=3D"false" s=
tyle=3D"padding:0px; width:1000px; height:1em;" tabindex=3D"0"></=
textarea></div><div class=3D"CodeMirror-scrollbar-filler"></div><=
div class=3D"CodeMirror-gutter-filler"></div><div class=3D"CodeMi=
rror-scroll"><div class=3D"CodeMirror-sizer" style=3D"margin-left=
: 30px; margin-bottom: 0px; border-right-width: 30px; min-height:=
 155px; padding-right: 0px; padding-bottom: 0px;"><div style=3D"p=
osition: relative; top: 0px;"><div class=3D"CodeMirror-lines"><di=
v style=3D"position: relative; outline: none;"><div class=3D"Code=
Mirror-measure"><div class=3D"CodeMirror-linenumber CodeMirror-gu=
tter-elt"><div>5</div></div></div><div class=3D"CodeMirror-measur=
e"></div><div style=3D"position: relative; z-index: 1;"></div><di=
v class=3D"wiz-hide wiz_CodeMirror-cursors"><div class=3D"CodeMir=
ror-cursor" style=3D"left: 4px; top: 0px; height: 21px;">&nbsp;</=
div></div><div class=3D"CodeMirror-code"><div class=3D"CodeMirror=
-activeline" style=3D"position: relative;"><div class=3D"wiz-hide=
 wiz_CodeMirror-activeline-background CodeMirror-linebackground">=
</div><div class=3D"CodeMirror-gutter-background CodeMirror-activ=
eline-gutter" style=3D"left: -30px; width: 30px;"></div><div clas=
s=3D"CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" styl=
e=3D"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirror=
-gutter-elt" style=3D"left: 0px; width: 21px;">1</div></div><pre=20=
class=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;">&=
nbsp;&nbsp;<span class=3D"cm-variable">TopologyBuilder</span>&nbs=
p;<span class=3D"cm-variable">builder</span>&nbsp;<span class=3D"=
cm-operator">=3D</span>&nbsp;<span class=3D"cm-keyword">new</span=
>&nbsp;<span class=3D"cm-variable">TopologyBuilder</span>();</spa=
n></pre></div><div style=3D"position: relative;"><div class=3D"Co=
deMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"Cod=
eMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; wid=
th: 21px;">2</div></div><pre class=3D"CodeMirror-line"><span styl=
e=3D"padding-right: 0.1px;">&nbsp;&nbsp;<span class=3D"cm-variabl=
e">builder</span>.<span class=3D"cm-variable">setSpout</span>(<sp=
an class=3D"cm-string">"word-reader"</span>&nbsp;,&nbsp;<span cla=
ss=3D"cm-keyword">new</span>&nbsp;<span class=3D"cm-variable">Wor=
dReader</span>(),<span class=3D"cm-number">4</span>);</span></pre=
></div><div style=3D"position: relative;"><div class=3D"CodeMirro=
r-gutter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror=
-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21p=
x;">3</div></div><pre class=3D"CodeMirror-line"><span style=3D"pa=
dding-right: 0.1px;">&nbsp;&nbsp;<span class=3D"cm-variable">buil=
der</span>.<span class=3D"cm-variable">setBolt</span>(<span class=
=3D"cm-string">"word-normalizer"</span>&nbsp;,&nbsp;<span class=3D=
"cm-keyword">new</span>&nbsp;<span class=3D"cm-variable">WordNorm=
alizer</span>(),<span class=3D"cm-number">3</span>).<span class=3D=
"cm-variable">shuffleGrouping</span>(<span class=3D"cm-string">"w=
ord-reader"</span>&nbsp;);</span></pre></div><div style=3D"positi=
on: relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"=
left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutt=
er-elt" style=3D"left: 0px; width: 21px;">4</div></div><pre class=
=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;">&nbsp;=
&nbsp;<span class=3D"cm-variable">builder</span>.<span class=3D"c=
m-variable">setBolt</span>(<span class=3D"cm-string">"word-counte=
r"</span>&nbsp;,&nbsp;<span class=3D"cm-keyword">new</span>&nbsp;=
<span class=3D"cm-variable">WordCounter</span>(),<span class=3D"c=
m-number">1</span>).<span class=3D"cm-variable">fieldsGrouping</s=
pan>(<span class=3D"cm-string">"word-normalizer"</span>&nbsp;,&nb=
sp;<span class=3D"cm-keyword">new</span>&nbsp;<span class=3D"cm-v=
ariable">Fields</span>(<span class=3D"cm-string">"word"</span>));=
</span></pre></div><div style=3D"position: relative;"><div class=3D=
"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"=
CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px;=20=
width: 21px;">5</div></div><pre class=3D"CodeMirror-line"><span s=
tyle=3D"padding-right: 0.1px;">&nbsp;&nbsp;<span class=3D"cm-vari=
able">StormTopology</span>&nbsp;<span class=3D"cm-variable">topol=
ogy</span>&nbsp;<span class=3D"cm-operator">=3D</span>&nbsp;<span=
 class=3D"cm-variable">builder</span>&nbsp;.<span class=3D"cm-var=
iable">createTopology</span>();</span></pre></div></div></div></d=
iv></div></div><div style=3D"position: absolute; height: 13px; wi=
dth: 1px; border-bottom-width: 0px; border-bottom-style: solid; b=
order-bottom-color: transparent; top: 155px;"></div><div class=3D=
"CodeMirror-gutters" style=3D"height: 185px;"><div class=3D"CodeM=
irror-gutter CodeMirror-linenumbers" style=3D"width: 29px;"></div=
></div></div></div></wiz_code_mirror></div><div><div class=3D"blo=
g-single-desc" style=3D"border-radius:0px !important;"><p style=3D=
"margin:0px;border-radius:0px !important;font-size:1rem;color:rgb=
(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-s=
tyle:normal;font-weight:normal;text-align:start;text-indent:0em;b=
ackground-color:rgb(255, 255, 255);">TridentTopology=A3=BA</p></d=
iv></div><div data-mode=3D"Java" data-theme=3D"default" id=3D"wiz=
_cm_1527492141697_5672" class=3D"wiz-code-container"><textarea st=
yle=3D"display:none;">TridentTopology&nbsp;tridentTopology&nbsp;=3D=
&nbsp;new&nbsp;TridentTopology();=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tridentTopology.=
newStream("word-reader-stream"&nbsp;,&nbsp;new&nbsp;WordReader())=
.parallelismHint(16)=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.each(&nbsp;new&nbsp;Fields("line"&=
nbsp;),&nbsp;new&nbsp;NormalizeFunction(),&nbsp;new&nbsp;Fields("=
word"&nbsp;))=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;.groupBy(&nbsp;new&nbsp;Fields("word"&nbsp=
;))=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;.persistentAggregate(&nbsp;new&nbsp;MemoryMapState.F=
actory(),&nbsp;new&nbsp;Sum(),&nbsp;new&nbsp;Fields("sum"&nbsp;))=
;=0AStormTopology&nbsp;stormTopology&nbsp;=3D&nbsp;tridentTopolog=
y.build();</textarea><wiz_code_mirror><div class=3D"CodeMirror cm=
-s-default CodeMirror-wrap" data-id=3D"wiz_cm_1527492141523_2878"=
><div style=3D"overflow: hidden; position: relative; width: 3px;=20=
height: 0px; top: 20px; left: 34px;"><textarea autocorrect=3D"off=
" autocapitalize=3D"off" spellcheck=3D"false" style=3D"padding:0p=
x; width:1000px; height:1em;" tabindex=3D"0"></textarea></div><di=
v class=3D"CodeMirror-scrollbar-filler"></div><div class=3D"CodeM=
irror-gutter-filler"></div><div class=3D"CodeMirror-scroll"><div=20=
class=3D"CodeMirror-sizer" style=3D"margin-left: 30px; margin-bot=
tom: 0px; border-right-width: 30px; min-height: 176px; padding-ri=
ght: 0px; padding-bottom: 0px;"><div style=3D"position: relative;=
 top: 0px;"><div class=3D"CodeMirror-lines"><div style=3D"positio=
n: relative; outline: none;"><div class=3D"CodeMirror-measure"><d=
iv class=3D"CodeMirror-linenumber CodeMirror-gutter-elt"><div>6</=
div></div></div><div class=3D"CodeMirror-measure"></div><div styl=
e=3D"position: relative; z-index: 1;"></div><div class=3D"wiz-hid=
e wiz_CodeMirror-cursors"><div class=3D"CodeMirror-cursor" style=3D=
"left: 4px; top: 0px; height: 21px;">&nbsp;</div></div><div class=
=3D"CodeMirror-code"><div class=3D"CodeMirror-activeline" style=3D=
"position: relative;"><div class=3D"wiz-hide wiz_CodeMirror-activ=
eline-background CodeMirror-linebackground"></div><div class=3D"C=
odeMirror-gutter-background CodeMirror-activeline-gutter" style=3D=
"left: -30px; width: 30px;"></div><div class=3D"CodeMirror-gutter=
-wrapper CodeMirror-activeline-gutter" style=3D"left: -30px;"><di=
v class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"=
left: 0px; width: 21px;">1</div></div><pre class=3D"CodeMirror-li=
ne"><span style=3D"padding-right: 0.1px;"><span class=3D"cm-varia=
ble">TridentTopology</span>&nbsp;<span class=3D"cm-variable">trid=
entTopology</span>&nbsp;<span class=3D"cm-operator">=3D</span>&nb=
sp;<span class=3D"cm-keyword">new</span>&nbsp;<span class=3D"cm-v=
ariable">TridentTopology</span>();</span></pre></div><div style=3D=
"position: relative;"><div class=3D"CodeMirror-gutter-wrapper" st=
yle=3D"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirr=
or-gutter-elt" style=3D"left: 0px; width: 21px;">2</div></div><pr=
e class=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;<span class=3D"cm-variable">tridentTopology</span>.=
<span class=3D"cm-variable">newStream</span>(<span class=3D"cm-st=
ring">"word-reader-stream"</span>&nbsp;,&nbsp;<span class=3D"cm-k=
eyword">new</span>&nbsp;<span class=3D"cm-variable">WordReader</s=
pan>()).<span class=3D"cm-variable">parallelismHint</span>(<span=20=
class=3D"cm-number">16</span>)</span></pre></div><div style=3D"po=
sition: relative;"><div class=3D"CodeMirror-gutter-wrapper" style=
=3D"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirror-=
gutter-elt" style=3D"left: 0px; width: 21px;">3</div></div><pre c=
lass=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;">&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;.<span class=3D"cm-variable">each</span>(&nbsp;<span class=3D=
"cm-keyword">new</span>&nbsp;<span class=3D"cm-variable">Fields</=
span>(<span class=3D"cm-string">"line"</span>&nbsp;),&nbsp;<span=20=
class=3D"cm-keyword">new</span>&nbsp;<span class=3D"cm-variable">=
NormalizeFunction</span>(),&nbsp;<span class=3D"cm-keyword">new</=
span>&nbsp;<span class=3D"cm-variable">Fields</span>(<span class=3D=
"cm-string">"word"</span>&nbsp;))</span></pre></div><div style=3D=
"position: relative;"><div class=3D"CodeMirror-gutter-wrapper" st=
yle=3D"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirr=
or-gutter-elt" style=3D"left: 0px; width: 21px;">4</div></div><pr=
e class=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;.<span class=3D"cm-variable">groupBy</span>(&nbsp;<span c=
lass=3D"cm-keyword">new</span>&nbsp;<span class=3D"cm-variable">F=
ields</span>(<span class=3D"cm-string">"word"</span>&nbsp;))</spa=
n></pre></div><div style=3D"position: relative;"><div class=3D"Co=
deMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"Cod=
eMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; wid=
th: 21px;">5</div></div><pre class=3D"CodeMirror-line"><span styl=
e=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.<span class=3D"cm-variable">p=
ersistentAggregate</span>(&nbsp;<span class=3D"cm-keyword">new</s=
pan>&nbsp;<span class=3D"cm-variable">MemoryMapState</span>.<span=
 class=3D"cm-variable">Factory</span>(),&nbsp;<span class=3D"cm-k=
eyword">new</span>&nbsp;<span class=3D"cm-variable">Sum</span>(),=
&nbsp;<span class=3D"cm-keyword">new</span>&nbsp;<span class=3D"c=
m-variable">Fields</span>(<span class=3D"cm-string">"sum"</span>&=
nbsp;));</span></pre></div><div style=3D"position: relative;"><di=
v class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div=
 class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"l=
eft: 0px; width: 21px;">6</div></div><pre class=3D"CodeMirror-lin=
e"><span style=3D"padding-right: 0.1px;"><span class=3D"cm-variab=
le">StormTopology</span>&nbsp;<span class=3D"cm-variable">stormTo=
pology</span>&nbsp;<span class=3D"cm-operator">=3D</span>&nbsp;<s=
pan class=3D"cm-variable">tridentTopology</span>.<span class=3D"c=
m-variable">build</span>();</span></pre></div></div></div></div><=
/div></div><div style=3D"position: absolute; height: 13px; width:=
 1px; border-bottom-width: 0px; border-bottom-style: solid; borde=
r-bottom-color: transparent; top: 176px;"></div><div class=3D"Cod=
eMirror-gutters" style=3D"height: 206px;"><div class=3D"CodeMirro=
r-gutter CodeMirror-linenumbers" style=3D"width: 29px;"></div></d=
iv></div></div></wiz_code_mirror></div><div><div class=3D"blog-si=
ngle-desc" style=3D"border-radius:0px !important;"><p style=3D"ma=
rgin:0px;border-radius:0px !important;font-size:1rem;color:rgb(47=
, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-styl=
e:normal;font-weight:normal;text-align:start;text-indent:0px;back=
ground-color:rgb(255, 255, 255);"><strong style=3D"font-weight:70=
0;">=B6=D4=B1=C8=A3=BA</strong></p><p style=3D"margin:0px;border-=
radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);font-f=
amily:&quot;Open Sans&quot;, sans-serif;font-style:normal;font-we=
ight:normal;text-align:start;background-color:rgb(255, 255, 255);=
text-indent:2em;">=D4=DAStormTopology=D6=D0=A3=AC=CE=D2=C3=C7=B6=BC=
=CA=C7=CD=A8=B9=FDTopologyBuilder=B5=C4setSpout=A1=A2setBolt=B5=C4=
=B7=BD=CA=BD=C0=B4=B4=B4=BD=A8Topology=A3=AC=C8=BB=BA=F3=CD=A8=B9=
=FDGrouping=B2=DF=C2=D4=D6=B8=B6=A8Bolt=B5=C4=CA=FD=BE=DD=C0=B4=D4=
=B4=BA=CD=B7=D6=D7=E9=B2=DF=C2=D4=A1=A3<br data-filtered=3D"filte=
red"></p><p style=3D"margin:0px;border-radius:0px !important;font=
-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot=
;, sans-serif;font-style:normal;font-weight:normal;text-align:sta=
rt;background-color:rgb(255, 255, 255);text-indent:2em;">=D4=DATr=
identTopology=D6=D0=A3=AC=CE=D2=C3=C7=CA=B9=D3=C3TridentTopology=C0=
=B4=B4=B4=BD=A8Topology=A3=AC=D5=FB=B8=F6=B4=B4=BD=A8=B9=FD=B3=CC=
=D6=D0=A3=AC=B6=BC=CA=C7=C1=F7=CA=BD=B1=E0=B3=CC=B7=E7=B8=F1=B5=C4=
=A1=A3=D2=AA=D7=A2=D2=E2=B5=C4=CA=C7=A3=AC=D4=DATrident=D6=D0=A3=AC=
=CE=D2=C3=C7=D2=C0=C8=BB=CA=B9=D3=C3=C1=CBWordReader=D5=E2=B8=F6S=
pout=A3=AC=B5=AB=CA=C7=B2=A2=C3=BB=D3=D0=CA=B9=D3=C3Bolt=A3=AC=B6=
=F8=CA=C7=CA=B9=D3=C3=C1=CB=C0=E0=CB=C6=D3=DAeach=A1=A2persistent=
Aggregate=D5=E2=D1=F9=B7=BD=B7=A8=A3=AC=C0=B4=C8=A1=B4=FABolt=B5=C4=
=B9=A6=C4=DC=A1=A3=B9=D8=D3=DA=D5=E2=D0=A9=B7=BD=B7=A8=B5=C4=D7=F7=
=D3=C3=D4=D9=D6=AE=BA=F3=BB=E1=CF=EA=CF=B8=BD=E9=C9=DC=A3=AC=C4=BF=
=C7=B0=D6=BB=D2=AA=D6=AA=B5=C0Bolt=B5=C4=D7=F7=D3=C3=B1=BB=D2=BB=D0=
=A9=B7=BD=B7=A8=C8=A1=B4=FA=C1=CB=BC=B4=BF=C9=A1=A3<br data-filte=
red=3D"filtered"></p><p style=3D"margin:0px;border-radius:0px !im=
portant;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Op=
en Sans&quot;, sans-serif;font-style:normal;font-weight:normal;te=
xt-align:start;text-indent:0px;background-color:rgb(255, 255, 255=
);"><strong style=3D"font-weight:700;"><span style=3D"border-radi=
us:0px !important;font-size:1.25rem;">=C8=FD=A1=A2TridentTopology=
=D3=EBStormToplogy=B5=C4=C1=AA=CF=B5</span></strong></p><p style=3D=
"margin:0px;border-radius:0px !important;font-size:1rem;color:rgb=
(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-s=
tyle:normal;font-weight:normal;text-align:start;background-color:=
rgb(255, 255, 255);text-indent:2em;">=B6=FE=D5=DF=B5=C4=C1=AA=CF=B5=
=D6=F7=D2=AA=CA=C7=A3=BATridentTopology=D7=EE=D6=D5=BB=E1=B1=BB=B1=
=E0=D2=EB=B3=C9StormTopology=A1=A3=C7=EB=D4=D9=B4=CE=B2=E9=BF=B4=C9=
=CF=CA=F6=B9=B9=BD=A8=B9=B9=BD=A8TridentTopology=B5=C4=D7=EE=BA=F3=
=D2=BB=BE=E4=B4=FA=C2=EB=A1=A3</p></div></div><div data-mode=3D"J=
ava" data-theme=3D"default" id=3D"wiz_cm_1527492141697_6315" clas=
s=3D"wiz-code-container"><textarea style=3D"display:none;">StormT=
opology&nbsp;stormTopology&nbsp;=3D&nbsp;tridentTopology.build();=
</textarea><wiz_code_mirror><div class=3D"CodeMirror cm-s-default=
 CodeMirror-wrap" data-id=3D"wiz_cm_1527492141485_4002"><div styl=
e=3D"overflow: hidden; position: relative; width: 3px; height: 0p=
x; top: 20px; left: 34px;"><textarea autocorrect=3D"off" autocapi=
talize=3D"off" spellcheck=3D"false" style=3D"padding:0px; width:1=
000px; height:1em;" tabindex=3D"0"></textarea></div><div class=3D=
"CodeMirror-scrollbar-filler"></div><div class=3D"CodeMirror-gutt=
er-filler"></div><div class=3D"CodeMirror-scroll"><div class=3D"C=
odeMirror-sizer" style=3D"margin-left: 30px; margin-bottom: 0px;=20=
border-right-width: 30px; min-height: 29px; padding-right: 0px; p=
adding-bottom: 0px;"><div style=3D"position: relative; top: 0px;"=
><div class=3D"CodeMirror-lines"><div style=3D"position: relative=
; outline: none;"><div class=3D"CodeMirror-measure"><div class=3D=
"CodeMirror-linenumber CodeMirror-gutter-elt"><div>1</div></div><=
/div><div class=3D"CodeMirror-measure"></div><div style=3D"positi=
on: relative; z-index: 1;"></div><div class=3D"wiz-hide wiz_CodeM=
irror-cursors"><div class=3D"CodeMirror-cursor" style=3D"left: 4p=
x; top: 0px; height: 21px;">&nbsp;</div></div><div class=3D"CodeM=
irror-code"><div class=3D"CodeMirror-activeline" style=3D"positio=
n: relative;"><div class=3D"wiz-hide wiz_CodeMirror-activeline-ba=
ckground CodeMirror-linebackground"></div><div class=3D"CodeMirro=
r-gutter-background CodeMirror-activeline-gutter" style=3D"left:=20=
-30px; width: 30px;"></div><div class=3D"CodeMirror-gutter-wrappe=
r CodeMirror-activeline-gutter" style=3D"left: -30px;"><div class=
=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0=
px; width: 21px;">1</div></div><pre class=3D"CodeMirror-line"><sp=
an style=3D"padding-right: 0.1px;"><span class=3D"cm-variable">St=
ormTopology</span>&nbsp;<span class=3D"cm-variable">stormTopology=
</span>&nbsp;<span class=3D"cm-operator">=3D</span>&nbsp;<span cl=
ass=3D"cm-variable">tridentTopology</span>.<span class=3D"cm-vari=
able">build</span>();</span></pre></div></div></div></div></div><=
/div><div style=3D"position: absolute; height: 13px; width: 1px;=20=
border-bottom-width: 0px; border-bottom-style: solid; border-bott=
om-color: transparent; top: 29px;"></div><div class=3D"CodeMirror=
-gutters" style=3D"height: 59px;"><div class=3D"CodeMirror-gutter=
 CodeMirror-linenumbers" style=3D"width: 29px;"></div></div></div=
></div></wiz_code_mirror></div><div><div class=3D"blog-single-des=
c" style=3D"border-radius:0px !important;"><p style=3D"margin:0px=
;border-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59=
);font-family:&quot;Open Sans&quot;, sans-serif;font-style:normal=
;font-weight:normal;text-align:start;background-color:rgb(255, 25=
5, 255);text-indent:2em;">=D5=E2=BE=E4=B4=FA=C2=EB=B5=C4=B5=C4=B7=
=B5=BB=D8=BD=E1=B9=FB=BB=B9=CA=C7StormTopology=B6=D4=CF=F3=A3=AC=D5=
=E2=CA=B5=BC=CA=C9=CF=D2=E2=CE=B6=D7=C5=A3=ACTridentTopology=D7=EE=
=D6=D5=BB=B9=CA=C7=BB=E1=B1=BB=B1=E0=D2=EB=B3=C9StandardTopology=A1=
=A3=D5=E2=BA=DC=C8=DD=D2=D7=C0=ED=BD=E2=A3=AC=BE=CD=CF=F1ORM=BF=F2=
=BC=DC=D3=EBJDBC=D2=BB=D1=F9=A3=ACORM=BF=F2=BC=DC=D6=BB=CA=C7=D2=BB=
=B2=E3=B7=E2=D7=B0=A3=AC=D7=EE=D6=D5=BB=B9=CA=C7=D2=AA=CD=A8=B9=FD=
JDBC=B2=D9=D7=F7=CA=FD=BE=DD=BF=E2=A1=A3=B6=F8TridentTopology=CA=C7=
=B8=DF=BC=B6=B7=E2=D7=B0=A3=AC=B5=AB=CA=C7=D7=EE=D6=D5=BB=B9=CA=C7=
=D2=AA=CD=A8=B9=FD=B1=E0=D2=EBStormTopology=C0=B4=D4=CB=D0=D0=A1=A3=
</p><p style=3D"margin:0px;border-radius:0px !important;font-size=
:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sa=
ns-serif;font-style:normal;font-weight:normal;text-align:start;te=
xt-indent:0px;background-color:rgb(255, 255, 255);"><strong style=
=3D"font-weight:700;">=D7=A2=D2=E2=A3=BA</strong>=D5=E2=D2=BB=B5=E3=
=CA=C7=B7=C7=B3=A3=D6=D8=D2=AA=B5=C4=A1=A3=C9=CF=C3=E6=CE=D2=C3=C7=
=D2=D1=BE=AD=CC=E1=B5=BD=A3=AC=D4=DATrident=D6=D0=A3=AC=D2=C0=C8=BB=
=D2=AA=D6=B8=B6=A8Spout=A3=AC=B5=AB=CA=C7=D3=C3=C1=CB=D2=BB=CF=B5=
=C1=D0=C6=E4=CB=FB=B5=C4=B7=BD=B7=A8=C8=E7each=A1=A2persistentAgg=
regate=B5=C8=A3=A8=B5=B1=C8=BB=B2=BB=D6=B9=D5=E2=D0=A9=A3=A9=A3=AC=
=B4=FA=CC=E6=C1=CBBolt=B5=C4=B9=A6=C4=DC=A1=A3=C4=C7=C3=B4=D5=E2=C0=
=EF=D3=D6=CC=E1=B5=BD=A3=ACTridentTopology=BB=E1=B1=BB=B1=E0=D2=EB=
=B3=C9StormTopology=A3=AC=CA=B5=BC=CA=C9=CF=BE=CD=D2=E2=CE=B6=D7=C5=
Storm=D7=EE=D6=D5=BB=E1=BD=AB=D5=E2=D0=A9=B7=BD=B7=A8=D7=AA=BB=BB=
=CE=AA=D2=BB=B8=F6=BB=F2=B6=E0=B8=F6Bolt=A1=A3=CE=D2=C3=C7=D2=AA=C1=
=CB=BD=E2Trident=CA=C7=C8=E7=BA=CE=B9=A4=D7=F7=B5=C4=A3=AC=BE=CD=B1=
=D8=D0=EB=D2=AA=C1=CB=BD=E2=A3=AC=D5=E2=D0=A9=B7=BD=B7=A8=B5=C4=D7=
=EE=D6=D5=CA=C7=C8=E7=BA=CE=B1=BB=D7=AA=BB=BB=CE=AABolt=B5=C4=A1=A3=
=D7=EE=BC=F2=B5=A5=B5=C4=B2=E9=BF=B4=B7=BD=CA=BD=A3=AC=BE=CD=CA=C7=
=B2=E9=BF=B4=B1=E0=D2=EB=BA=F3=B5=C4StormTopology=B5=C4getSpout=A3=
=ACgetBolt=B7=BD=B7=A8=C0=B4=BF=B4=A1=A3<br data-filtered=3D"filt=
ered"></p><p style=3D"margin:0px;border-radius:0px !important;fon=
t-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quo=
t;, sans-serif;font-style:normal;font-weight:normal;text-align:st=
art;text-indent:0px;background-color:rgb(255, 255, 255);"><br dat=
a-filtered=3D"filtered"></p><p style=3D"margin:0px;border-radius:=
0px !important;font-size:1rem;color:rgb(47, 53, 59);font-family:&=
quot;Open Sans&quot;, sans-serif;font-style:normal;font-weight:no=
rmal;text-align:start;text-indent:0px;background-color:rgb(255, 2=
55, 255);">&nbsp;=D4=DA=BA=F3=C3=E6=CE=D2=C3=C7=BB=E1=CF=EA=CF=B8=
=BD=E9=C9=DC=A3=ACTridentTopology=CA=C7=C8=E7=BA=CE=D7=AA=BB=BB=CE=
=AAStormTopology=B5=C4=A1=A3=C4=BF=C7=B0=A3=AC=CE=D2=C3=C7=D6=BB=D0=
=E8=D2=AA=D6=AA=B5=C0TridentTopology=D7=EE=D6=D5=CA=C7=BB=E1=D7=AA=
=BB=BB=CE=AAStormTopology=BC=B4=BF=C9=A1=A3</p><p style=3D"margin=
:0px;border-radius:0px !important;font-size:1rem;color:rgb(47, 53=
, 59);font-family:&quot;Open Sans&quot;, sans-serif;font-style:no=
rmal;font-weight:normal;text-align:start;background-color:rgb(255=
, 255, 255);text-indent:2em;">=CA=C2=CA=B5=C9=CF=A3=AC=D4=DATride=
nt=BF=F2=BC=DC=BB=E1=BD=AB=B5=F7=D3=C3=B5=C4=CB=F9=D3=D0=B7=BD=B7=
=A8=D7=AA=BB=BB=CE=AA=D2=BB=B8=F6=B8=F6Node=A1=A3Node=C0=E0=D0=CD=
=C8=E7=CF=C2=A3=BA</p><p style=3D"margin:0px;border-radius:0px !i=
mportant;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;O=
pen Sans&quot;, sans-serif;font-style:normal;font-weight:normal;t=
ext-align:start;background-color:rgb(255, 255, 255);text-indent:2=
em;">newStream=B7=BD=B7=A8=D6=D0=B2=CE=CA=FDSpout=D7=AA=BB=BB=CE=AA=
SpoutNode=A3=AC=BD=AB=B5=F7=D3=C3=B5=C4each=B7=BD=B7=A8=A3=ACpers=
istentAggregate=B5=C8=B7=BD=B7=A8=A3=AC=D7=AA=BB=BB=CE=AA=D2=BB=B8=
=F6=B8=F6ProcesserNode=A3=AC=B6=F8groupBy=B5=C8=B2=D9=D7=F7=A3=AC=
=D7=AA=BB=BB=CE=AA=D2=BB=B8=F6PartitionNode=A3=AC=D7=EE=D6=D5=D7=E9=
=B3=C9=D2=BB=B8=F6=B6=D4=CF=F3=CD=BC=A3=AC=D7=EE=BA=F3=B8=F9=BE=DD=
=D5=E2=B8=F6=B6=D4=CF=F3=CD=BC=A3=AC=C0=B4=BD=ABTridentTopology=D7=
=AA=BB=BB=CE=AAStormTopology=A1=A3</p><ul class=3D"list-paddingle=
ft-2" style=3D"margin-top:0px;margin-bottom:10px;border-radius:0p=
x !important;color:rgb(51, 51, 51);font-family:&quot;Open Sans&qu=
ot;, sans-serif;font-size:0.875rem;font-style:normal;font-weight:=
normal;text-align:start;text-indent:0px;background-color:rgb(255,=
 255, 255);list-style-type:disc;"><li style=3D"border-radius:0px=20=
!important;"><p style=3D"margin:20px 0px;border-radius:0px !impor=
tant;">=B5=B1=C8=BB=A3=AC=B9=E2=CB=B5=B2=BB=C1=B7=BC=D9=B0=D1=CA=BD=
=A3=AC=CE=D2=C3=C7=CD=A8=B9=FD=B7=D6=CE=F6=D4=B4=C2=EB=BD=F8=D0=D0=
=BC=F2=B5=A5=CB=B5=C3=F7=A1=A3</p></li><li style=3D"border-radius=
:0px !important;"><p style=3D"margin:20px 0px;border-radius:0px !=
important;">=CA=D7=CF=C8=CB=B5=C3=F7Spout=D7=AA=BB=BB=CE=AASpoutN=
ode=B6=D4=CF=F3</p></li><li style=3D"border-radius:0px !important=
;"><p style=3D"margin:20px 0px;border-radius:0px !important;">=C6=
=E4=B4=CE=CB=B5=C3=F7each=A1=A2persistentAggregate=D7=AA=BB=BB=CE=
=AAProcesserNode</p></li><li style=3D"border-radius:0px !importan=
t;"><p style=3D"margin:20px 0px;border-radius:0px !important;">=D7=
=EE=BA=F3=CB=B5=C3=F7=C8=E7=BA=CE=B8=F9=BE=DDSpoutNode=BA=CDProce=
sserNode=BD=ABTridentTopology=D7=AA=BB=BB=CE=AAStormTopology</p><=
/li></ul><p style=3D"margin:0px;border-radius:0px !important;font=
-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot=
;, sans-serif;font-style:normal;font-weight:normal;text-align:sta=
rt;text-indent:0px;background-color:rgb(255, 255, 255);"><strong=20=
style=3D"font-weight:700;">1=A1=A2Spout=D7=AA=BB=BB=CE=AASpoutNod=
e</strong></p><p style=3D"margin:0px;border-radius:0px !important=
;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans=
&quot;, sans-serif;font-style:normal;font-weight:normal;text-alig=
n:start;text-indent:0px;background-color:rgb(255, 255, 255);">=CA=
=D7=CF=C8=A3=AC=CE=D2=C3=C7=BF=B4=D2=BB=CF=C2TridentTopology=B6=D4=
=CF=F3=B5=C4newStream=B7=BD=B7=A8=A3=BA</p><p style=3D"margin:0px=
;border-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59=
);font-family:&quot;Open Sans&quot;, sans-serif;font-style:normal=
;font-weight:normal;text-align:start;background-color:rgb(255, 25=
5, 255);text-indent:2em;"><img src=3D"0.33554262178704564.png" ti=
tle=3D"1454257631745092261.png" alt=3D"Image.png" style=3D"border=
:0px;border-radius:0px !important;"></p><p style=3D"margin:0px;bo=
rder-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);f=
ont-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;fo=
nt-weight:normal;text-align:start;text-indent:0em;background-colo=
r:rgb(255, 255, 255);">=BF=C9=D2=D4=BF=B4=B5=BD=A3=AC=BF=C9=D2=D4=
=BD=D3=CA=DC=CE=E5=D6=D6=C0=E0=D0=CD=B5=C4Spout=A3=AC=D2=D4=CF=C2=
=CA=C7=D5=E2=CE=E5=B8=F6=B7=BD=B7=A8=B5=C4=CA=B5=CF=D6=A3=BA</p><=
p style=3D"margin:0px;border-radius:0px !important;font-size:1rem=
;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-se=
rif;font-style:normal;font-weight:normal;text-align:start;backgro=
und-color:rgb(255, 255, 255);text-indent:2em;"><img src=3D"0.4794=
675575389078.png" title=3D"1454257657691024653.png" alt=3D"Image.=
png" style=3D"border:0px;border-radius:0px !important;"></p><p st=
yle=3D"margin:0px;border-radius:0px !important;font-size:1rem;col=
or:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-serif;=
font-style:normal;font-weight:normal;text-align:start;text-indent=
:0px;background-color:rgb(255, 255, 255);">=CE=D2=C3=C7=BF=C9=D2=D4=
=BF=B4=B5=BD=A3=AC=D5=E2=CE=E5=D6=D6=B7=BD=B7=A8=A3=AC=D7=EE=D6=D5=
=B5=F7=D3=C3=B5=C4=CA=B5=BC=CA=C9=CF=D6=BB=D3=D0=C1=BD=B8=F6=A3=AC=
=B2=A2=C7=D2=D4=DA=D5=E2=C1=BD=B8=F6=B7=BD=B7=A8=D6=D0=A3=AC=D7=EE=
=D6=D5=B6=BC=BD=ABSpout=D7=AA=BB=BB=CE=AA=C1=CB<code class=3D"cCo=
de" style=3D"font-family:Menlo, Monaco, Consolas, &quot;Courier N=
ew&quot;, monospace;font-size:0.9rem;padding:2px 4px;color:rgb(19=
9, 37, 78);background-color:rgb(249, 242, 244);border-radius:0px=20=
!important;border:1px solid rgb(225, 225, 225);">SpoutNode</code>=
=B6=D4=CF=F3=A1=A3</p><p style=3D"margin:0px;border-radius:0px !i=
mportant;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;O=
pen Sans&quot;, sans-serif;font-style:normal;font-weight:normal;t=
ext-align:start;text-indent:0px;background-color:rgb(255, 255, 25=
5);"><br data-filtered=3D"filtered"></p><p style=3D"margin:0px;bo=
rder-radius:0px !important;font-size:1rem;color:rgb(47, 53, 59);f=
ont-family:&quot;Open Sans&quot;, sans-serif;font-style:normal;fo=
nt-weight:normal;text-align:start;text-indent:0px;background-colo=
r:rgb(255, 255, 255);"><strong style=3D"font-weight:700;">2=A1=A2=
each=A1=A2persistentAggregate=D7=AA=BB=BB=CE=AAProcessorNode</str=
ong></p><p style=3D"margin:0px;border-radius:0px !important;font-=
size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;=
, sans-serif;font-style:normal;font-weight:normal;text-align:star=
t;text-indent:0px;background-color:rgb(255, 255, 255);">=CE=D2=C3=
=C7=BF=C9=D2=D4=B2=E9=BF=B4Stream=B6=D4=CF=F3=B5=C4=D4=B4=C2=EB=A3=
=AC =D5=D2=B5=BDeach=A1=A2persistentAggregate=C1=BD=B8=F6=B7=BD=B7=
=A8=C4=DA=C8=DD</p><p style=3D"margin:0px;border-radius:0px !impo=
rtant;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open=
 Sans&quot;, sans-serif;font-style:normal;font-weight:normal;text=
-align:start;background-color:rgb(255, 255, 255);text-indent:2em;=
"><img src=3D"0.6361811903122954.png" title=3D"145425768835909804=
2.png" alt=3D"Image.png" style=3D"border:0px;border-radius:0px !i=
mportant;"></p><p style=3D"margin:0px;border-radius:0px !importan=
t;font-size:1rem;color:rgb(47, 53, 59);font-family:&quot;Open San=
s&quot;, sans-serif;font-style:normal;font-weight:normal;text-ali=
gn:start;background-color:rgb(255, 255, 255);text-indent:2em;">=C9=
=CF=CD=BC=CF=D4=CA=BE=C1=CB=D5=E2=C1=BD=B8=F6=B7=BD=B7=A8=A3=AC=D5=
=E2=D6=D6=B6=BC=B1=BB=D7=AA=BB=BB=CE=AA=D2=BB=B8=F6<code class=3D=
"cCode" style=3D"font-family:Menlo, Monaco, Consolas, &quot;Couri=
er New&quot;, monospace;font-size:0.9rem;padding:2px 4px;color:rg=
b(199, 37, 78);background-color:rgb(249, 242, 244);border-radius:=
0px !important;border:1px solid rgb(225, 225, 225);">ProcessorNod=
e</code>=A3=AC=D7=EE=D6=D5=CC=ED=BC=D3=B5=BDTopology=D6=D0=A1=A3<=
/p><p style=3D"margin:0px;border-radius:0px !important;font-size:=
1rem;color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, san=
s-serif;font-style:normal;font-weight:normal;text-align:start;tex=
t-indent:0px;background-color:rgb(255, 255, 255);"><strong style=3D=
"font-weight:700;">3=A1=A2=D7=EE=BA=F3=CE=D2=C3=C7=BF=B4=D2=BB=CF=
=C2=A3=ACTridentTopology.build()=B5=C4=CA=B5=CF=D6</strong></p><p=
 style=3D"margin:0px;border-radius:0px !important;font-size:1rem;=
color:rgb(47, 53, 59);font-family:&quot;Open Sans&quot;, sans-ser=
if;font-style:normal;font-weight:normal;text-align:start;backgrou=
nd-color:rgb(255, 255, 255);text-indent:2em;">=D3=C9=D3=DA=D4=B4=C2=
=EB=C4=DA=C8=DD=B1=C8=BD=CF=B6=E0=A3=AC=CE=D2=C3=C7=D6=BB=B7=D6=CE=
=F6=B8=D0=D0=CB=C8=A4=B5=C4=B5=D8=B7=BD=A3=AC=C6=E4=D6=D0=BA=EC=C9=
=AB=BC=D3=C9=EE=B5=C4=B5=D8=B7=BD=A3=AC=CA=C7=C4=BF=C7=B0=D7=EE=CE=
=AA=B9=D8=D7=A2=B5=C4=A3=BA</p></div></div><div data-mode=3D"Java=
" data-theme=3D"default" id=3D"wiz_cm_1527492141697_2067" class=3D=
"wiz-code-container"><textarea style=3D"display:none;">public&nbs=
p;StormTopology&nbsp;build()&nbsp;{=0A...=0ATridentTopologyBuilde=
r&nbsp;builder&nbsp;=3D&nbsp;new&nbsp;TridentTopologyBuilder();=0A=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=0A&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;Node,&nbsp;String&gt;&nbsp;spo=
utIds&nbsp;=3D&nbsp;genSpoutIds(&nbsp;spoutNodes);=0A&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;Group,&nbsp;String&gt;=
&nbsp;boltIds&nbsp;=3D&nbsp;genBoltIds(&nbsp;mergedGroups);=0A&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;SpoutNode=CE=
=AC=BB=A4=C1=CBSpout=C0=E0=D0=CD=A3=AC=B8=F9=BE=DD=C0=E0=D0=CD=D7=
=AA=BB=BB=CE=AA=B6=D4=D3=A6=B5=C4Spout=0A&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;for(SpoutNode&nbsp;sn&nbsp;:&nbsp;spoutNo=
des&nbsp;)&nbsp;{=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;parallelism&nbsp;=3D&nbsp=
;parallelisms.get(grouper&nbsp;.nodeGroup(sn));=0A&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(sn&nb=
sp;.type&nbsp;=3D=3D&nbsp;SpoutNode.SpoutType.DRPC)&nbsp;{=0A&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;builder.setBatchPerTupleSpout(spoutIds=
&nbsp;.get(sn),&nbsp;sn.streamId&nbsp;,=0A&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(IRichSpo=
ut)&nbsp;sn.&nbsp;spout,&nbsp;parallelism&nbsp;,&nbsp;batchGroupM=
ap.get(sn&nbsp;));=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{=0A&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;ITridentSpout&nbsp;s;=0A&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;if(sn&nbsp;.spout&nbsp;instanceof&nbsp;IBatchSpout)&nbsp;{=0A=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=3D=
&nbsp;new&nbsp;BatchSpoutExecutor((IBatchSpout)sn&nbsp;.spout&nbs=
p;);=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if(sn&nbsp=
;.spout&nbsp;instanceof&nbsp;ITridentSpout)&nbsp;{=0A&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=3D&nbsp;(ITrid=
entSpout)&nbsp;sn.&nbsp;spout;=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}=
&nbsp;else&nbsp;{=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;throw&nbsp;new&nbsp;RuntimeException("Regular&nbsp;rich=
&nbsp;spouts&nbsp;not&nbsp;supported&nbsp;yet...&nbsp;try&nbsp;wr=
apping&nbsp;in&nbsp;a&nbsp;RichSpoutBatchExecutor");=0A&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;TODO:&nbsp;h=
andle&nbsp;regular&nbsp;rich&nbsp;spout&nbsp;without&nbsp;batches=
&nbsp;(need&nbsp;lots&nbsp;of&nbsp;updates&nbsp;to&nbsp;support&n=
bsp;this&nbsp;throughout)=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}=0A&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;builder.setSpout(spoutIds&nbsp;.get(=
sn),&nbsp;sn.streamId,&nbsp;sn.&nbsp;txId,&nbsp;s,&nbsp;paralleli=
sm&nbsp;,&nbsp;batchGroupMap&nbsp;.get(sn));=0A&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}=0A&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}=0A&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;for(Group&nbsp;g&nbsp;:&nbsp;mergedGroups&nbsp;)&nbsp;{=0A=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;if(!isSpoutGroup(&nbsp;g))&nbsp;{=0A&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;Integer&nbsp;p&nbsp;=3D&nbsp;parallelisms.get(g&nbsp;);=0A=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;String,&nbsp;String&gt;&nbs=
p;streamToGroup&nbsp;=3D&nbsp;getOutputStreamBatchGroups(g,&nbsp;=
batchGroupMap);=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//=BD=AB=B5=F7=D3=
=C3each=A1=A2processAggregate=B7=BD=B7=A8=BA=F3=B5=C4ProcessorNod=
e=A3=AC=D7=AA=BB=BB=CE=AABolt=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bo=
ltDeclarer&nbsp;d&nbsp;=3D&nbsp;builder.setBolt(boltIds&nbsp;.get=
(g),&nbsp;new&nbsp;SubtopologyBolt(graph,&nbsp;g&nbsp;.nodes&nbsp=
;,&nbsp;batchGroupMap&nbsp;),&nbsp;p,=0A&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;committerBa=
tches(g,&nbsp;batchGroupMap),&nbsp;streamToGroup);=0A&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;Collection&lt;PartitionNode&gt;&nbsp;inputs&nb=
sp;=3D&nbsp;uniquedSubscriptions(externalGroupInputs(g&nbsp;));&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;//=B8=F9=BE=DD=B5=F7=D3=C3GroupBy=B5=C8=B7=BD=B7=A8=D7=
=AA=BB=BB=B3=C9=B5=C4PartitionNode=BD=F8=D0=D0Grouping=B2=DF=C2=D4=
=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(PartitionNode&nbsp;n&nbsp;:=
&nbsp;inputs&nbsp;)&nbsp;{=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;Node&nbsp;parent&nbsp;=3D&nbsp;TridentUtils.ge=
tParent(&nbsp;graph,&nbsp;n&nbsp;);=0A&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;componentId;=0A&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(parent&nbsp;insta=
nceof&nbsp;SpoutNode)&nbsp;{=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;componentId&nbsp;=3D=
&nbsp;spoutIds&nbsp;.get(parent);=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{=0A&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp=
onentId&nbsp;=3D&nbsp;boltIds.get(grouper&nbsp;.nodeGroup(parent)=
);=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}=0A&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.grouping(=
&nbsp;new&nbsp;GlobalStreamId(componentId&nbsp;,&nbsp;n.streamId&=
nbsp;),&nbsp;n.thriftGrouping);=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
}=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;}=0A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}=0A=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=0A&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;builder&nbsp;.buildTopolo=
gy();=0A}</textarea><wiz_code_mirror><div class=3D"CodeMirror cm-=
s-default CodeMirror-wrap" data-id=3D"wiz_cm_1527492141269_844"><=
div style=3D"overflow: hidden; position: relative; width: 3px; he=
ight: 0px; top: 20px; left: 34px;"><textarea autocorrect=3D"off"=20=
autocapitalize=3D"off" spellcheck=3D"false" style=3D"padding:0px;=
 width:1000px; height:1em;" tabindex=3D"0"></textarea></div><div=20=
class=3D"CodeMirror-scrollbar-filler"></div><div class=3D"CodeMir=
ror-gutter-filler"></div><div class=3D"CodeMirror-scroll"><div cl=
ass=3D"CodeMirror-sizer" style=3D"margin-left: 30px; margin-botto=
m: 0px; border-right-width: 30px; min-height: 1184px; padding-rig=
ht: 0px; padding-bottom: 0px;"><div style=3D"position: relative;=20=
top: 0px;"><div class=3D"CodeMirror-lines"><div style=3D"position=
: relative; outline: none;"><div class=3D"CodeMirror-measure"></d=
iv><div class=3D"CodeMirror-measure"></div><div style=3D"position=
: relative; z-index: 1;"></div><div class=3D"wiz-hide wiz_CodeMir=
ror-cursors"><div class=3D"CodeMirror-cursor" style=3D"left: 4px;=
 top: 0px; height: 21px;">&nbsp;</div></div><div class=3D"CodeMir=
ror-code"><div class=3D"CodeMirror-activeline" style=3D"position:=
 relative;"><div class=3D"wiz-hide wiz_CodeMirror-activeline-back=
ground CodeMirror-linebackground"></div><div class=3D"CodeMirror-=
gutter-background CodeMirror-activeline-gutter" style=3D"left: -3=
0px; width: 30px;"></div><div class=3D"CodeMirror-gutter-wrapper=20=
CodeMirror-activeline-gutter" style=3D"left: -30px;"><div class=3D=
"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px;=
 width: 21px;">1</div></div><pre class=3D"CodeMirror-line"><span=20=
style=3D"padding-right: 0.1px;"><span class=3D"cm-keyword">public=
</span>&nbsp;<span class=3D"cm-variable">StormTopology</span>&nbs=
p;<span class=3D"cm-def">build</span>()&nbsp;{</span></pre></div>=
<div style=3D"position: relative;"><div class=3D"CodeMirror-gutte=
r-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenu=
mber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">2</=
div></div><pre class=3D"CodeMirror-line"><span style=3D"padding-r=
ight: 0.1px;">...</span></pre></div><div style=3D"position: relat=
ive;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30=
px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" s=
tyle=3D"left: 0px; width: 21px;">3</div></div><pre class=3D"CodeM=
irror-line"><span style=3D"padding-right: 0.1px;"><span class=3D"=
cm-variable">TridentTopologyBuilder</span>&nbsp;<span class=3D"cm=
-variable">builder</span>&nbsp;<span class=3D"cm-operator">=3D</s=
pan>&nbsp;<span class=3D"cm-keyword">new</span>&nbsp;<span class=3D=
"cm-variable">TridentTopologyBuilder</span>();</span></pre></div>=
<div style=3D"position: relative;"><div class=3D"CodeMirror-gutte=
r-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenu=
mber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">4</=
div></div><pre class=3D"CodeMirror-line"><span style=3D"padding-r=
ight: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></=
pre></div><div style=3D"position: relative;"><div class=3D"CodeMi=
rror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMir=
ror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width:=20=
21px;">5</div></div><pre class=3D"CodeMirror-line"><span style=3D=
"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;<span class=3D"cm-variable">Map</span><span class=3D"cm-op=
erator">&lt;</span><span class=3D"cm-variable">Node</span>,&nbsp;=
<span class=3D"cm-type">String</span><span class=3D"cm-operator">=
&gt;</span>&nbsp;<span class=3D"cm-variable">spoutIds</span>&nbsp=
;<span class=3D"cm-operator">=3D</span>&nbsp;<span class=3D"cm-va=
riable">genSpoutIds</span>(&nbsp;<span class=3D"cm-variable">spou=
tNodes</span>);</span></pre></div><div style=3D"position: relativ=
e;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px=
;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" sty=
le=3D"left: 0px; width: 21px;">6</div></div><pre class=3D"CodeMir=
ror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable">Map</s=
pan><span class=3D"cm-operator">&lt;</span><span class=3D"cm-vari=
able">Group</span>,&nbsp;<span class=3D"cm-type">String</span><sp=
an class=3D"cm-operator">&gt;</span>&nbsp;<span class=3D"cm-varia=
ble">boltIds</span>&nbsp;<span class=3D"cm-operator">=3D</span>&n=
bsp;<span class=3D"cm-variable">genBoltIds</span>(&nbsp;<span cla=
ss=3D"cm-variable">mergedGroups</span>);</span></pre></div><div s=
tyle=3D"position: relative;"><div class=3D"CodeMirror-gutter-wrap=
per" style=3D"left: -30px;"><div class=3D"CodeMirror-linenumber C=
odeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">7</div></=
div><pre class=3D"CodeMirror-line"><span style=3D"padding-right:=20=
0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cla=
ss=3D"cm-comment">//&nbsp;SpoutNode=CE=AC=BB=A4=C1=CBSpout=C0=E0=D0=
=CD=A3=AC=B8=F9=BE=DD=C0=E0=D0=CD=D7=AA=BB=BB=CE=AA=B6=D4=D3=A6=B5=
=C4Spout</span></span></pre></div><div style=3D"position: relativ=
e;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px=
;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" sty=
le=3D"left: 0px; width: 21px;">8</div></div><pre class=3D"CodeMir=
ror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-keyword">for</sp=
an>(<span class=3D"cm-variable">SpoutNode</span>&nbsp;<span class=
=3D"cm-variable">sn</span>&nbsp;:&nbsp;<span class=3D"cm-variable=
">spoutNodes</span>&nbsp;)&nbsp;{</span></pre></div><div style=3D=
"position: relative;"><div class=3D"CodeMirror-gutter-wrapper" st=
yle=3D"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirr=
or-gutter-elt" style=3D"left: 0px; width: 21px;">9</div></div><pr=
e class=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;<span class=3D"cm-type">Integer</span>&nbsp;<span class=3D=
"cm-variable">parallelism</span>&nbsp;<span class=3D"cm-operator"=
>=3D</span>&nbsp;<span class=3D"cm-variable">parallelisms</span>.=
<span class=3D"cm-variable">get</span>(<span class=3D"cm-variable=
">grouper</span>&nbsp;.<span class=3D"cm-variable">nodeGroup</spa=
n>(<span class=3D"cm-variable">sn</span>));</span></pre></div><di=
v style=3D"position: relative;"><div class=3D"CodeMirror-gutter-w=
rapper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenumbe=
r CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">10</di=
v></div><pre class=3D"CodeMirror-line"><span style=3D"padding-rig=
ht: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;<span class=3D"cm-keyword">if</span>(<span cla=
ss=3D"cm-variable">sn</span>&nbsp;.<span class=3D"cm-variable">ty=
pe</span>&nbsp;<span class=3D"cm-operator">=3D=3D</span>&nbsp;<sp=
an class=3D"cm-variable">SpoutNode</span>.<span class=3D"cm-varia=
ble">SpoutType</span>.<span class=3D"cm-variable">DRPC</span>)&nb=
sp;{</span></pre></div><div style=3D"position: relative;"><div cl=
ass=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div cla=
ss=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left:=
 0px; width: 21px;">11</div></div><pre class=3D"CodeMirror-line">=
<span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;<span class=3D"cm-variable">builder</span>.<span class=3D"cm-=
variable">setBatchPerTupleSpout</span>(<span class=3D"cm-variable=
">spoutIds</span>&nbsp;.<span class=3D"cm-variable">get</span>(<s=
pan class=3D"cm-variable">sn</span>),&nbsp;<span class=3D"cm-vari=
able">sn</span>.<span class=3D"cm-variable">streamId</span>&nbsp;=
,</span></pre></div><div style=3D"position: relative;"><div class=
=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D=
"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px;=
 width: 21px;">12</div></div><pre class=3D"CodeMirror-line"><span=
 style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<span class=3D"cm=
-variable">IRichSpout</span>)&nbsp;<span class=3D"cm-variable">sn=
</span>.&nbsp;<span class=3D"cm-variable">spout</span>,&nbsp;<spa=
n class=3D"cm-variable">parallelism</span>&nbsp;,&nbsp;<span clas=
s=3D"cm-variable">batchGroupMap</span>.<span class=3D"cm-variable=
">get</span>(<span class=3D"cm-variable">sn</span>&nbsp;));</span=
></pre></div><div style=3D"position: relative;"><div class=3D"Cod=
eMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"Code=
Mirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; widt=
h: 21px;">13</div></div><pre class=3D"CodeMirror-line"><span styl=
e=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=3D"cm-keywo=
rd">else</span>&nbsp;{</span></pre></div><div style=3D"position:=20=
relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left=
: -30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-e=
lt" style=3D"left: 0px; width: 21px;">14</div></div><pre class=3D=
"CodeMirror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable">ITridentSpout</=
span>&nbsp;<span class=3D"cm-variable">s</span>;</span></pre></di=
v><div style=3D"position: relative;"><div class=3D"CodeMirror-gut=
ter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-line=
number CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">1=
5</div></div><pre class=3D"CodeMirror-line"><span style=3D"paddin=
g-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm=
-keyword">if</span>(<span class=3D"cm-variable">sn</span>&nbsp;.<=
span class=3D"cm-variable">spout</span>&nbsp;<span class=3D"cm-ke=
yword">instanceof</span>&nbsp;<span class=3D"cm-variable">IBatchS=
pout</span>)&nbsp;{</span></pre></div><div style=3D"position: rel=
ative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -=
30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt"=
 style=3D"left: 0px; width: 21px;">16</div></div><pre class=3D"Co=
deMirror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-vari=
able">s</span>&nbsp;<span class=3D"cm-operator">=3D</span>&nbsp;<=
span class=3D"cm-keyword">new</span>&nbsp;<span class=3D"cm-varia=
ble">BatchSpoutExecutor</span>((<span class=3D"cm-variable">IBatc=
hSpout</span>)<span class=3D"cm-variable">sn</span>&nbsp;.<span c=
lass=3D"cm-variable">spout</span>&nbsp;);</span></pre></div><div=20=
style=3D"position: relative;"><div class=3D"CodeMirror-gutter-wra=
pper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenumber=20=
CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">17</div>=
</div><pre class=3D"CodeMirror-line"><span style=3D"padding-right=
: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=3D"cm=
-keyword">else</span>&nbsp;<span class=3D"cm-keyword">if</span>(<=
span class=3D"cm-variable">sn</span>&nbsp;.<span class=3D"cm-vari=
able">spout</span>&nbsp;<span class=3D"cm-keyword">instanceof</sp=
an>&nbsp;<span class=3D"cm-variable">ITridentSpout</span>)&nbsp;{=
</span></pre></div><div style=3D"position: relative;"><div class=3D=
"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"=
CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px;=20=
width: 21px;">18</div></div><pre class=3D"CodeMirror-line"><span=20=
style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable">s</span>&nbsp;<=
span class=3D"cm-operator">=3D</span>&nbsp;(<span class=3D"cm-var=
iable">ITridentSpout</span>)&nbsp;<span class=3D"cm-variable">sn<=
/span>.&nbsp;<span class=3D"cm-variable">spout</span>;</span></pr=
e></div><div style=3D"position: relative;"><div class=3D"CodeMirr=
or-gutter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirro=
r-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21=
px;">19</div></div><pre class=3D"CodeMirror-line"><span style=3D"=
padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<spa=
n class=3D"cm-keyword">else</span>&nbsp;{</span></pre></div><div=20=
style=3D"position: relative;"><div class=3D"CodeMirror-gutter-wra=
pper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenumber=20=
CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">20</div>=
</div><pre class=3D"CodeMirror-line"><span style=3D"padding-right=
: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"cm-keyword">throw</span>&nbsp;<span class=3D"cm-ke=
yword">new</span>&nbsp;<span class=3D"cm-variable">RuntimeExcepti=
on</span>(<span class=3D"cm-string">"Regular&nbsp;rich&nbsp;spout=
s&nbsp;not&nbsp;supported&nbsp;yet...&nbsp;try&nbsp;wrapping&nbsp=
;in&nbsp;a&nbsp;RichSpoutBatchExecutor"</span>);</span></pre></di=
v><div style=3D"position: relative;"><div class=3D"CodeMirror-gut=
ter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-line=
number CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">2=
1</div></div><pre class=3D"CodeMirror-line"><span style=3D"paddin=
g-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;<span class=3D"cm-comment">//&nbsp;TODO:&nbsp;handle&nbsp;=
regular&nbsp;rich&nbsp;spout&nbsp;without&nbsp;batches&nbsp;(need=
&nbsp;lots&nbsp;of&nbsp;updates&nbsp;to&nbsp;support&nbsp;this&nb=
sp;throughout)</span></span></pre></div><div style=3D"position: r=
elative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left:=
 -30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-el=
t" style=3D"left: 0px; width: 21px;">22</div></div><pre class=3D"=
CodeMirror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;}</span></pre></div><div style=3D"position:=20=
relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left=
: -30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-e=
lt" style=3D"left: 0px; width: 21px;">23</div></div><pre class=3D=
"CodeMirror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable">builder</span>.=
<span class=3D"cm-variable">setSpout</span>(<span class=3D"cm-var=
iable">spoutIds</span>&nbsp;.<span class=3D"cm-variable">get</spa=
n>(<span class=3D"cm-variable">sn</span>),&nbsp;<span class=3D"cm=
-variable">sn</span>.<span class=3D"cm-variable">streamId</span>,=
&nbsp;<span class=3D"cm-variable">sn</span>.&nbsp;<span class=3D"=
cm-variable">txId</span>,&nbsp;<span class=3D"cm-variable">s</spa=
n>,&nbsp;<span class=3D"cm-variable">parallelism</span>&nbsp;,&nb=
sp;<span class=3D"cm-variable">batchGroupMap</span>&nbsp;.<span c=
lass=3D"cm-variable">get</span>(<span class=3D"cm-variable">sn</s=
pan>));</span></pre></div><div style=3D"position: relative;"><div=
 class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div=20=
class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"le=
ft: 0px; width: 21px;">24</div></div><pre class=3D"CodeMirror-lin=
e"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></pre></d=
iv><div style=3D"position: relative;"><div class=3D"CodeMirror-gu=
tter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-lin=
enumber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">=
25</div></div><pre class=3D"CodeMirror-line"><span style=3D"paddi=
ng-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;}</span></pre></div><div style=3D"position: relative;"><div clas=
s=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div class=
=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0=
px; width: 21px;">26</div></div><pre class=3D"CodeMirror-line"><s=
pan style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;</span></pre></div><div style=3D"position: relative;=
"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"=
><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=
=3D"left: 0px; width: 21px;">27</div></div><pre class=3D"CodeMirr=
or-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-keyword">for</spa=
n>(<span class=3D"cm-variable">Group</span>&nbsp;<span class=3D"c=
m-variable">g</span>&nbsp;:&nbsp;<span class=3D"cm-variable">merg=
edGroups</span>&nbsp;)&nbsp;{</span></pre></div><div style=3D"pos=
ition: relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D=
"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gut=
ter-elt" style=3D"left: 0px; width: 21px;">28</div></div><pre cla=
ss=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;<span class=3D"cm-keyword">if</span>(<span class=3D"cm-operato=
r">!</span><span class=3D"cm-variable">isSpoutGroup</span>(&nbsp;=
<span class=3D"cm-variable">g</span>))&nbsp;{</span></pre></div><=
div style=3D"position: relative;"><div class=3D"CodeMirror-gutter=
-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenum=
ber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">29</=
div></div><pre class=3D"CodeMirror-line"><span style=3D"padding-r=
ight: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-ty=
pe">Integer</span>&nbsp;<span class=3D"cm-variable">p</span>&nbsp=
;<span class=3D"cm-operator">=3D</span>&nbsp;<span class=3D"cm-va=
riable">parallelisms</span>.<span class=3D"cm-variable">get</span=
>(<span class=3D"cm-variable">g</span>&nbsp;);</span></pre></div>=
<div style=3D"position: relative;"><div class=3D"CodeMirror-gutte=
r-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenu=
mber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">30<=
/div></div><pre class=3D"CodeMirror-line"><span style=3D"padding-=
right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-v=
ariable">Map</span><span class=3D"cm-operator">&lt;</span><span c=
lass=3D"cm-type">String</span>,&nbsp;<span class=3D"cm-type">Stri=
ng</span><span class=3D"cm-operator">&gt;</span>&nbsp;<span class=
=3D"cm-variable">streamToGroup</span>&nbsp;<span class=3D"cm-oper=
ator">=3D</span>&nbsp;<span class=3D"cm-variable">getOutputStream=
BatchGroups</span>(<span class=3D"cm-variable">g</span>,&nbsp;<sp=
an class=3D"cm-variable">batchGroupMap</span>);</span></pre></div=
><div style=3D"position: relative;"><div class=3D"CodeMirror-gutt=
er-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-linen=
umber CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">31=
</div></div><pre class=3D"CodeMirror-line"><span style=3D"padding=
-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-=
comment">//=BD=AB=B5=F7=D3=C3each=A1=A2processAggregate=B7=BD=B7=A8=
=BA=F3=B5=C4ProcessorNode=A3=AC=D7=AA=BB=BB=CE=AABolt</span></spa=
n></pre></div><div style=3D"position: relative;"><div class=3D"Co=
deMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"Cod=
eMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; wid=
th: 21px;">32</div></div><pre class=3D"CodeMirror-line"><span sty=
le=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span=
 class=3D"cm-variable">BoltDeclarer</span>&nbsp;<span class=3D"cm=
-variable">d</span>&nbsp;<span class=3D"cm-operator">=3D</span>&n=
bsp;<span class=3D"cm-variable">builder</span>.<span class=3D"cm-=
variable">setBolt</span>(<span class=3D"cm-variable">boltIds</spa=
n>&nbsp;.<span class=3D"cm-variable">get</span>(<span class=3D"cm=
-variable">g</span>),&nbsp;<span class=3D"cm-keyword">new</span>&=
nbsp;<span class=3D"cm-variable">SubtopologyBolt</span>(<span cla=
ss=3D"cm-variable">graph</span>,&nbsp;<span class=3D"cm-variable"=
>g</span>&nbsp;.<span class=3D"cm-variable">nodes</span>&nbsp;,&n=
bsp;<span class=3D"cm-variable">batchGroupMap</span>&nbsp;),&nbsp=
;<span class=3D"cm-variable">p</span>,</span></pre></div><div sty=
le=3D"position: relative;"><div class=3D"CodeMirror-gutter-wrappe=
r" style=3D"left: -30px;"><div class=3D"CodeMirror-linenumber Cod=
eMirror-gutter-elt" style=3D"left: 0px; width: 21px;">33</div></d=
iv><pre class=3D"CodeMirror-line"><span style=3D"padding-right: 0=
.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable">committerBatches=
</span>(<span class=3D"cm-variable">g</span>,&nbsp;<span class=3D=
"cm-variable">batchGroupMap</span>),&nbsp;<span class=3D"cm-varia=
ble">streamToGroup</span>);</span></pre></div><div style=3D"posit=
ion: relative;"><div class=3D"CodeMirror-gutter-wrapper" style=3D=
"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirror-gut=
ter-elt" style=3D"left: 0px; width: 21px;">34</div></div><pre cla=
ss=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;">&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable">Collection=
</span><span class=3D"cm-operator">&lt;</span><span class=3D"cm-v=
ariable">PartitionNode</span><span class=3D"cm-operator">&gt;</sp=
an>&nbsp;<span class=3D"cm-variable">inputs</span>&nbsp;<span cla=
ss=3D"cm-operator">=3D</span>&nbsp;<span class=3D"cm-variable">un=
iquedSubscriptions</span>(<span class=3D"cm-variable">externalGro=
upInputs</span>(<span class=3D"cm-variable">g</span>&nbsp;));&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;<span class=3D"cm-comment">//=B8=F9=BE=DD=B5=F7=D3=C3Gro=
upBy=B5=C8=B7=BD=B7=A8=D7=AA=BB=BB=B3=C9=B5=C4PartitionNode=BD=F8=
=D0=D0Grouping=B2=DF=C2=D4</span></span></pre></div><div style=3D=
"position: relative;"><div class=3D"CodeMirror-gutter-wrapper" st=
yle=3D"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirr=
or-gutter-elt" style=3D"left: 0px; width: 21px;">35</div></div><p=
re class=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-keyword">for</=
span>(<span class=3D"cm-variable">PartitionNode</span>&nbsp;<span=
 class=3D"cm-variable">n</span>&nbsp;:&nbsp;<span class=3D"cm-var=
iable">inputs</span>&nbsp;)&nbsp;{</span></pre></div><div style=3D=
"position: relative;"><div class=3D"CodeMirror-gutter-wrapper" st=
yle=3D"left: -30px;"><div class=3D"CodeMirror-linenumber CodeMirr=
or-gutter-elt" style=3D"left: 0px; width: 21px;">36</div></div><p=
re class=3D"CodeMirror-line"><span style=3D"padding-right: 0.1px;=
">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span cl=
ass=3D"cm-variable">Node</span>&nbsp;<span class=3D"cm-variable">=
parent</span>&nbsp;<span class=3D"cm-operator">=3D</span>&nbsp;<s=
pan class=3D"cm-variable">TridentUtils</span>.<span class=3D"cm-v=
ariable">getParent</span>(&nbsp;<span class=3D"cm-variable">graph=
</span>,&nbsp;<span class=3D"cm-variable">n</span>&nbsp;);</span>=
</pre></div><div style=3D"position: relative;"><div class=3D"Code=
Mirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"CodeM=
irror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width=
: 21px;">37</div></div><pre class=3D"CodeMirror-line"><span style=
=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;<span class=3D"cm-type">String</span>&nbsp;<span=
 class=3D"cm-variable">componentId</span>;</span></pre></div><div=
 style=3D"position: relative;"><div class=3D"CodeMirror-gutter-wr=
apper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenumber=
 CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">38</div=
></div><pre class=3D"CodeMirror-line"><span style=3D"padding-righ=
t: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;<span class=3D"cm-keyword">if</span>(<span class=3D"cm-variable"=
>parent</span>&nbsp;<span class=3D"cm-keyword">instanceof</span>&=
nbsp;<span class=3D"cm-variable">SpoutNode</span>)&nbsp;{</span><=
/pre></div><div style=3D"position: relative;"><div class=3D"CodeM=
irror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMi=
rror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width:=
 21px;">39</div></div><pre class=3D"CodeMirror-line"><span style=3D=
"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable"=
>componentId</span>&nbsp;<span class=3D"cm-operator">=3D</span>&n=
bsp;<span class=3D"cm-variable">spoutIds</span>&nbsp;.<span class=
=3D"cm-variable">get</span>(<span class=3D"cm-variable">parent</s=
pan>);</span></pre></div><div style=3D"position: relative;"><div=20=
class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div c=
lass=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"lef=
t: 0px; width: 21px;">40</div></div><pre class=3D"CodeMirror-line=
"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class=3D"cm-keyword">e=
lse</span>&nbsp;{</span></pre></div><div style=3D"position: relat=
ive;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30=
px;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" s=
tyle=3D"left: 0px; width: 21px;">41</div></div><pre class=3D"Code=
Mirror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
<span class=3D"cm-variable">componentId</span>&nbsp;<span class=3D=
"cm-operator">=3D</span>&nbsp;<span class=3D"cm-variable">boltIds=
</span>.<span class=3D"cm-variable">get</span>(<span class=3D"cm-=
variable">grouper</span>&nbsp;.<span class=3D"cm-variable">nodeGr=
oup</span>(<span class=3D"cm-variable">parent</span>));</span></p=
re></div><div style=3D"position: relative;"><div class=3D"CodeMir=
ror-gutter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirr=
or-linenumber CodeMirror-gutter-elt" style=3D"left: 0px; width: 2=
1px;">42</div></div><pre class=3D"CodeMirror-line"><span style=3D=
"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;}</span></pre></div><div style=3D"position: relativ=
e;"><div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px=
;"><div class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" sty=
le=3D"left: 0px; width: 21px;">43</div></div><pre class=3D"CodeMi=
rror-line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-variable=
">d</span>.<span class=3D"cm-variable">grouping</span>(&nbsp;<spa=
n class=3D"cm-keyword">new</span>&nbsp;<span class=3D"cm-variable=
">GlobalStreamId</span>(<span class=3D"cm-variable">componentId</=
span>&nbsp;,&nbsp;<span class=3D"cm-variable">n</span>.<span clas=
s=3D"cm-variable">streamId</span>&nbsp;),&nbsp;<span class=3D"cm-=
variable">n</span>.<span class=3D"cm-variable">thriftGrouping</sp=
an>);</span></pre></div><div style=3D"position: relative;"><div c=
lass=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div cl=
ass=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left=
: 0px; width: 21px;">44</div></div><pre class=3D"CodeMirror-line"=
><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;}</span></pre></div><div style=3D"position: relative;"><div=20=
class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div c=
lass=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"lef=
t: 0px; width: 21px;">45</div></div><pre class=3D"CodeMirror-line=
"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></pre></di=
v><div style=3D"position: relative;"><div class=3D"CodeMirror-gut=
ter-wrapper" style=3D"left: -30px;"><div class=3D"CodeMirror-line=
number CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">4=
6</div></div><pre class=3D"CodeMirror-line"><span style=3D"paddin=
g-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
}</span></pre></div><div style=3D"position: relative;"><div class=
=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><div class=3D=
"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D"left: 0px;=
 width: 21px;">47</div></div><pre class=3D"CodeMirror-line"><span=
 style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;</span></pre></div><div style=3D"position: relative;"><=
div class=3D"CodeMirror-gutter-wrapper" style=3D"left: -30px;"><d=
iv class=3D"CodeMirror-linenumber CodeMirror-gutter-elt" style=3D=
"left: 0px; width: 21px;">48</div></div><pre class=3D"CodeMirror-=
line"><span style=3D"padding-right: 0.1px;">&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"cm-keyword">return</spa=
n>&nbsp;<span class=3D"cm-variable">builder</span>&nbsp;.<span cl=
ass=3D"cm-variable">buildTopology</span>();</span></pre></div><di=
v style=3D"position: relative;"><div class=3D"CodeMirror-gutter-w=
rapper" style=3D"left: -30px;"><div class=3D"CodeMirror-linenumbe=
r CodeMirror-gutter-elt" style=3D"left: 0px; width: 21px;">49</di=
v></div><pre class=3D"CodeMirror-line"><span style=3D"padding-rig=
ht: 0.1px;">}</span></pre></div></div></div></div></div></div><di=
v style=3D"position: absolute; height: 13px; width: 1px; border-b=
ottom-width: 0px; border-bottom-style: solid; border-bottom-color=
: transparent; top: 1184px;"></div><div class=3D"CodeMirror-gutte=
rs" style=3D"height: 1214px;"><div class=3D"CodeMirror-gutter Cod=
eMirror-linenumbers" style=3D"width: 29px;"></div></div></div></d=
iv></wiz_code_mirror></div><div><div class=3D"blog-single-desc" s=
tyle=3D"border-radius:0px !important;"><br class=3D"Apple-interch=
ange-newline"></div><br></div></body></html>=0A=0A=0A=0A=0A=0A=0A=
=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000225531.926--

------=_Next_Part_0000676593.058
Content-Type: image/png;
	name="0.33554262178704564.png"
Content-Transfer-Encoding: base64
Content-ID: <0.33554262178704564.png>
Content-Location: 0.33554262178704564.png



------=_Next_Part_0000676593.058
Content-Type: image/png;
	name="0.4794675575389078.png"
Content-Transfer-Encoding: base64
Content-ID: <0.4794675575389078.png>
Content-Location: 0.4794675575389078.png



------=_Next_Part_0000676593.058
Content-Type: image/png;
	name="0.6361811903122954.png"
Content-Transfer-Encoding: base64
Content-ID: <0.6361811903122954.png>
Content-Location: 0.6361811903122954.png



------=_Next_Part_0000676593.058--

