From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?ZHViYm+1xMb0tq+5/bPMo6jLxKOpLS23/s7xt72xqcK2?=
Date: Date: Fri, 23 Jul 2021 05:55:47 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001483638.434"

This is a multi-part message in MIME format.

------=_Next_Part_0001483638.434
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000494546.144"


------=_Next_Part_0000494546.144
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000494546.144
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A<titl=
e>dubbo=B5=C4=C6=F4=B6=AF=B9=FD=B3=CC=A3=A8=CB=C4=A3=A9--=B7=FE=CE=
=F1=B7=BD=B1=A9=C2=B6</title>=0A    =0A<style id=3D"wiz_custom_cs=
s">html, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {fon=
t-family: Helvetica, 'Hiragino Sans GB', '=E5=BE=AE=E8=BD=AF=E9=9B=
=85=E9=BB=91', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-=
serif;line-height: 1.7;margin: 0 auto;padding: 20px 16px;padding:=
 1.25rem 1rem;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-edito=
r-body h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-bod=
y h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;fon=
t-weight: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.6=
7rem;}.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-=
editor-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-bod=
y h4 {font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font=
-size:12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;fo=
nt-size:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,=
.wiz-editor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-e=
ditor-body dl,.wiz-editor-body li {margin:8px 0;}.wiz-editor-body=
 blockquote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-edit=
or-body code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {mar=
gin:0;}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px=
;padding-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {lis=
t-style-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {l=
ist-style-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 >=
 li {list-style-type:lower-roman;}.wiz-editor-body blockquote {pa=
dding: 0 12px;}.wiz-editor-body blockquote > :first-child {margin=
-top:0;}.wiz-editor-body blockquote > :last-child {margin-bottom:=
0;}.wiz-editor-body img {border:0;max-width:100%;height:auto !imp=
ortant;margin:2px 0;}.wiz-editor-body table {border-collapse:coll=
apse;border:1px solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-bo=
dy th {padding:4px 8px;border-collapse:collapse;border:1px solid=20=
#bbbbbb;min-height:28px;word-break:break-word;box-sizing: border-=
box;}.wiz-hide {display:none !important;}</style></head>=0A=0A<bo=
dy class=3D"wiz-editor-body"  spellcheck=3D"false"><div></div><h1=
 class=3D"h2 mb-3" id=3D"sf-article_title"><a class=3D"text-body"=
 href=3D"https://segmentfault.com/a/1190000021441703">dubbo=B5=C4=
=C6=F4=B6=AF=B9=FD=B3=CC=A3=A8=CB=C4=A3=A9--=B7=FE=CE=F1=B7=BD=B1=
=A9=C2=B6</a></h1><div class=3D"m-n1"><a class=3D"m-1 badge-tag"=20=
href=3D"https://segmentfault.com/t/dubbo" data-toggle=3D"popover"=
 data-placement=3D"top" data-original-title=3D"dubbo" data-id=3D"=
1040000000257318">dubbo</a><a class=3D"m-1 badge-tag" href=3D"htt=
ps://segmentfault.com/t/java" data-toggle=3D"popover" data-img=3D=
"https://avatar-static.segmentfault.com/512/342/51234253-10400000=
00089449_big64" data-placement=3D"top" data-original-title=3D"jav=
a" data-id=3D"1040000000089449"><img src=3D"0.02045824426754117.p=
ng"><span>&nbsp;</span>java</a><a class=3D"m-1 badge-tag" href=3D=
"https://segmentfault.com/t/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90"=
 data-toggle=3D"popover" data-placement=3D"top" data-original-tit=
le=3D"=D4=B4=C2=EB=B7=D6=CE=F6" data-id=3D"1040000002479741">=D4=B4=
=C2=EB=B7=D6=CE=F6</a></div><div class=3D"font-size-14"><span cla=
ss=3D"text-secondary ml-2">&nbsp;=D4=C4=B6=C1=D4=BC 29 =B7=D6=D6=D3=
</span></div><article class=3D"article fmt article-content" data-=
id=3D"1190000021441703"><h1 id=3D"item-1">doExport</h1><p>=B8=F7=B8=
=F6=C5=E4=D6=C3=D0=C5=CF=A2=A1=A2=C5=E4=D6=C3=D6=D0=D0=C4=D7=BC=B1=
=B8=BA=C3=C1=CB=A3=AC=BF=AA=CA=BC=B7=FE=CE=F1=B1=A9=C2=B6=B5=C4=B9=
=FD=B3=CC</p><pre class=3D"hljs aspectj" style=3D"background-imag=
e: initial; background-attachment: initial; background-size: init=
ial; background-origin: initial; background-clip: initial; backgr=
ound-position: initial; background-repeat: initial;"><span class=3D=
"hljs-keyword">protected</span> <span class=3D"hljs-keyword">sync=
hronized</span> <span class=3D"hljs-function"><span class=3D"hljs=
-keyword">void</span> <span class=3D"hljs-title">doExport</span><=
span class=3D"hljs-params">()</span> </span>{=0A    <span class=3D=
"hljs-keyword">if</span> (unexported) {=0A        <span class=3D"=
hljs-keyword">throw</span> <span class=3D"hljs-keyword">new</span=
> IllegalStateException(<span class=3D"hljs-string">"The service=20=
"</span> + interfaceClass.getName() + <span class=3D"hljs-string"=
>" has already unexported!"</span>);=0A    }=0A    <span class=3D=
"hljs-keyword">if</span> (exported) {=0A        <span class=3D"hl=
js-keyword">return</span>;=0A    }=0A    exported =3D <span class=
=3D"hljs-keyword">true</span>;=0A=0A    <span class=3D"hljs-keywo=
rd">if</span> (StringUtils.isEmpty(path)) {=0A        path =3D in=
terfaceName;=0A    }=0A    doExportUrls();=0A}</pre><h1 id=3D"ite=
m-2">doExportUrls</h1><pre class=3D"hljs cs" style=3D"background-=
image: initial; background-attachment: initial; background-size:=20=
initial; background-origin: initial; background-clip: initial; ba=
ckground-position: initial; background-repeat: initial;"><span cl=
ass=3D"hljs-function"><span class=3D"hljs-keyword">private</span>=
 <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-tit=
le">doExportUrls</span>() </span>{=0A    <span class=3D"hljs-comm=
ent">// =B0=D1application=A1=A2config=A1=A2path=A1=A2protocol=A1=A2=
=D4=CB=D0=D0=B2=CE=CA=FD=B5=C8=C6=B4=BD=D3=B5=BDURL=D6=D0</span>=0A=
    List&lt;URL&gt; registryURLs =3D loadRegistries(<span class=3D=
"hljs-literal">true</span>);=0A    <span class=3D"hljs-comment">/=
/ =C3=BF=B8=F6=D0=AD=D2=E9=B6=BC=B1=A9=C2=B6</span>=0A    <span c=
lass=3D"hljs-keyword">for</span> (ProtocolConfig protocolConfig :=
 protocols) {=0A        <span class=3D"hljs-comment">// =C6=B4=BD=
=D3path=A1=A2group=A1=A2version</span>=0A        String pathKey =3D=
 URL.buildKey(getContextPath(protocolConfig).map(p -&gt; p + <spa=
n class=3D"hljs-string">"/"</span> + path).orElse(path), <span cl=
ass=3D"hljs-keyword">group</span>, version);=0A        <span clas=
s=3D"hljs-comment">// =B4=B4=BD=A8providerModel=A3=AC=B9=B9=D4=EC=
=B7=BD=B7=A8=C0=EF=D3=D0=B8=F6init=B7=BD=B7=A8=A3=AC=BB=E1=B0=D1=B7=
=BD=B7=A8=B4=E6=C8=EB=B5=BDmethod=D6=D0</span>=0A        Provider=
Model providerModel =3D <span class=3D"hljs-keyword">new</span> P=
roviderModel(pathKey, <span class=3D"hljs-keyword">ref</span>, in=
terfaceClass);=0A        <span class=3D"hljs-comment">// =B4=E6=C8=
=EB=B5=BDPROVIDED_SERVICES=D6=D0</span>=0A        ApplicationMode=
l.initProviderModel(pathKey, providerModel);=0A        doExportUr=
lsFor1Protocol(protocolConfig, registryURLs);=0A    }=0A}</pre><h=
1 id=3D"item-3">doExportUrlsFor1Protocol</h1><pre class=3D"hljs a=
rduino" style=3D"background-image: initial; background-attachment=
: initial; background-size: initial; background-origin: initial;=20=
background-clip: initial; background-position: initial; backgroun=
d-repeat: initial;"><span class=3D"hljs-keyword">private</span> <=
span class=3D"hljs-keyword">void</span> doExportUrlsFor1Protocol(=
ProtocolConfig protocolConfig, List&lt;URL&gt; registryURLs) {=0A=
    =0A    <span class=3D"hljs-keyword">String</span> name =3D pr=
otocolConfig.getName();=0A    <span class=3D"hljs-built_in">if</s=
pan> (StringUtils.isEmpty(name)) {=0A        name =3D DUBBO;=0A =20=
  }=0A    <span class=3D"hljs-comment">// =B0=D1=B8=F7=B8=F6=D0=C5=
=CF=A2=B7=C5=C8=EBmap=D6=D0</span>=0A    Map&lt;<span class=3D"hl=
js-keyword">String</span>, <span class=3D"hljs-keyword">String</s=
pan>&gt; <span class=3D"hljs-built_in">map</span> =3D <span class=
=3D"hljs-keyword">new</span> HashMap&lt;<span class=3D"hljs-keywo=
rd">String</span>, <span class=3D"hljs-keyword">String</span>&gt;=
();=0A    <span class=3D"hljs-built_in">map</span>.<span class=3D=
"hljs-built_in">put</span>(SIDE_KEY, PROVIDER_SIDE);=0A=0A    app=
endRuntimeParameters(<span class=3D"hljs-built_in">map</span>);=0A=
    appendParameters(<span class=3D"hljs-built_in">map</span>, me=
trics);=0A    appendParameters(<span class=3D"hljs-built_in">map<=
/span>, application);=0A    appendParameters(<span class=3D"hljs-=
built_in">map</span>, <span class=3D"hljs-keyword">module</span>)=
;=0A    <span class=3D"hljs-comment">// remove 'default.' prefix=20=
for configs from ProviderConfig</span>=0A    <span class=3D"hljs-=
comment">// appendParameters(map, provider, Constants.DEFAULT_KEY=
);</span>=0A    appendParameters(<span class=3D"hljs-built_in">ma=
p</span>, provider);=0A    appendParameters(<span class=3D"hljs-b=
uilt_in">map</span>, protocolConfig);=0A    appendParameters(<spa=
n class=3D"hljs-built_in">map</span>, <span class=3D"hljs-keyword=
">this</span>);=0A    <span class=3D"hljs-comment">// =C8=E7=B9=FB=
=D3=D0=C9=E8=D6=C3methods=A3=AC=D4=F2=C9=E8=D6=C3=B7=BD=B7=A8=B5=C4=
=B8=F7=D7=D4=B2=CE=CA=FD</span>=0A    <span class=3D"hljs-built_i=
n">if</span> (CollectionUtils.isNotEmpty(methods)) {=0A        <s=
pan class=3D"hljs-built_in">for</span> (MethodConfig method : met=
hods) {=0A            appendParameters(<span class=3D"hljs-built_=
in">map</span>, method, method.getName());=0A            <span cl=
ass=3D"hljs-keyword">String</span> retryKey =3D method.getName()=20=
+ <span class=3D"hljs-string">".retry"</span>;=0A            <spa=
n class=3D"hljs-built_in">if</span> (<span class=3D"hljs-built_in=
">map</span>.containsKey(retryKey)) {=0A                <span cla=
ss=3D"hljs-keyword">String</span> retryValue =3D <span class=3D"h=
ljs-built_in">map</span>.<span class=3D"hljs-built_in">remove</sp=
an>(retryKey);=0A                <span class=3D"hljs-built_in">if=
</span> (Boolean.FALSE.toString().equals(retryValue)) {=0A      =20=
             <span class=3D"hljs-built_in">map</span>.<span class=
=3D"hljs-built_in">put</span>(method.getName() + <span class=3D"h=
ljs-string">".retries"</span>, <span class=3D"hljs-string">"0"</s=
pan>);=0A                }=0A            }=0A            List&lt;=
ArgumentConfig&gt; arguments =3D method.getArguments();=0A      =20=
     <span class=3D"hljs-built_in">if</span> (CollectionUtils.isN=
otEmpty(arguments)) {=0A                <span class=3D"hljs-built=
_in">for</span> (ArgumentConfig argument : arguments) {=0A      =20=
             <span class=3D"hljs-comment">// convert argument typ=
e</span>=0A                    <span class=3D"hljs-built_in">if</=
span> (argument.getType() !=3D null &amp;&amp; argument.getType()=
.length() &gt; <span class=3D"hljs-number">0</span>) {=0A       =20=
                Method[] methods =3D interfaceClass.getMethods();=
=0A                        <span class=3D"hljs-comment">// visit=20=
all methods</span>=0A                        <span class=3D"hljs-=
built_in">if</span> (methods !=3D null &amp;&amp; methods.length=20=
&gt; <span class=3D"hljs-number">0</span>) {=0A                 =20=
          <span class=3D"hljs-built_in">for</span> (<span class=3D=
"hljs-keyword">int</span> i =3D <span class=3D"hljs-number">0</sp=
an>; i &lt; methods.length; i++) {=0A                           =20=
    <span class=3D"hljs-keyword">String</span> methodName =3D met=
hods[i].getName();=0A                                <span class=3D=
"hljs-comment">// target the method, and get its signature</span>=
=0A                                <span class=3D"hljs-built_in">=
if</span> (methodName.equals(method.getName())) {=0A            =20=
                       Class&lt;?&gt;[] argtypes =3D methods[i].g=
etParameterTypes();=0A                                    <span c=
lass=3D"hljs-comment">// one callback in the method</span>=0A   =20=
                                <span class=3D"hljs-built_in">if<=
/span> (argument.getIndex() !=3D <span class=3D"hljs-number">-1</=
span>) {=0A                                        <span class=3D=
"hljs-built_in">if</span> (argtypes[argument.getIndex()].getName(=
).equals(argument.getType())) {=0A                              =20=
             appendParameters(<span class=3D"hljs-built_in">map</=
span>, argument, method.getName() + <span class=3D"hljs-string">"=
."</span> + argument.getIndex());=0A                            =20=
           } <span class=3D"hljs-built_in">else</span> {=0A     =20=
                                      <span class=3D"hljs-keyword=
">throw</span> <span class=3D"hljs-keyword">new</span> IllegalArg=
umentException(<span class=3D"hljs-string">"Argument config error=
 : the index attribute and type attribute not match :index :"</sp=
an> + argument.getIndex() + <span class=3D"hljs-string">", type:"=
</span> + argument.getType());=0A                               =20=
        }=0A                                    } <span class=3D"=
hljs-built_in">else</span> {=0A                                 =20=
      <span class=3D"hljs-comment">// multiple callbacks in the m=
ethod</span>=0A                                        <span clas=
s=3D"hljs-built_in">for</span> (<span class=3D"hljs-keyword">int<=
/span> j =3D <span class=3D"hljs-number">0</span>; j &lt; argtype=
s.length; j++) {=0A                                            Cl=
ass&lt;?&gt; argclazz =3D argtypes[j];=0A                       =20=
                    <span class=3D"hljs-built_in">if</span> (argc=
lazz.getName().equals(argument.getType())) {=0A                 =20=
                              appendParameters(<span class=3D"hlj=
s-built_in">map</span>, argument, method.getName() + <span class=3D=
"hljs-string">"."</span> + j);=0A                               =20=
                <span class=3D"hljs-built_in">if</span> (argument=
.getIndex() !=3D <span class=3D"hljs-number">-1</span> &amp;&amp;=
 argument.getIndex() !=3D j) {=0A                               =20=
                    <span class=3D"hljs-keyword">throw</span> <sp=
an class=3D"hljs-keyword">new</span> IllegalArgumentException(<sp=
an class=3D"hljs-string">"Argument config error : the index attri=
bute and type attribute not match :index :"</span> + argument.get=
Index() + <span class=3D"hljs-string">", type:"</span> + argument=
.getType());=0A                                                }=0A=
                                            }=0A                =20=
                       }=0A                                    }=0A=
                                }=0A                            }=
=0A                        }=0A                    } <span class=3D=
"hljs-built_in">else</span> <span class=3D"hljs-built_in">if</spa=
n> (argument.getIndex() !=3D <span class=3D"hljs-number">-1</span=
>) {=0A                        appendParameters(<span class=3D"hl=
js-built_in">map</span>, argument, method.getName() + <span class=
=3D"hljs-string">"."</span> + argument.getIndex());=0A          =20=
         } <span class=3D"hljs-built_in">else</span> {=0A       =20=
                <span class=3D"hljs-keyword">throw</span> <span c=
lass=3D"hljs-keyword">new</span> IllegalArgumentException(<span c=
lass=3D"hljs-string">"Argument config must set index or type attr=
ibute.eg: &lt;dubbo:argument index=3D'0' .../&gt; or &lt;dubbo:ar=
gument type=3Dxxx .../&gt;"</span>);=0A                    }=0A=0A=
                }=0A            }=0A        } <span class=3D"hljs=
-comment">// end of methods for</span>=0A    }=0A    <span class=3D=
"hljs-comment">//=C9=E8=D6=C3=B7=BA=BB=AF=A1=A2=B0=E6=B1=BE=A1=A2=
method</span>=0A    <span class=3D"hljs-built_in">if</span> (Prot=
ocolUtils.isGeneric(generic)) {=0A        <span class=3D"hljs-bui=
lt_in">map</span>.<span class=3D"hljs-built_in">put</span>(GENERI=
C_KEY, generic);=0A        <span class=3D"hljs-built_in">map</spa=
n>.<span class=3D"hljs-built_in">put</span>(METHODS_KEY, ANY_VALU=
E);=0A    } <span class=3D"hljs-built_in">else</span> {=0A      =20=
 <span class=3D"hljs-keyword">String</span> revision =3D Version.=
getVersion(interfaceClass, version);=0A        <span class=3D"hlj=
s-built_in">if</span> (revision !=3D null &amp;&amp; revision.len=
gth() &gt; <span class=3D"hljs-number">0</span>) {=0A           =20=
<span class=3D"hljs-built_in">map</span>.<span class=3D"hljs-buil=
t_in">put</span>(REVISION_KEY, revision);=0A        }=0A=0A     =20=
  <span class=3D"hljs-keyword">String</span>[] methods =3D Wrappe=
r.getWrapper(interfaceClass).getMethodNames();=0A        <span cl=
ass=3D"hljs-built_in">if</span> (methods.length =3D=3D <span clas=
s=3D"hljs-number">0</span>) {=0A            logger.warn(<span cla=
ss=3D"hljs-string">"No method found in service interface "</span>=
 + interfaceClass.getName());=0A            <span class=3D"hljs-b=
uilt_in">map</span>.<span class=3D"hljs-built_in">put</span>(METH=
ODS_KEY, ANY_VALUE);=0A        } <span class=3D"hljs-built_in">el=
se</span> {=0A            <span class=3D"hljs-built_in">map</span=
>.<span class=3D"hljs-built_in">put</span>(METHODS_KEY, StringUti=
ls.join(<span class=3D"hljs-keyword">new</span> HashSet&lt;<span=20=
class=3D"hljs-keyword">String</span>&gt;(Arrays.asList(methods)),=
 <span class=3D"hljs-string">","</span>));=0A        }=0A    }=0A=
    <span class=3D"hljs-comment">// =C9=E8=D6=C3token</span>=0A =20=
  <span class=3D"hljs-built_in">if</span> (!ConfigUtils.isEmpty(t=
oken)) {=0A        <span class=3D"hljs-built_in">if</span> (Confi=
gUtils.isDefault(token)) {=0A            <span class=3D"hljs-buil=
t_in">map</span>.<span class=3D"hljs-built_in">put</span>(TOKEN_K=
EY, UUID.randomUUID().toString());=0A        } <span class=3D"hlj=
s-built_in">else</span> {=0A            <span class=3D"hljs-built=
_in">map</span>.<span class=3D"hljs-built_in">put</span>(TOKEN_KE=
Y, token);=0A        }=0A    }=0A    <span class=3D"hljs-comment"=
>// export service</span>=0A    <span class=3D"hljs-comment">// =BB=
=F1=C8=A1ip=A3=AC=C8=E7=B9=FB=C3=BB=D3=D0=C9=E8=D6=C3=D4=F2=C4=AC=
=C8=CF=B1=BE=BB=FA</span>=0A    <span class=3D"hljs-keyword">Stri=
ng</span> host =3D <span class=3D"hljs-keyword">this</span>.findC=
onfigedHosts(protocolConfig, registryURLs, <span class=3D"hljs-bu=
ilt_in">map</span>);=0A    <span class=3D"hljs-comment">// =BB=F1=
=C8=A1=B6=CB=BF=DA=A3=AC=C3=BB=D3=D0=C9=E8=D6=C3=D4=F2=CE=AA20880=
</span>=0A    Integer port =3D <span class=3D"hljs-keyword">this<=
/span>.findConfigedPorts(protocolConfig, name, <span class=3D"hlj=
s-built_in">map</span>);=0A    <span class=3D"hljs-comment">// =C6=
=B4=BD=D3=B1=A9=C2=B6=B5=C4URL</span>=0A    URL url =3D <span cla=
ss=3D"hljs-keyword">new</span> URL(name, host, port, getContextPa=
th(protocolConfig).<span class=3D"hljs-built_in">map</span>(p -&g=
t; p + <span class=3D"hljs-string">"/"</span> + path).orElse(path=
), <span class=3D"hljs-built_in">map</span>);=0A    <span class=3D=
"hljs-comment">// =C8=E7=B9=FB=D2=D1=BE=AD=C0=A9=D5=B9=C1=CB=D0=AD=
=D2=E9=A3=AC=D4=F2=C5=E4=D6=C3=D0=C5=CF=A2</span>=0A    <span cla=
ss=3D"hljs-built_in">if</span> (ExtensionLoader.getExtensionLoade=
r(ConfiguratorFactory.<span class=3D"hljs-keyword">class</span>)=0A=
            .hasExtension(url.getProtocol())) {=0A        url =3D=
 ExtensionLoader.getExtensionLoader(ConfiguratorFactory.<span cla=
ss=3D"hljs-keyword">class</span>)=0A                .getExtension=
(url.getProtocol()).getConfigurator(url).configure(url);=0A    }=0A=
=0A    <span class=3D"hljs-keyword">String</span> scope =3D url.g=
etParameter(SCOPE_KEY);=0A    <span class=3D"hljs-comment">// don=
't export when none is configured</span>=0A    <span class=3D"hlj=
s-built_in">if</span> (!SCOPE_NONE.equalsIgnoreCase(scope)) {=0A=0A=
        <span class=3D"hljs-comment">// export to local if the co=
nfig is not remote (export to remote only when config is remote)<=
/span>=0A        <span class=3D"hljs-built_in">if</span> (!SCOPE_=
REMOTE.equalsIgnoreCase(scope)) {=0A            <span class=3D"hl=
js-comment">// =B1=A9=C2=B6=B1=BE=B5=D8=B7=FE=CE=F1</span>=0A   =20=
        exportLocal(url);=0A        }=0A        <span class=3D"hl=
js-comment">// export to remote if the config is not local (expor=
t to local only when config is local)</span>=0A        <span clas=
s=3D"hljs-comment">// =B1=A9=C2=B6=D4=B6=B3=CC=B7=FE=CE=F1</span>=
=0A        <span class=3D"hljs-built_in">if</span> (!SCOPE_LOCAL.=
equalsIgnoreCase(scope)) {=0A            <span class=3D"hljs-buil=
t_in">if</span> (CollectionUtils.isNotEmpty(registryURLs)) {=0A =20=
              <span class=3D"hljs-built_in">for</span> (URL regis=
tryURL : registryURLs) {=0A                    <span class=3D"hlj=
s-comment">//if protocol is only injvm ,not register</span>=0A  =20=
                 <span class=3D"hljs-built_in">if</span> (LOCAL_P=
ROTOCOL.equalsIgnoreCase(url.getProtocol())) {=0A               =20=
        <span class=3D"hljs-built_in">continue</span>;=0A       =20=
            }=0A                    url =3D url.addParameterIfAbs=
ent(DYNAMIC_KEY, registryURL.getParameter(DYNAMIC_KEY));=0A     =20=
              <span class=3D"hljs-comment">// =BC=E0=CC=FD</span>=
=0A                    URL monitorUrl =3D loadMonitor(registryURL=
);=0A                    <span class=3D"hljs-built_in">if</span>=20=
(monitorUrl !=3D null) {=0A                        url =3D url.ad=
dParameterAndEncoded(MONITOR_KEY, monitorUrl.toFullString());=0A=20=
                   }=0A                    <span class=3D"hljs-bu=
ilt_in">if</span> (logger.isInfoEnabled()) {=0A                 =20=
      <span class=3D"hljs-built_in">if</span> (url.getParameter(R=
EGISTER_KEY, true)) {=0A                            logger.info(<=
span class=3D"hljs-string">"Register dubbo service "</span> + int=
erfaceClass.getName() + <span class=3D"hljs-string">" url "</span=
> + url + <span class=3D"hljs-string">" to registry "</span> + re=
gistryURL);=0A                        } <span class=3D"hljs-built=
_in">else</span> {=0A                            logger.info(<spa=
n class=3D"hljs-string">"Export dubbo service "</span> + interfac=
eClass.getName() + <span class=3D"hljs-string">" to url "</span>=20=
+ url);=0A                        }=0A                    }=0A=0A=
                    <span class=3D"hljs-comment">// For providers=
, this is used to enable custom proxy to generate invoker</span>=0A=
                    <span class=3D"hljs-keyword">String</span> pr=
oxy =3D url.getParameter(PROXY_KEY);=0A                    <span=20=
class=3D"hljs-built_in">if</span> (StringUtils.isNotEmpty(proxy))=
 {=0A                        registryURL =3D registryURL.<span cl=
ass=3D"hljs-built_in">addParameter</span>(PROXY_KEY, proxy);=0A =20=
                  }=0A                    <span class=3D"hljs-com=
ment">// =B1=A9=C2=B6=B7=FE=CE=F1</span>=0A                    In=
voker&lt;?&gt; invoker =3D PROXY_FACTORY.getInvoker(ref, (Class)=20=
interfaceClass, registryURL.addParameterAndEncoded(EXPORT_KEY, ur=
l.toFullString()));=0A                    DelegateProviderMetaDat=
aInvoker wrapperInvoker =3D <span class=3D"hljs-keyword">new</spa=
n> DelegateProviderMetaDataInvoker(invoker, <span class=3D"hljs-k=
eyword">this</span>);=0A=0A                    Exporter&lt;?&gt;=20=
exporter =3D protocol.<span class=3D"hljs-keyword">export</span>(=
wrapperInvoker);=0A                    exporters.add(exporter);=0A=
                }=0A            } <span class=3D"hljs-built_in">e=
lse</span> {=0A                <span class=3D"hljs-built_in">if</=
span> (logger.isInfoEnabled()) {=0A                    logger.inf=
o(<span class=3D"hljs-string">"Export dubbo service "</span> + in=
terfaceClass.getName() + <span class=3D"hljs-string">" to url "</=
span> + url);=0A                }=0A                Invoker&lt;?&=
gt; invoker =3D PROXY_FACTORY.getInvoker(ref, (Class) interfaceCl=
ass, url);=0A                DelegateProviderMetaDataInvoker wrap=
perInvoker =3D <span class=3D"hljs-keyword">new</span> DelegatePr=
oviderMetaDataInvoker(invoker, <span class=3D"hljs-keyword">this<=
/span>);=0A                <span class=3D"hljs-comment">// =D5=E2=
=B8=F6protocol=CA=C7RegistryProtocol=A3=AC=BF=B4=CF=C2=C3=E6=B5=C4=
=B1=A9=C2=B6=D4=B6=B3=CC=B7=FE=CE=F1</span>=0A                Exp=
orter&lt;?&gt; exporter =3D protocol.<span class=3D"hljs-keyword"=
>export</span>(wrapperInvoker);=0A                exporters.add(e=
xporter);=0A            }=0A            <span class=3D"hljs-comme=
nt">/**=0A             * @since 2.7.0=0A             * ServiceDat=
a Store=0A             */</span>=0A            MetadataReportServ=
ice metadataReportService =3D null;=0A            <span class=3D"=
hljs-built_in">if</span> ((metadataReportService =3D getMetadataR=
eportService()) !=3D null) {=0A                metadataReportServ=
ice.publishProvider(url);=0A            }=0A        }=0A    }=0A=20=
   <span class=3D"hljs-keyword">this</span>.urls.add(url);=0A}</p=
re><h1 id=3D"item-4">exportLocal=A3=BA=B1=BE=B5=D8=B1=A9=C2=B6</h=
1><p>=D4=DA<a href=3D"https://segmentfault.com/a/1190000021390261=
#item-1-3">SPI#createExtension</a>=D6=D0=A3=AC=CE=D2=C3=C7=BF=B4=B5=
=BD=C1=CBExtension=B5=C4=B4=B4=BD=A8=A3=AC=CA=C7<font color=3D"#e=
83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberatio=
n Mono, Courier New, monospace"><span style=3D"font-size: 0.875re=
m;">wrapperClass</span></font>=D7=B0=CA=CE=B5=C4=A3=AC=B6=F8Injvm=
Protocol=CA=C7=D3=C9<font color=3D"#e83e8c" face=3D"SFMono-Regula=
r, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospa=
ce"><span style=3D"font-size: 0.875rem;">org.apache.dubbo.rpc.pro=
tocol.ProtocolFilterWrapper</span></font>=A1=A2<font color=3D"#e8=
3e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation=
 Mono, Courier New, monospace"><span style=3D"font-size: 0.875rem=
;">org.apache.dubbo.qos.protocol.QosProtocolWrapper</span></font>=
=A1=A2<font color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Mona=
co, Consolas, Liberation Mono, Courier New, monospace"><span styl=
e=3D"font-size: 0.875rem;">org.apache.dubbo.rpc.protocol.Protocol=
ListenerWrapper</span></font>=D5=E2=C8=FD=B8=F6=D7=B0=CA=CE=B5=C4=
=A1=A3=B5=F7=D3=C3=B5=C4=CA=B1=BA=F2=A3=AC=BB=E1=CF=C8=B5=F7=D3=C3=
<font color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Co=
nsolas, Liberation Mono, Courier New, monospace"><span style=3D"f=
ont-size: 0.875rem;">ProtocolListenerWrapper</span></font>=B5=C4<=
font color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Con=
solas, Liberation Mono, Courier New, monospace"><span style=3D"fo=
nt-size: 0.875rem;">export</span></font>=B7=BD=B7=A8=A3=AC=C8=BB=BA=
=F3=BB=E1=B5=F7=D3=C3<font color=3D"#e83e8c" face=3D"SFMono-Regul=
ar, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monosp=
ace"><span style=3D"font-size: 0.875rem;">QosProtocolWrapper</spa=
n></font>=B5=C4<font color=3D"#e83e8c" face=3D"SFMono-Regular, Me=
nlo, Monaco, Consolas, Liberation Mono, Courier New, monospace"><=
span style=3D"font-size: 0.875rem;">export</span></font>=B7=BD=B7=
=A8=A3=AC=C8=BB=BA=F3=CA=C7<font color=3D"#e83e8c" face=3D"SFMono=
-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New,=20=
monospace"><span style=3D"font-size: 0.875rem;">ProtocolFilterWra=
pper</span></font>=B5=C4<font color=3D"#e83e8c" face=3D"SFMono-Re=
gular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, mon=
ospace"><span style=3D"font-size: 0.875rem;">export</span></font>=
=B7=BD=B7=A8=A3=AC=D5=E2=C0=EF=BB=E1=BB=F1=C8=A1filter=A3=AC=D7=EE=
=BA=F3=CA=C7<font color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo=
, Monaco, Consolas, Liberation Mono, Courier New, monospace"><spa=
n style=3D"font-size: 0.875rem;">InjvmProtocol</span></font>=B5=C4=
<font color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Co=
nsolas, Liberation Mono, Courier New, monospace"><span style=3D"f=
ont-size: 0.875rem;">InjvmProtocol</span></font>=A1=A3=B4=D3<font=
 color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consola=
s, Liberation Mono, Courier New, monospace"><span style=3D"font-s=
ize: 0.875rem;">InjvmProtocol</span></font>=B5=BD<font color=3D"#=
e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberati=
on Mono, Courier New, monospace"><span style=3D"font-size: 0.875r=
em;">ProtocolFilterWrapper</span></font>=B5=BD<font color=3D"#e83=
e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation=20=
Mono, Courier New, monospace"><span style=3D"font-size: 0.875rem;=
">QosProtocolWrapper</span></font>=B5=C4<font color=3D"#e83e8c" f=
ace=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono,=20=
Courier New, monospace"><span style=3D"font-size: 0.875rem;">expo=
rt</span></font>=B7=BD=B7=A8=A3=AC=B6=BC=D6=B4=D0=D0=CD=EA=BA=F3=A3=
=AC=BE=CD=BF=AA=CA=BC=B4=B4=BD=A8=D2=BB=B8=F6<font color=3D"#e83e=
8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation M=
ono, Courier New, monospace"><span style=3D"font-size: 0.875rem;"=
>ListenerExporterWrapper</span></font>=A3=AC=B8=BA=D4=F0=BC=E0=CC=
=FDexport=BA=CDunexport=A1=A3</p><pre class=3D"hljs cpp" style=3D=
"background-image: initial; background-attachment: initial; backg=
round-size: initial; background-origin: initial; background-clip:=
 initial; background-position: initial; background-repeat: initia=
l;"><span class=3D"hljs-function"><span class=3D"hljs-keyword">pr=
ivate</span> <span class=3D"hljs-keyword">void</span> <span class=
=3D"hljs-title">exportLocal</span><span class=3D"hljs-params">(UR=
L url)</span> </span>{=0A    URL local =3D URLBuilder.from(url)=0A=
            .setProtocol(LOCAL_PROTOCOL)=0A            .setHost(L=
OCALHOST_VALUE)=0A            .setPort(<span class=3D"hljs-number=
">0</span>)=0A            .build();=0A    <span class=3D"hljs-com=
ment">// PROXY_FACTORY.getInvoker=CA=C7=B0=FC=D7=B0=CA=B5=CF=D6=C0=
=E0=B5=C4=D0=C5=CF=A2</span>=0A    <span class=3D"hljs-comment">/=
/ local=CA=C7injvm:=BF=AA=CD=B7=B5=C4=A3=AC=CB=F9=D2=D4=D5=E2=B8=F6=
protocol=CA=C7InjvmProtocol </span>=0A    Exporter&lt;?&gt; expor=
ter =3D protocol.<span class=3D"hljs-keyword">export</span>(=0A =20=
          PROXY_FACTORY.getInvoker(ref, (Class) interfaceClass, l=
ocal));=0A    <span class=3D"hljs-comment">// =CC=ED=BC=D3=B5=BDe=
xporters</span>=0A    exporters.add(exporter);=0A    logger.info(=
<span class=3D"hljs-string">"Export dubbo service "</span> + inte=
rfaceClass.getName() + <span class=3D"hljs-string">" to local reg=
istry url : "</span> + local);=0A}=0A=0A<span class=3D"hljs-comme=
nt">// ProtocolListenerWrapper</span>=0A<span class=3D"hljs-keywo=
rd">public</span> &lt;T&gt; Exporter&lt;T&gt; <span class=3D"hljs=
-keyword">export</span>(Invoker&lt;T&gt; invoker) throws RpcExcep=
tion {=0A    <span class=3D"hljs-keyword">if</span> (REGISTRY_PRO=
TOCOL.equals(invoker.getUrl().getProtocol())) {=0A        <span c=
lass=3D"hljs-keyword">return</span> protocol.<span class=3D"hljs-=
keyword">export</span>(invoker);=0A    }=0A    =0A    <span class=
=3D"hljs-keyword">return</span> <span class=3D"hljs-keyword">new<=
/span> ListenerExporterWrapper&lt;T&gt;(protocol.<span class=3D"h=
ljs-keyword">export</span>(invoker),=0A            Collections.un=
modifiableList(ExtensionLoader.getExtensionLoader(ExporterListene=
r.<span class=3D"hljs-keyword">class</span>)=0A                 =20=
  .getActivateExtension(invoker.getUrl(), EXPORTER_LISTENER_KEY))=
);=0A}=0A=0A<span class=3D"hljs-comment">// QosProtocolWrapper</s=
pan>=0A<span class=3D"hljs-keyword">public</span> &lt;T&gt; Expor=
ter&lt;T&gt; <span class=3D"hljs-keyword">export</span>(Invoker&l=
t;T&gt; invoker) throws RpcException {=0A    <span class=3D"hljs-=
keyword">if</span> (REGISTRY_PROTOCOL.equals(invoker.getUrl().get=
Protocol())) {=0A        startQosServer(invoker.getUrl());=0A   =20=
    <span class=3D"hljs-keyword">return</span> protocol.<span cla=
ss=3D"hljs-keyword">export</span>(invoker);=0A    }=0A    <span c=
lass=3D"hljs-keyword">return</span> protocol.<span class=3D"hljs-=
keyword">export</span>(invoker);=0A}=0A=0A<span class=3D"hljs-com=
ment">// ProtocolFilterWrapper=A3=AC=BB=F1=C8=A1filter</span>=0A<=
span class=3D"hljs-keyword">public</span> &lt;T&gt; Exporter&lt;T=
&gt; <span class=3D"hljs-keyword">export</span>(Invoker&lt;T&gt;=20=
invoker) throws RpcException {=0A    <span class=3D"hljs-keyword"=
>if</span> (REGISTRY_PROTOCOL.equals(invoker.getUrl().getProtocol=
())) {=0A        <span class=3D"hljs-keyword">return</span> proto=
col.<span class=3D"hljs-keyword">export</span>(invoker);=0A    }=0A=
    <span class=3D"hljs-keyword">return</span> protocol.<span cla=
ss=3D"hljs-keyword">export</span>(buildInvokerChain(invoker, SERV=
ICE_FILTER_KEY, CommonConstants.PROVIDER));=0A}=0A=0A<span class=3D=
"hljs-comment">// InjvmProtocol</span>=0A<span class=3D"hljs-keyw=
ord">public</span> &lt;T&gt; Exporter&lt;T&gt; <span class=3D"hlj=
s-keyword">export</span>(Invoker&lt;T&gt; invoker) throws RpcExce=
ption {=0A    <span class=3D"hljs-keyword">return</span> <span cl=
ass=3D"hljs-keyword">new</span> InjvmExporter&lt;T&gt;(invoker, i=
nvoker.getUrl().getServiceKey(), exporterMap);=0A}</pre><h1 id=3D=
"item-5">=B1=A9=C2=B6=D4=B6=B3=CC=B7=FE=CE=F1</h1><p>=CD=A8=B9=FD=
netty=BF=AA=C6=F4=B7=FE=CE=F1=A3=AC=B2=A2=B0=D1=D0=C5=CF=A2=D7=A2=
=B2=E1=B5=BD=D7=A2=B2=E1=D6=D0=D0=C4</p><h2 id=3D"item-5-1">Regis=
tryProtocol=B5=C4export</h2><pre class=3D"hljs java" style=3D"bac=
kground-image: initial; background-attachment: initial; backgroun=
d-size: initial; background-origin: initial; background-clip: ini=
tial; background-position: initial; background-repeat: initial;">=
<span class=3D"hljs-comment">//RegistryProtocol</span>=0A<span cl=
ass=3D"hljs-keyword">public</span> &lt;T&gt; <span class=3D"hljs-=
function">Exporter&lt;T&gt; <span class=3D"hljs-title">export</sp=
an><span class=3D"hljs-params">(<span class=3D"hljs-keyword">fina=
l</span> Invoker&lt;T&gt; originInvoker)</span> <span class=3D"hl=
js-keyword">throws</span> RpcException </span>{=0A    <span class=
=3D"hljs-comment">// =BB=F1=C8=A1=D7=A2=B2=E1=D6=D0=D0=C4=B5=C4=B5=
=D8=D6=B7</span>=0A    URL registryUrl =3D getRegistryUrl(originI=
nvoker);=0A    <span class=3D"hljs-comment">// url to export loca=
lly</span>=0A    <span class=3D"hljs-comment">// =BB=F1=C8=A1=B7=FE=
=CE=F1=B7=BD=B5=D8=D6=B7</span>=0A    URL providerUrl =3D getProv=
iderUrl(originInvoker);=0A=0A    <span class=3D"hljs-comment">//=20=
Subscribe the override data</span>=0A    <span class=3D"hljs-comm=
ent">// FIXME When the provider subscribes, it will affect the sc=
ene : a certain JVM exposes the service and call</span>=0A    <sp=
an class=3D"hljs-comment">//  the same service. Because the subsc=
ribed is cached key with the name of the service, it causes the</=
span>=0A    <span class=3D"hljs-comment">//  subscription informa=
tion to cover.</span>=0A    <span class=3D"hljs-comment">// =B6=A9=
=D4=C4=B8=B2=B8=C7=B5=C4=B5=D8=D6=B7</span>=0A    <span class=3D"=
hljs-keyword">final</span> URL overrideSubscribeUrl =3D getSubscr=
ibedOverrideUrl(providerUrl);=0A    <span class=3D"hljs-comment">=
// =BC=E0=CC=FD</span>=0A    <span class=3D"hljs-keyword">final</=
span> OverrideListener overrideSubscribeListener =3D <span class=3D=
"hljs-keyword">new</span> OverrideListener(overrideSubscribeUrl,=20=
originInvoker);=0A    overrideListeners.put(overrideSubscribeUrl,=
 overrideSubscribeListener);=0A=0A    providerUrl =3D overrideUrl=
WithConfig(providerUrl, overrideSubscribeListener);=0A    <span c=
lass=3D"hljs-comment">//export invoker</span>=0A    <span class=3D=
"hljs-comment">// =D5=E2=C0=EF=BB=E1=B5=F7=D3=C3DubboProtocol=B5=C4=
export=B7=BD=B7=A8</span>=0A    <span class=3D"hljs-keyword">fina=
l</span> ExporterChangeableWrapper&lt;T&gt; exporter =3D doLocalE=
xport(originInvoker, providerUrl);=0A=0A    <span class=3D"hljs-c=
omment">// url to registry</span>=0A    <span class=3D"hljs-comme=
nt">// =B4=B4=BD=A8=D2=BB=B8=F6registry</span>=0A    <span class=3D=
"hljs-keyword">final</span> Registry registry =3D getRegistry(ori=
ginInvoker);=0A    <span class=3D"hljs-comment">// =BB=F1=C8=A1=D2=
=D1=BE=AD=D7=A2=B2=E1=B5=C4URL</span>=0A    <span class=3D"hljs-k=
eyword">final</span> URL registeredProviderUrl =3D getRegisteredP=
roviderUrl(providerUrl, registryUrl);=0A    ProviderInvokerWrappe=
r&lt;T&gt; providerInvokerWrapper =3D ProviderConsumerRegTable.re=
gisterProvider(originInvoker,=0A            registryUrl, register=
edProviderUrl);=0A    <span class=3D"hljs-comment">//to judge if=20=
we need to delay publish</span>=0A    <span class=3D"hljs-keyword=
">boolean</span> register =3D providerUrl.getParameter(REGISTER_K=
EY, <span class=3D"hljs-keyword">true</span>);=0A    <span class=3D=
"hljs-keyword">if</span> (register) {=0A        register(registry=
Url, registeredProviderUrl);=0A        <span class=3D"hljs-commen=
t">// =C9=E8=D6=C3=CE=AA=D2=D1=D7=A2=B2=E1</span>=0A        provi=
derInvokerWrapper.setReg(<span class=3D"hljs-keyword">true</span>=
);=0A    }=0A=0A    <span class=3D"hljs-comment">// Deprecated! S=
ubscribe to override rules in 2.6.x or before.</span>=0A    <span=
 class=3D"hljs-comment">// =B6=A9=D4=C4</span>=0A    registry.sub=
scribe(overrideSubscribeUrl, overrideSubscribeListener);=0A=0A  =20=
 exporter.setRegisterUrl(registeredProviderUrl);=0A    exporter.s=
etSubscribeUrl(overrideSubscribeUrl);=0A    <span class=3D"hljs-c=
omment">//Ensure that a new exporter instance is returned every t=
ime export</span>=0A    <span class=3D"hljs-keyword">return</span=
> <span class=3D"hljs-keyword">new</span> DestroyableExporter&lt;=
&gt;(exporter);=0A}</pre><h2 id=3D"item-5-2">DubboProtocol=B5=C4e=
xport</h2><pre class=3D"hljs qml" style=3D"background-image: init=
ial; background-attachment: initial; background-size: initial; ba=
ckground-origin: initial; background-clip: initial; background-po=
sition: initial; background-repeat: initial;"><font face=3D"SFMon=
o-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New,=
 monospace">public &lt;T&gt; Exporter&lt;T&gt; </font><span class=
=3D"hljs-keyword">export</span>(Invoker&lt;T&gt; invoker) throws=20=
<span class=3D"hljs-title">RpcException</span> {=0A    <span clas=
s=3D"hljs-comment">// =BB=F1=C8=A1=B5=D8=D6=B7</span>=0A    URL <=
span class=3D"hljs-built_in">url</span> =3D invoker.getUrl();=0A=0A=
    <span class=3D"hljs-comment">// export service.</span>=0A   =20=
<span class=3D"hljs-comment">//=BB=F1=C8=A1=B7=FE=CE=F1</span>=0A=
    <span class=3D"hljs-built_in">String</span> key =3D serviceKe=
y(<span class=3D"hljs-built_in">url</span>);=0A    DubboExporter&=
lt;T&gt; exporter =3D <span class=3D"hljs-keyword">new</span> Dub=
boExporter&lt;T&gt;(invoker, key, exporterMap);=0A    exporterMap=
.put(key, exporter);=0A=0A    <span class=3D"hljs-comment">//expo=
rt an stub service for dispatching event</span>=0A    <span class=
=3D"hljs-comment">// =CA=C7=B7=F1=CE=AA=B5=F7=B6=C8=CA=C2=BC=FE=B1=
=A9=C2=B6stub=B7=FE=CE=F1</span>=0A    <span class=3D"hljs-built_=
in">Boolean</span> isStubSupportEvent =3D <span class=3D"hljs-bui=
lt_in">url</span>.getParameter(STUB_EVENT_KEY, DEFAULT_STUB_EVENT=
);=0A    <span class=3D"hljs-built_in">Boolean</span> isCallbacks=
ervice =3D <span class=3D"hljs-built_in">url</span>.getParameter(=
IS_CALLBACK_SERVICE, <span class=3D"hljs-literal">false</span>);=0A=
    <span class=3D"hljs-keyword">if</span> (isStubSupportEvent &a=
mp;&amp; !isCallbackservice) {=0A        <span class=3D"hljs-buil=
t_in">String</span> stubServiceMethods =3D <span class=3D"hljs-bu=
ilt_in">url</span>.getParameter(STUB_EVENT_METHODS_KEY);=0A     =20=
  <span class=3D"hljs-keyword">if</span> (stubServiceMethods =3D=3D=
 <span class=3D"hljs-literal">null</span> || stubServiceMethods.l=
ength() =3D=3D <span class=3D"hljs-number">0</span>) {=0A       =20=
    <span class=3D"hljs-keyword">if</span> (logger.isWarnEnabled(=
)) {=0A                logger.warn(<span class=3D"hljs-keyword">n=
ew</span> IllegalStateException(<span class=3D"hljs-string">"cons=
umer ["</span> + <span class=3D"hljs-built_in">url</span>.getPara=
meter(INTERFACE_KEY) +=0A                        <span class=3D"h=
ljs-string">"], has set stubproxy support event ,but no stub meth=
ods founded."</span>));=0A            }=0A=0A        } <span clas=
s=3D"hljs-title">else</span> {=0A            stubServiceMethodsMa=
p.put(<span class=3D"hljs-built_in">url</span>.getServiceKey(), s=
tubServiceMethods);=0A        }=0A    }=0A    <span class=3D"hljs=
-comment">// =BF=AA=C6=F4=B7=FE=CE=F1</span>=0A    openServer(<sp=
an class=3D"hljs-built_in">url</span>);=0A    <span class=3D"hljs=
-comment">// =CA=B5=CF=D6=C1=CBSerializationOptimizer=BD=D3=BF=DA=
=B5=C4=CF=C8=CA=B5=C0=FD=BB=AF</span>=0A    optimizeSerialization=
(<span class=3D"hljs-built_in">url</span>);=0A=0A    <span class=3D=
"hljs-keyword">return</span> exporter;=0A}</pre><h3>openServer</h=
3><pre class=3D"hljs processing" style=3D"background-image: initi=
al; background-attachment: initial; background-size: initial; bac=
kground-origin: initial; background-clip: initial; background-pos=
ition: initial; background-repeat: initial;"><span class=3D"hljs-=
keyword">private</span> <span class=3D"hljs-keyword">void</span>=20=
openServer(URL url) {=0A    <span class=3D"hljs-comment">// find=20=
server.</span>=0A    <span class=3D"hljs-comment">// =BB=F1=C8=A1=
=B7=FE=CE=F1=B5=D8=D6=B7</span>=0A    <span class=3D"hljs-keyword=
">String</span> <span class=3D"hljs-built_in">key</span> =3D url.=
getAddress();=0A    <span class=3D"hljs-comment">//client can exp=
ort a service which's only for server to invoke</span>=0A    <spa=
n class=3D"hljs-built_in">boolean</span> isServer =3D url.getPara=
meter(IS_SERVER_KEY, <span class=3D"hljs-keyword">true</span>);=0A=
    <span class=3D"hljs-keyword">if</span> (isServer) {=0A      =20=
 <span class=3D"hljs-comment">// ExchangeServer=C8=E7=B9=FB=CE=AA=
=BF=D5=A3=AC=D4=F2=B4=B4=BD=A8=D2=BB=B8=F6</span>=0A        Excha=
ngeServer server =3D serverMap.<span class=3D"hljs-built_in">get<=
/span>(<span class=3D"hljs-built_in">key</span>);=0A        <span=
 class=3D"hljs-keyword">if</span> (server =3D=3D <span class=3D"h=
ljs-keyword">null</span>) {=0A            <span class=3D"hljs-key=
word">synchronized</span> (<span class=3D"hljs-keyword">this</spa=
n>) {=0A                server =3D serverMap.<span class=3D"hljs-=
built_in">get</span>(<span class=3D"hljs-built_in">key</span>);=0A=
                <span class=3D"hljs-keyword">if</span> (server =3D=
=3D <span class=3D"hljs-keyword">null</span>) {=0A              =20=
     <span class=3D"hljs-comment">// Exchangers=B5=C4Transporters=
=B5=C4bind=C0=EF=A3=AC=CD=A8=B9=FDnetty=B0=F3=B6=A8=BF=AA=C6=F4=B7=
=FE=CE=F1</span>=0A                    serverMap.put(<span class=3D=
"hljs-built_in">key</span>, createServer(url));=0A              =20=
 }=0A            }=0A        } <span class=3D"hljs-keyword">else<=
/span> {=0A            <span class=3D"hljs-comment">// server sup=
ports reset, use together with override</span>=0A            serv=
er.reset(url);=0A        }=0A    }=0A}</pre></article><div class=3D=
"col-6 text-secondary" id=3D"sf-article_metas">=D4=C4=B6=C1 129=B7=
=A2=B2=BC=D3=DA 2019-12-30</div><div class=3D"text-secondary font=
-size-14 mb-5 d-flex justify-content-between row"><br></div><div>=
=C0=B4=D4=B4=A3=BA&nbsp;<a href=3D"https://segmentfault.com/a/119=
0000021441703?utm_source=3Dtag-newest">https://segmentfault.com/a=
/1190000021441703?utm_source=3Dtag-newest</a></div></body></html>=
=0A=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000494546.144--

------=_Next_Part_0001483638.434
Content-Type: image/png;
	name="0.02045824426754117.png"
Content-Transfer-Encoding: base64
Content-ID: <0.02045824426754117.png>
Content-Location: 0.02045824426754117.png

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEsElEQVRYR8WWa0wUVxiGvzOX3dmZWVwWRFhgFdRiSyrSmpJW0tj2h7dWDWlsgwEDGC2tphfbpiZN1PSHNNE2MdFqRQSq1KRNlLY0xF4tbYJRY41oXUyKArLgshfZ2dndmTPnNLsJDbG2y65UJpk/853vfZ/znXcmg2CaLzRV/qfslvy1vvBAsnpTBtCRa1tkM6etWfJn/65kIKYMoNOZXSwKwp6ne2+smBaAHx6avQcQzXrO1V89LQBni5zU6/EVr/QpVx84wLnC2QFZDX7/8LDvxWTMY2vvKwO9Er9IkiznEcu5HG5fcUzQJfElJtG6tMDj2wcANBFQygC9M+WtmRbTPkWP/OZ0q+U9aTAvzZJxglD2jzm3b1clMh6vpwTgzrB+aJb4d5WwctTp0WpvZsk7BE7aqRD0/Nzh4Y7Jmqd0BN/l5VWWMvh4NKqczB1RKobsljdk2f6xxxtYODcUupyMeUoAv8yf350XCZUVDgzFp9eXmxEQooYrZzRQlqx5SgA/zys4LWNcvPjGQG5M4Px8J50VCATyPWPpDwSgMy/7iRzZcrbkWl98At2FjnMFOLpYDQWbCrxaXbIQKYXQ5Zix32sWc5/qc6+9kG5a6JCkS2ZgoFul+St9vsFkIFICiBn0OLLaJU39vGBUOTE0U/xAMovvXwBu6bODw2f+V4BHV72XfrmjwR8zGcywbs/zBneP2IQqxHHbs0aVRyaaZ2w49BqDSMjTXN/8b1CTm8Cmjo9YoHmIGhdxSPkS2tZfnyjYlr9gW+XAtb0Tnzle3l2qCNkcFm07hUiw1NdU7bgXREKAjM3H9KDk5AxVbTSI3gscCslYpY4xN5NJIoKGDbuJN1kpRk6VYex+yRKgNNQ40LLtq3FD0ysnqYzVzb7G9Z/eDZEQINYgbjy+ErO2Eg2hWQCGHXjWAlgLA8OowDABoMwtiOAr0Lj6x3vt0vpmJyV+d2moueb3lABiTZa646+HTTYPfLKqLZmQ8Vs6bgtRX0vwcNU7KR3BeFP6ppauMXlOuRHW+hEyRlmgKgYKDMdaCSFZgGgOQwEIRjvh4IpdUN9Zw+JwpVkP7lObq7++vxBO6Ga2/rSF6Fohw1GZUIMAZRVAqB+wdgYOvXApvnR1uxUywQFNa1yJpjWpDPwt8urpo6AEdkDruv5/CNe2F03GMOUMxBvrO/tF2ZofiapAdOwHDmmgU1EQBCvH8kB0OqL63U/CZ+v6Eu18vP7fE6jvbACgMiDmKhxYdiDetOmbZ8DELQeKnIB1EyA2CgA3AUMXNK749m7j9Noj5f6mul+TykB6dWu5bs3sCgHrovuXLZjsbiauE2uaHhNZdu0dZC3SD1e8lBSAWHEoJ81uaYggpkTl7HM0YAkAGgMEfgCkIAQhSgDHf/koMQGLZECGBQDxgGgQSOyGXtCiB+FIRQ+/8dQxSbuzN9C64WJqGahqlYC3LeFkUQdMeMogKxhgNigmZob1RanmhZA6HBefIZYBJo8jhl9Eo8Ys4HmPjL1vK4crr9zfd6D2SDkHUA6AbICQAJTwlBAzA1RgTJzJQAyiCIUJpSOGoV/X7gQ7wl+8dSvR8SX3GiZSS6E+7QB/AVIm2jC53pzAAAAAAElFTkSuQmCC

------=_Next_Part_0001483638.434--

