From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?ZHViYm+1xMb0tq+5/bPMo6jO5aOpLS3P+7fRt70=?=
Date: Date: Fri, 23 Jul 2021 05:55:47 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001483311.361"

This is a multi-part message in MIME format.

------=_Next_Part_0001483311.361
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000494437.385"


------=_Next_Part_0000494437.385
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000494437.385
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A<titl=
e>dubbo=B5=C4=C6=F4=B6=AF=B9=FD=B3=CC=A3=A8=CE=E5=A3=A9--=CF=FB=B7=
=D1=B7=BD</title>=0A    =0A<style id=3D"wiz_custom_css">html, .wi=
z-editor-body {font-size: 12pt;}.wiz-editor-body {font-family: He=
lvetica, 'Hiragino Sans GB', '=E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91=
', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-h=
eight: 1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1re=
m;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.w=
iz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin=
:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bo=
ld;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-e=
ditor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body=20=
h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-s=
ize:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;f=
ont-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem=
;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-=
body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body d=
l,.wiz-editor-body li {margin:8px 0;}.wiz-editor-body blockquote,=
.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code=
 {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-=
editor-body ul,.wiz-editor-body ol {padding-left:32px;padding-lef=
t:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type=
:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-ty=
pe:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-st=
yle-type:lower-roman;}.wiz-editor-body blockquote {padding: 0 12p=
x;}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz=
-editor-body blockquote > :last-child {margin-bottom:0;}.wiz-edit=
or-body img {border:0;max-width:100%;height:auto !important;margi=
n:2px 0;}.wiz-editor-body table {border-collapse:collapse;border:=
1px solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {paddi=
ng:4px 8px;border-collapse:collapse;border:1px solid #bbbbbb;min-=
height:28px;word-break:break-word;box-sizing: border-box;}.wiz-hi=
de {display:none !important;}</style></head>=0A=0A<body class=3D"=
wiz-editor-body"  spellcheck=3D"false"><div></div><h1 class=3D"h2=
 mb-3" id=3D"sf-article_title"><a class=3D"text-body" href=3D"htt=
ps://segmentfault.com/a/1190000021463569">dubbo=B5=C4=C6=F4=B6=AF=
=B9=FD=B3=CC=A3=A8=CE=E5=A3=A9--=CF=FB=B7=D1=B7=BD</a></h1><div c=
lass=3D"m-n1"><a class=3D"m-1 badge-tag" href=3D"https://segmentf=
ault.com/t/dubbo" data-toggle=3D"popover" data-placement=3D"top"=20=
data-original-title=3D"dubbo" data-id=3D"1040000000257318">dubbo<=
/a><a class=3D"m-1 badge-tag" href=3D"https://segmentfault.com/t/=
java" data-toggle=3D"popover" data-img=3D"https://avatar-static.s=
egmentfault.com/512/342/51234253-1040000000089449_big64" data-pla=
cement=3D"top" data-original-title=3D"java" data-id=3D"1040000000=
089449"><img src=3D"0.006552868191187722.png"><span>&nbsp;</span>=
java</a><a class=3D"m-1 badge-tag" href=3D"https://segmentfault.c=
om/t/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90" data-toggle=3D"popover=
" data-placement=3D"top" data-original-title=3D"=D4=B4=C2=EB=B7=D6=
=CE=F6" data-id=3D"1040000002479741">=D4=B4=C2=EB=B7=D6=CE=F6</a>=
</div><div class=3D"font-size-14"><span class=3D"text-secondary m=
l-2">&nbsp;=D4=C4=B6=C1=D4=BC 30 =B7=D6=D6=D3</span></div><articl=
e class=3D"article fmt article-content" data-id=3D"11900000214635=
69"><h1 id=3D"item-1">=C5=E4=D6=C3=B3=F5=CA=BC=BB=AF</h1><p><font=
 color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consola=
s, Liberation Mono, Courier New, monospace"><span style=3D"font-s=
ize: 0.875rem;">ReferenceBean</span></font>=B8=FA<font color=3D"#=
e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberati=
on Mono, Courier New, monospace"><span style=3D"font-size: 0.875r=
em;">ServiceBean</span></font>=D2=BB=D1=F9=A3=AC=B6=BC=CA=B5=CF=D6=
=C1=CB<font color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Mona=
co, Consolas, Liberation Mono, Courier New, monospace"><span styl=
e=3D"font-size: 0.875rem;">InitializingBean</span></font>=B5=C4=BD=
=D3=BF=DA=A3=AC=D7=D4=C8=BB=D2=B2=BB=E1=B5=F7=D3=C3<font color=3D=
"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Libera=
tion Mono, Courier New, monospace"><span style=3D"font-size: 0.87=
5rem;">afterPropertiesSet</span></font>=B7=BD=B7=A8=D4=DA=A3=AC=D5=
=E2=B8=F6=B7=BD=B7=A8=BA=CD<a href=3D"https://segmentfault.com/a/=
1190000021430403">dubbo=B5=C4=C6=F4=B6=AF=B9=FD=B3=CC=A3=A8=B6=FE=
=A3=A9--=B7=FE=CE=F1=B7=BD=CA=F4=D0=D4=C5=E4=D6=C3</a>=C0=D7=CD=AC=
=A3=AC=D5=E2=B1=DF=BE=CD=B2=BB=BC=CC=D0=F8=C1=CB=A1=A3=B3=FD=C1=CB=
<font color=3D"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Co=
nsolas, Liberation Mono, Courier New, monospace"><span style=3D"f=
ont-size: 0.875rem;">InitializingBean</span></font>=D5=E2=B8=F6=BD=
=D3=BF=DA=A3=AC=CB=FB=BB=B9=BC=CC=B3=D0=C1=CB<font color=3D"#e83e=
8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation M=
ono, Courier New, monospace"><span style=3D"font-size: 0.875rem;"=
>FactoryBean</span></font>=BD=D3=BF=DA=A3=AC=CA=B5=C0=FD=BB=AF=B5=
=C4=CA=B1=BA=F2=A3=AC=BE=CD=BB=E1=B5=F7=D3=C3<font color=3D"#e83e=
8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation M=
ono, Courier New, monospace"><span style=3D"font-size: 0.875rem;"=
>getObject</span></font>=B7=BD=B7=A8=A3=AC=C0=FD=D7=D3=BF=B4<a hr=
ef=3D"https://segmentfault.com/a/1190000020749652">spring=D1=A7=CF=
=B0=D6=AEFactoryBean</a>=A3=AC=D4=B4=C2=EB=BC=FB<a href=3D"https:=
//segmentfault.com/a/1190000020902935#item-4-4">doGetObjectFromFa=
ctoryBean</a>=A1=A3</p><pre class=3D"hljs cs" style=3D"background=
-image: initial; background-attachment: initial; background-size:=
 initial; background-origin: initial; background-clip: initial; b=
ackground-position: initial; background-repeat: initial;"><span c=
lass=3D"hljs-function"><span class=3D"hljs-keyword">public</span>=
 Object <span class=3D"hljs-title">getObject</span>() </span>{  =0A=
    <span class=3D"hljs-keyword">return</span> <span class=3D"hlj=
s-keyword">get</span>();  =0A}=0A<span class=3D"hljs-function"><s=
pan class=3D"hljs-keyword">public</span> synchronized T <span cla=
ss=3D"hljs-title">get</span>() </span>{=0A    <span class=3D"hljs=
-comment">// =B8=F7=D6=D6=C5=E4=D6=C3=B5=C4=B8=FC=D0=C2</span>=0A=
    checkAndUpdateSubConfigs();=0A=0A    <span class=3D"hljs-keyw=
ord">if</span> (destroyed) {=0A        <span class=3D"hljs-keywor=
d">throw</span> <span class=3D"hljs-keyword">new</span> IllegalSt=
ateException(<span class=3D"hljs-string">"The invoker of Referenc=
eConfig("</span> + url + <span class=3D"hljs-string">") has alrea=
dy destroyed!"</span>);=0A    }=0A    <span class=3D"hljs-keyword=
">if</span> (<span class=3D"hljs-keyword">ref</span> =3D=3D <span=
 class=3D"hljs-literal">null</span>) {=0A        init();=0A    }=0A=
    <span class=3D"hljs-keyword">return</span> <span class=3D"hlj=
s-keyword">ref</span>;=0A}</pre><h1 id=3D"item-2">init</h1><pre c=
lass=3D"hljs crmsh" style=3D"background-image: initial; backgroun=
d-attachment: initial; background-size: initial; background-origi=
n: initial; background-clip: initial; background-position: initia=
l; background-repeat: initial;"><font face=3D"SFMono-Regular, Men=
lo, Monaco, Consolas, Liberation Mono, Courier New, monospace">//=
 =D2=D4=C9=CF=B4=FA=C2=EB=B8=FA=B7=FE=CE=F1=B7=BD=C0=D7=CD=AC=A3=AC=
=CA=A1=C2=D4=0A</font><span class=3D"hljs-keyword">ref</span> =3D=
 createProxy(map);=0A<span class=3D"hljs-keyword">String</span> s=
erviceKey =3D URL.buildKey(interfaceName, group, <span class=3D"h=
ljs-keyword">version</span>);=0AApplicationModel.initConsumerMode=
l(serviceKey, buildConsumerModel(serviceKey, <span class=3D"hljs-=
keyword">attributes</span>));=0Ainitialized =3D <span class=3D"hl=
js-literal">true</span>;</pre><h1 id=3D"item-3">=B4=B4=BD=A8invok=
e</h1><p>=D4=DA<font color=3D"#e83e8c" face=3D"SFMono-Regular, Me=
nlo, Monaco, Consolas, Liberation Mono, Courier New, monospace"><=
span style=3D"font-size: 0.875rem;">createProxy</span></font>=B7=BD=
=B7=A8=D6=D0=A3=AC=BB=E1=B5=F7=D3=C3<font color=3D"#e83e8c" face=3D=
"SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courie=
r New, monospace"><span style=3D"font-size: 0.875rem;">RegistryPr=
otocol</span></font>=B5=C4<font color=3D"#e83e8c" face=3D"SFMono-=
Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, m=
onospace"><span style=3D"font-size: 0.875rem;">refer</span></font=
>=B7=BD=B7=A8=A3=AC=D5=E2=C0=EF=CF=C8=C2=D4=B9=FD<font color=3D"#=
e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberati=
on Mono, Courier New, monospace"><span style=3D"font-size: 0.875r=
em;">ProtocolFilterWrapper</span></font>=A1=A2<font color=3D"#e83=
e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation=20=
Mono, Courier New, monospace"><span style=3D"font-size: 0.875rem;=
">ProtocolListenerWrapper</span></font>=A1=A2<font color=3D"#e83e=
8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation M=
ono, Courier New, monospace"><span style=3D"font-size: 0.875rem;"=
>QosProtocolWrapper</span></font>=A1=A3</p><pre class=3D"hljs las=
so" style=3D"background-image: initial; background-attachment: in=
itial; background-size: initial; background-origin: initial; back=
ground-clip: initial; background-position: initial; background-re=
peat: initial;"><span class=3D"hljs-keyword">public</span> &lt;T&=
gt; Invoker&lt;T&gt; refer(Class&lt;T&gt; <span class=3D"hljs-key=
word">type</span>, URL url) throws RpcException {=0A    <span cla=
ss=3D"hljs-comment">// =BB=F1=C8=A1=D7=A2=B2=E1=D6=D0=D0=C4</span=
>=0A    url =3D URLBuilder.from(url)=0A            .setProtocol(u=
rl.getParameter(REGISTRY_KEY, DEFAULT_REGISTRY))=0A            .r=
emoveParameter(REGISTRY_KEY)=0A            .build();=0A    Regist=
ry registry =3D registryFactory.getRegistry(url);=0A    <span cla=
ss=3D"hljs-keyword">if</span> (RegistryService.class.<span class=3D=
"hljs-keyword">equals</span>(<span class=3D"hljs-keyword">type</s=
pan>)) {=0A        <span class=3D"hljs-keyword">return</span> pro=
xyFactory.getInvoker((T) registry, <span class=3D"hljs-keyword">t=
ype</span>, url);=0A    }=0A=0A    <span class=3D"hljs-comment">/=
/ group=3D"a,b" or group=3D"*"</span>=0A    <span class=3D"hljs-b=
uilt_in">Map</span>&lt;<span class=3D"hljs-built_in">String</span=
>, <span class=3D"hljs-built_in">String</span>&gt; qs =3D StringU=
tils.parseQueryString(url.getParameterAndDecoded(REFER_KEY));=0A=20=
   <span class=3D"hljs-built_in">String</span> <span class=3D"hlj=
s-keyword">group</span> =3D qs.get(GROUP_KEY);=0A    <span class=3D=
"hljs-keyword">if</span> (<span class=3D"hljs-keyword">group</spa=
n> !=3D <span class=3D"hljs-built_in">null</span> &amp;&amp; <spa=
n class=3D"hljs-keyword">group</span>.length() &gt; <span class=3D=
"hljs-number">0</span>) {=0A        <span class=3D"hljs-keyword">=
if</span> ((COMMA_SPLIT_PATTERN.split(<span class=3D"hljs-keyword=
">group</span>)).length &gt; <span class=3D"hljs-number">1</span>=
 || <span class=3D"hljs-string">"*"</span>.<span class=3D"hljs-ke=
yword">equals</span>(<span class=3D"hljs-keyword">group</span>))=20=
{=0A            <span class=3D"hljs-keyword">return</span> doRefe=
r(getMergeableCluster(), registry, <span class=3D"hljs-keyword">t=
ype</span>, url);=0A        }=0A    }=0A    <span class=3D"hljs-c=
omment">// =B9=D8=C1=AA=D2=FD=D3=C3</span>=0A    <span class=3D"h=
ljs-keyword">return</span> doRefer(cluster, registry, <span class=
=3D"hljs-keyword">type</span>, url);=0A}=0A=0A<span class=3D"hljs=
-keyword">private</span> &lt;T&gt; Invoker&lt;T&gt; doRefer(Clust=
er cluster, Registry registry, Class&lt;T&gt; <span class=3D"hljs=
-keyword">type</span>, URL url) {=0A    RegistryDirectory&lt;T&gt=
; directory =3D <span class=3D"hljs-literal">new</span> RegistryD=
irectory&lt;T&gt;(<span class=3D"hljs-keyword">type</span>, url);=
=0A    directory.setRegistry(registry);=0A    directory.setProtoc=
ol(protocol);=0A    <span class=3D"hljs-comment">// all attribute=
s of REFER_KEY</span>=0A    <span class=3D"hljs-built_in">Map</sp=
an>&lt;<span class=3D"hljs-built_in">String</span>, <span class=3D=
"hljs-built_in">String</span>&gt; parameters =3D <span class=3D"h=
ljs-literal">new</span> HashMap&lt;<span class=3D"hljs-built_in">=
String</span>, <span class=3D"hljs-built_in">String</span>&gt;(di=
rectory.getUrl().getParameters());=0A    <span class=3D"hljs-comm=
ent">// =B0=D1=CF=FB=B7=D1=B7=BD=D0=C5=CF=A2=D7=A2=B2=E1=B5=BD=D7=
=A2=B2=E1=D6=D0=D0=C4</span>=0A    URL subscribeUrl =3D <span cla=
ss=3D"hljs-literal">new</span> URL(CONSUMER_PROTOCOL, parameters.=
remove(REGISTER_IP_KEY), <span class=3D"hljs-number">0</span>, <s=
pan class=3D"hljs-keyword">type</span>.getName(), parameters);=0A=
    <span class=3D"hljs-keyword">if</span> (!ANY_VALUE.<span clas=
s=3D"hljs-keyword">equals</span>(url.getServiceInterface()) &amp;=
&amp; url.getParameter(REGISTER_KEY, <span class=3D"hljs-literal"=
>true</span>)) {=0A        directory.setRegisteredConsumerUrl(get=
RegisteredConsumerUrl(subscribeUrl, url));=0A        registry.reg=
ister(directory.getRegisteredConsumerUrl());=0A    }=0A    direct=
ory.buildRouterChain(subscribeUrl);=0A    directory.subscribe(sub=
scribeUrl.addParameter(CATEGORY_KEY,=0A            PROVIDERS_CATE=
GORY + <span class=3D"hljs-string">","</span> + CONFIGURATORS_CAT=
EGORY + <span class=3D"hljs-string">","</span> + ROUTERS_CATEGORY=
));=0A    <span class=3D"hljs-comment">// =BB=F1=C8=A1invoker=B2=A2=
=BB=BA=B4=E6</span>=0A    Invoker invoker =3D cluster.<span class=
=3D"hljs-keyword">join</span>(directory);=0A    ProviderConsumerR=
egTable.registerConsumer(invoker, url, subscribeUrl, directory);=0A=
    <span class=3D"hljs-keyword">return</span> invoker;=0A}</pre>=
<p>cluster.join(directory)=D5=E2=B8=F6=B4=FA=C2=EB=A3=AC=BB=E1=D6=
=B4=D0=D0=B0=FC=D7=B0=C0=E0MockClusterWrapper=B5=C4join=B7=BD=B7=A8=
=A3=BA</p><pre class=3D"hljs gradle" style=3D"background-image: i=
nitial; background-attachment: initial; background-size: initial;=
 background-origin: initial; background-clip: initial; background=
-position: initial; background-repeat: initial;"><span class=3D"h=
ljs-keyword">public</span> &lt;T&gt; Invoker&lt;T&gt; <span class=
=3D"hljs-keyword">join</span>(Directory&lt;T&gt; directory) <span=
 class=3D"hljs-keyword">throws</span> RpcException {=0A    <span=20=
class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyword"=
>new</span> MockClusterInvoker&lt;T&gt;(directory,=0A           =20=
<span class=3D"hljs-keyword">this</span>.cluster.<span class=3D"h=
ljs-keyword">join</span>(directory));=0A}</pre><p>=CB=F9=D2=D4inv=
oke=CA=C7MockClusterInvoker=A1=A3</p><h1 id=3D"item-4">=B4=B4=BD=A8=
=B4=FA=C0=ED</h1><p>=D4=DA<font color=3D"#e83e8c" face=3D"SFMono-=
Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, m=
onospace"><span style=3D"font-size: 0.875rem;">createProxy</span>=
</font>=B7=BD=B7=A8=D6=D0=A3=ACinvoker=B4=B4=BD=A8=CD=EA=C1=CB=A3=
=AC=BE=CD=BF=AA=CA=BC=B4=B4=BD=A8=B4=FA=C0=ED=A3=AC=B4=FA=C0=ED=C0=
=E0=D6=D0=A3=AC=CD=A8=B9=FDnewInstance=B5=C4=B9=B9=D4=EC=B2=CE=CA=
=FD=A3=AC=B0=D1InvokerInvocationHandler=B4=AB=C8=EB=B5=BD=B3=C9=D4=
=B1=B1=E4=C1=BF=D6=D0=A3=AC=BA=F3=C3=E6=B5=F7=D3=C3=B5=C4=B7=BD=B7=
=A8=A3=AC=BE=CD=CA=C7=CD=A8=B9=FD=D5=E2=B8=F6=C0=E0=B5=C4invoke=B7=
=BD=B7=A8=BD=F8=D0=D0=B7=B4=C9=E4=B5=C4=A1=A3</p><pre class=3D"hl=
js haxe" style=3D"background-image: initial; background-attachmen=
t: initial; background-size: initial; background-origin: initial;=
 background-clip: initial; background-position: initial; backgrou=
nd-repeat: initial;"><span class=3D"hljs-comment">// =B5=F7=D3=C3=
=CF=C2=C3=E6=B5=C4JavassistProxyFactory=B5=C4getProxy=B7=BD=B7=A8=
</span>=0A<span class=3D"hljs-keyword">return</span> (T) PROXY_FA=
CTORY.getProxy(invoker);=0A=0A<span class=3D"hljs-comment">// =D7=
=A2=D2=E2=B4=AB=C8=EB=B5=C4=CA=C7InvokerInvocationHandler</span>=0A=
<span class=3D"hljs-keyword">public</span> &lt;T&gt; T getProxy(I=
nvoker&lt;T&gt; invoker, Class&lt;?&gt;[] interfaces) {=0A    <sp=
an class=3D"hljs-keyword">return</span> (T) Proxy.getProxy(interf=
aces).<span class=3D"hljs-keyword">new</span><span class=3D"hljs-=
type">Instance</span>(<span class=3D"hljs-keyword">new</span> <sp=
an class=3D"hljs-type">InvokerInvocationHandler</span>(invoker));=
=0A}</pre><h1 id=3D"item-5">=D6=B4=D0=D0=B7=BD=B7=A8</h1><p>=B5=B1=
=D6=B4=D0=D0=B7=BD=B7=A8=B5=C4=CA=B1=BA=F2=A3=AC=BE=CD=BB=E1=D6=B4=
=D0=D0InvokerInvocationHandler=B5=C4invoke=B7=BD=B7=A8:</p><pre c=
lass=3D"hljs maxima" style=3D"background-image: initial; backgrou=
nd-attachment: initial; background-size: initial; background-orig=
in: initial; background-clip: initial; background-position: initi=
al; background-repeat: initial;"><font face=3D"SFMono-Regular, Me=
nlo, Monaco, Consolas, Liberation Mono, Courier New, monospace">p=
ublic Object invoke(Object proxy, Method </font><span class=3D"hl=
js-built_in">method</span>, Object[] <span class=3D"hljs-built_in=
">args</span>) throws Throwable {=0A    String methodName =3D <sp=
an class=3D"hljs-built_in">method</span>.getName();=0A    Class&l=
t;?&gt;[] parameterTypes =3D <span class=3D"hljs-built_in">method=
</span>.getParameterTypes();=0A    // Object=D6=B1=BD=D3=B5=F7=D3=
=C3=B7=B5=BB=D8=0A    <span class=3D"hljs-keyword">if</span> (<sp=
an class=3D"hljs-built_in">method</span>.getDeclaringClass() =3D=3D=
 Object.class) {=0A        <span class=3D"hljs-built_in">return</=
span> <span class=3D"hljs-built_in">method</span>.invoke(invoker,=
 <span class=3D"hljs-built_in">args</span>);=0A    }=0A    // toS=
tring=A1=A2hashCode=A1=A2equals=B7=B5=BB=D8=CF=EC=D3=A6=B5=C4invo=
ke=B7=BD=B7=A8=0A    <span class=3D"hljs-keyword">if</span> (<spa=
n class=3D"hljs-string">"toString"</span>.equals(methodName) &amp=
;&amp; parameterTypes.<span class=3D"hljs-built_in">length</span>=
 =3D=3D <span class=3D"hljs-number">0</span>) {=0A        <span c=
lass=3D"hljs-built_in">return</span> invoker.toString();=0A    }=0A=
    <span class=3D"hljs-keyword">if</span> (<span class=3D"hljs-s=
tring">"hashCode"</span>.equals(methodName) &amp;&amp; parameterT=
ypes.<span class=3D"hljs-built_in">length</span> =3D=3D <span cla=
ss=3D"hljs-number">0</span>) {=0A        <span class=3D"hljs-buil=
t_in">return</span> invoker.hashCode();=0A    }=0A    <span class=
=3D"hljs-keyword">if</span> (<span class=3D"hljs-string">"equals"=
</span>.equals(methodName) &amp;&amp; parameterTypes.<span class=3D=
"hljs-built_in">length</span> =3D=3D <span class=3D"hljs-number">=
1</span>) {=0A        <span class=3D"hljs-built_in">return</span>=
 invoker.equals(<span class=3D"hljs-built_in">args</span>[<span c=
lass=3D"hljs-number">0</span>]);=0A    }=0A    // =D5=E2=B8=F6inv=
oke=BE=CD=CA=C7MockClusterInvoker=A3=ACRpcInvocation=B4=AB=C8=EB=B7=
=BD=B7=A8=B2=CE=CA=FD=D0=C5=CF=A2=0A    <span class=3D"hljs-built=
_in">return</span> invoker.invoke(<span class=3D"hljs-built_in">n=
ew</span> RpcInvocation(<span class=3D"hljs-built_in">method</spa=
n>, <span class=3D"hljs-built_in">args</span>)).recreate();=0A}</=
pre><p>MockClusterInvoker#invoke</p><pre class=3D"hljs gradle" st=
yle=3D"background-image: initial; background-attachment: initial;=
 background-size: initial; background-origin: initial; background=
-clip: initial; background-position: initial; background-repeat:=20=
initial;"><span class=3D"hljs-keyword">public</span> Result invok=
e(Invocation invocation) <span class=3D"hljs-keyword">throws</spa=
n> RpcException {=0A    Result result =3D <span class=3D"hljs-key=
word">null</span>;=0A    <span class=3D"hljs-comment">// =CA=C7=B7=
=F1=C5=E4=D6=C3=C1=CBmock</span>=0A    String value =3D directory=
.getUrl().getMethodParameter(invocation.getMethodName(), MOCK_KEY=
, <span class=3D"hljs-keyword">Boolean</span>.<span class=3D"hljs=
-keyword">FALSE</span>.toString()).trim();=0A    =0A    <span cla=
ss=3D"hljs-comment">// =A1=A3=A1=A3=A1=A3=CA=A1=C2=D4=B2=BF=B7=D6=
=B4=FA=C2=EB=A1=A3=C8=E7=B9=FB=C7=BF=D6=C6=B5=F7=D3=C3mock=A3=AC=B5=
=F7=D3=C3=B1=BE=B5=D8=B5=C4mock</span>=0A    result =3D doMockInv=
oke(invocation, <span class=3D"hljs-keyword">null</span>);=0A   =20=
<span class=3D"hljs-comment">// =C3=BB=D3=D0mock=A3=AC=B5=F7=D3=C3=
FailoverClusterInvoker=B5=C4=B7=BD=B7=A8</span>=0A    result =3D=20=
<span class=3D"hljs-keyword">this</span>.invoker.invoke(invocatio=
n);=0A    <span class=3D"hljs-comment">// =A1=A3=A1=A3=A1=A3=CA=A1=
=C2=D4</span>=0A    <span class=3D"hljs-keyword">return</span> re=
sult;=0A}</pre><p>=D5=E2=B1=DF=BB=E1=B5=F7=D3=C3FailoverClusterIn=
voker=B5=C4=B8=B8=C0=E0AbstractClusterInvoker#invoke</p><pre clas=
s=3D"hljs lasso" style=3D"background-image: initial; background-a=
ttachment: initial; background-size: initial; background-origin:=20=
initial; background-clip: initial; background-position: initial;=20=
background-repeat: initial;"><span class=3D"hljs-keyword">public<=
/span> Result invoke(final Invocation invocation) throws RpcExcep=
tion {=0A    <span class=3D"hljs-comment">// =BC=EC=B2=E9=CA=C7=B7=
=F1=B1=BBDestroyed</span>=0A    checkWhetherDestroyed();=0A=0A  =20=
 <span class=3D"hljs-comment">// binding attachments into invocat=
ion.</span>=0A    <span class=3D"hljs-built_in">Map</span>&lt;<sp=
an class=3D"hljs-built_in">String</span>, <span class=3D"hljs-bui=
lt_in">String</span>&gt; contextAttachments =3D RpcContext.getCon=
text().getAttachments();=0A    <span class=3D"hljs-keyword">if</s=
pan> (contextAttachments !=3D <span class=3D"hljs-built_in">null<=
/span> &amp;&amp; contextAttachments.size() !=3D <span class=3D"h=
ljs-number">0</span>) {=0A        ((RpcInvocation) invocation).ad=
dAttachments(contextAttachments);=0A    }=0A    <span class=3D"hl=
js-comment">// =BB=F1=C8=A1Invoker=C1=D0=B1=ED</span>=0A    <span=
 class=3D"hljs-built_in">List</span>&lt;Invoker&lt;T&gt;&gt; invo=
kers =3D <span class=3D"hljs-built_in">list</span>(invocation);=0A=
    <span class=3D"hljs-comment">// =B8=BA=D4=D8=BE=F9=BA=E2</spa=
n>=0A    LoadBalance loadbalance =3D initLoadBalance(invokers, in=
vocation);=0A    RpcUtils.attachInvocationIdIfAsync(getUrl(), inv=
ocation);=0A    <span class=3D"hljs-comment">// FailoverClusterIn=
voker#doInvoke</span>=0A    <span class=3D"hljs-keyword">return</=
span> doInvoke(invocation, invokers, loadbalance);=0A}</pre><p>Fa=
iloverClusterInvoker#doInvoke<br>=CA=A7=B0=DC=D6=D8=CA=D4=A1=A2=B8=
=BA=D4=D8=BE=F9=BA=E2=D5=E2=C0=EF=C9=E8=D6=C3</p><pre class=3D"hl=
js dart" style=3D"background-image: initial; background-attachmen=
t: initial; background-size: initial; background-origin: initial;=
 background-clip: initial; background-position: initial; backgrou=
nd-repeat: initial;"><font face=3D"SFMono-Regular, Menlo, Monaco,=
 Consolas, Liberation Mono, Courier New, monospace">public Result=
 doInvoke(Invocation invocation, </font><span class=3D"hljs-keywo=
rd">final</span> <span class=3D"hljs-built_in">List</span>&lt;Inv=
oker&lt;T&gt;&gt; invokers, LoadBalance loadbalance) throws RpcEx=
ception {=0A    <span class=3D"hljs-built_in">List</span>&lt;Invo=
ker&lt;T&gt;&gt; copyInvokers =3D invokers;=0A    <span class=3D"=
hljs-comment">// =BC=EC=B2=E9invokers=CA=C7=B7=F1=CE=AA=BF=D5</sp=
an>=0A    checkInvokers(copyInvokers, invocation);=0A    <span cl=
ass=3D"hljs-comment">// =BB=F1=C8=A1=B7=BD=B7=A8=C3=FB</span>=0A=20=
   <span class=3D"hljs-built_in">String</span> methodName =3D Rpc=
Utils.getMethodName(invocation);=0A    <span class=3D"hljs-commen=
t">// =CA=A7=B0=DC=D6=D8=CA=D4=B4=CE=CA=FD</span>=0A    <span cla=
ss=3D"hljs-built_in">int</span> len =3D getUrl().getMethodParamet=
er(methodName, RETRIES_KEY, DEFAULT_RETRIES) + <span class=3D"hlj=
s-number">1</span>;=0A    <span class=3D"hljs-keyword">if</span>=20=
(len &lt;=3D <span class=3D"hljs-number">0</span>) {=0A        le=
n =3D <span class=3D"hljs-number">1</span>;=0A    }=0A    <span c=
lass=3D"hljs-comment">// retry loop.</span>=0A    <span class=3D"=
hljs-comment">// =D7=EE=BA=F3=D2=BB=B4=CEexception</span>=0A    R=
pcException le =3D <span class=3D"hljs-keyword">null</span>; <spa=
n class=3D"hljs-comment">// last exception.</span>=0A    <span cl=
ass=3D"hljs-built_in">List</span>&lt;Invoker&lt;T&gt;&gt; invoked=
 =3D <span class=3D"hljs-keyword">new</span> ArrayList&lt;Invoker=
&lt;T&gt;&gt;(copyInvokers.size()); <span class=3D"hljs-comment">=
// invoked invokers.</span>=0A    <span class=3D"hljs-built_in">S=
et</span>&lt;<span class=3D"hljs-built_in">String</span>&gt; prov=
iders =3D <span class=3D"hljs-keyword">new</span> HashSet&lt;<spa=
n class=3D"hljs-built_in">String</span>&gt;(len);=0A    <span cla=
ss=3D"hljs-keyword">for</span> (<span class=3D"hljs-built_in">int=
</span> i =3D <span class=3D"hljs-number">0</span>; i &lt; len; i=
++) {=0A        <span class=3D"hljs-comment">//Reselect before re=
try to avoid a change of candidate `invokers`.</span>=0A        <=
span class=3D"hljs-comment">//<span class=3D"hljs-doctag">NOTE:</=
span> if `invokers` changed, then `invoked` also lose accuracy.</=
span>=0A        <span class=3D"hljs-keyword">if</span> (i &gt; <s=
pan class=3D"hljs-number">0</span>) {=0A            <span class=3D=
"hljs-comment">// =BC=EC=B2=E9=CA=C7=B7=F1Destroyed</span>=0A   =20=
        checkWhetherDestroyed();=0A            <span class=3D"hlj=
s-comment">// =BB=F1=C8=A1Invokers </span>=0A            copyInvo=
kers =3D list(invocation);=0A            <span class=3D"hljs-comm=
ent">// check again =BC=EC=B2=E9invokers=CA=C7=B7=F1=CE=AA=BF=D5<=
/span>=0A            checkInvokers(copyInvokers, invocation);=0A=20=
       }=0A        Invoker&lt;T&gt; invoker =3D select(loadbalanc=
e, invocation, copyInvokers, invoked);=0A        invoked.add(invo=
ker);=0A        RpcContext.getContext().setInvokers((<span class=3D=
"hljs-built_in">List</span>) invoked);=0A        <span class=3D"h=
ljs-keyword">try</span> {=0A            <span class=3D"hljs-comme=
nt">// InvokerWrapper#invoke</span>=0A            Result result =3D=
 invoker.invoke(invocation);=0A            <span class=3D"hljs-ke=
yword">if</span> (le !=3D <span class=3D"hljs-keyword">null</span=
> &amp;&amp; logger.isWarnEnabled()) {=0A                <span cl=
ass=3D"hljs-comment">// =A1=A3=A1=A3=A1=A3=A1=A3</span>=0A      =20=
     }=0A            <span class=3D"hljs-keyword">return</span> r=
esult;=0A        } <span class=3D"hljs-keyword">catch</span> (Rpc=
Exception e) {=0A            <span class=3D"hljs-keyword">if</spa=
n> (e.isBiz()) { <span class=3D"hljs-comment">// biz exception.</=
span>=0A                <span class=3D"hljs-keyword">throw</span>=
 e;=0A            }=0A            le =3D e;=0A        } <span cla=
ss=3D"hljs-keyword">catch</span> (Throwable e) {=0A            le=
 =3D <span class=3D"hljs-keyword">new</span> RpcException(e.getMe=
ssage(), e);=0A        } <span class=3D"hljs-keyword">finally</sp=
an> {=0A            providers.add(invoker.getUrl().getAddress());=
=0A        }=0A    }=0A    <span class=3D"hljs-comment">// =A1=A3=
=A1=A3=A1=A3=A1=A3</span>=0A}</pre><p>InvokerWrapper#invoke=A3=BA=
<br>=D5=E2=B8=F6invoker=CA=C7ProtocolFilterWrapper=A3=AC=D4=DA=D5=
=E2=B8=F6invoke=D6=D0=A3=AC=BB=E1=B5=F7=D3=C3ProtocolFilterWrappe=
r&amp;CallbackRegistrationInvoker#invoke--&gt;ConsumerContextFilt=
er#invoke--&gt;FutureFilter#invoke--&gt;MonitorFilter#invoke--&gt=
;ListenerInvokerWrapper#invoke--&gt;AsyncToSyncInvoker#invoke--&g=
t;DubboInvoker#invoke</p><pre class=3D"hljs aspectj" style=3D"bac=
kground-image: initial; background-attachment: initial; backgroun=
d-size: initial; background-origin: initial; background-clip: ini=
tial; background-position: initial; background-repeat: initial;">=
<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-fu=
nction">Result <span class=3D"hljs-title">invoke</span><span clas=
s=3D"hljs-params">(Invocation invocation)</span> <span class=3D"h=
ljs-keyword">throws</span> RpcException </span>{=0A    <span clas=
s=3D"hljs-function"><span class=3D"hljs-keyword">return</span> in=
voker.<span class=3D"hljs-title">invoke</span><span class=3D"hljs=
-params">(invocation)</span></span>;=0A}</pre><p>ConsumerContextF=
ilter#invoke=A3=BA<br>=D4=DA=C9=CF=CF=C2=CE=C4=C9=E8=D6=C3invoker=
=A1=A2invocation=A1=A2LocalAddress=A1=A2RemoteAddress=A1=A2Remote=
ApplicationName=A1=A2Attachment=A3=AC=D4=D9=B0=D1invoker=C9=E8=D6=
=C3=B5=BDinvocation=D6=D0=A3=AC=D6=B4=D0=D0=CD=EA=CF=C2=D2=BB=B8=F6=
invoke=BA=F3=A3=AC=D4=D9=C7=E5=BF=D5=C9=CF=CF=C2=CE=C4=D0=C5=CF=A2=
=A1=A3</p><pre class=3D"hljs aspectj" style=3D"background-image:=20=
initial; background-attachment: initial; background-size: initial=
; background-origin: initial; background-clip: initial; backgroun=
d-position: initial; background-repeat: initial;"><span class=3D"=
hljs-keyword">public</span> <span class=3D"hljs-function">Result=20=
<span class=3D"hljs-title">invoke</span><span class=3D"hljs-param=
s">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> <span=
 class=3D"hljs-keyword">throws</span> RpcException </span>{=0A  =20=
 RpcContext.getContext()=0A            .setInvoker(invoker)=0A  =20=
         .setInvocation(invocation)=0A            .setLocalAddres=
s(NetUtils.getLocalHost(), <span class=3D"hljs-number">0</span>)=0A=
            .setRemoteAddress(invoker.getUrl().getHost(), invoker=
.getUrl().getPort())=0A            .setRemoteApplicationName(invo=
ker.getUrl().getParameter(REMOTE_APPLICATION_KEY))=0A           =20=
.setAttachment(REMOTE_APPLICATION_KEY, invoker.getUrl().getParame=
ter(APPLICATION_KEY));=0A    <span class=3D"hljs-keyword">if</spa=
n> (invocation <span class=3D"hljs-keyword">instanceof</span> Rpc=
Invocation) {=0A        ((RpcInvocation) invocation).setInvoker(i=
nvoker);=0A    }=0A    <span class=3D"hljs-keyword">try</span> {=0A=
        RpcContext.removeServerContext();=0A        <span class=3D=
"hljs-function"><span class=3D"hljs-keyword">return</span> invoke=
r.<span class=3D"hljs-title">invoke</span><span class=3D"hljs-par=
ams">(invocation)</span></span>;=0A    } <span class=3D"hljs-keyw=
ord">finally</span> {=0A        RpcContext.removeContext();=0A  =20=
 }=0A}</pre><p>FutureFilter#invoke=A3=BA<br>=D6=F7=D2=AA=CA=C7=C9=
=E8=D6=C3=BB=D8=B5=F7=B5=C4</p><pre class=3D"hljs aspectj" style=3D=
"background-image: initial; background-attachment: initial; backg=
round-size: initial; background-origin: initial; background-clip:=
 initial; background-position: initial; background-repeat: initia=
l;"><span class=3D"hljs-keyword">public</span> <span class=3D"hlj=
s-function">Result <span class=3D"hljs-title">invoke</span><span=20=
class=3D"hljs-params">(<span class=3D"hljs-keyword">final</span>=20=
Invoker&lt;?&gt; invoker, <span class=3D"hljs-keyword">final</spa=
n> Invocation invocation)</span> <span class=3D"hljs-keyword">thr=
ows</span> RpcException </span>{=0A    fireInvokeCallback(invoker=
, invocation);=0A    <span class=3D"hljs-comment">// need to conf=
igure if there's return value before the invocation in order to h=
elp invoker to judge if it's</span>=0A    <span class=3D"hljs-com=
ment">// necessary to return future.</span>=0A    <span class=3D"=
hljs-function"><span class=3D"hljs-keyword">return</span> invoker=
.<span class=3D"hljs-title">invoke</span><span class=3D"hljs-para=
ms">(invocation)</span></span>;=0A}</pre><p>MonitorFilter#invoke=A3=
=BA<br>=BD=D3=BF=DA=B6=D4=D3=A6=B5=C4=B7=BD=B7=A8=B5=F7=D3=C3=B5=C4=
=B4=CE=CA=FD=A1=A3<br>key=CE=AA=A3=BA=BD=D3=BF=DA=C8=AB=CF=DE=B6=A8=
=C3=FC.=B7=BD=B7=A8<br>value=CA=C7AtomicInteger=C0=E0=D0=CD=A3=AC=
=BC=C7=C2=BC=B5=F7=D3=C3=B4=CE=CA=FD</p><pre class=3D"hljs proces=
sing" style=3D"background-image: initial; background-attachment:=20=
initial; background-size: initial; background-origin: initial; ba=
ckground-clip: initial; background-position: initial; background-=
repeat: initial;"><span class=3D"hljs-keyword">public</span> Resu=
lt invoke(Invoker&lt;?&gt; invoker, Invocation invocation) <span=20=
class=3D"hljs-keyword">throws</span> RpcException {=0A    <span c=
lass=3D"hljs-keyword">if</span> (invoker.getUrl().hasParameter(MO=
NITOR_KEY)) {=0A        invocation.setAttachment(MONITOR_FILTER_S=
TART_TIME, <span class=3D"hljs-keyword">String</span>.valueOf(Sys=
tem.currentTimeMillis()));=0A        getConcurrent(invoker, invoc=
ation).incrementAndGet(); <span class=3D"hljs-comment">// count u=
p</span>=0A    }=0A    <span class=3D"hljs-keyword">return</span>=
 invoker.invoke(invocation); <span class=3D"hljs-comment">// proc=
eed invocation chain</span>=0A}=0A=0A<span class=3D"hljs-comment"=
>// concurrent counter</span>=0A<span class=3D"hljs-keyword">priv=
ate</span> AtomicInteger getConcurrent(Invoker&lt;?&gt; invoker,=20=
Invocation invocation) {=0A    <span class=3D"hljs-keyword">Strin=
g</span> <span class=3D"hljs-built_in">key</span> =3D invoker.get=
Interface().getName() + <span class=3D"hljs-string">"."</span> +=20=
invocation.getMethodName();=0A    AtomicInteger concurrent =3D co=
ncurrents.<span class=3D"hljs-built_in">get</span>(<span class=3D=
"hljs-built_in">key</span>);=0A    <span class=3D"hljs-keyword">i=
f</span> (concurrent =3D=3D <span class=3D"hljs-keyword">null</sp=
an>) {=0A        concurrents.putIfAbsent(<span class=3D"hljs-buil=
t_in">key</span>, <span class=3D"hljs-keyword">new</span> AtomicI=
nteger());=0A        concurrent =3D concurrents.<span class=3D"hl=
js-built_in">get</span>(<span class=3D"hljs-built_in">key</span>)=
;=0A    }=0A    <span class=3D"hljs-keyword">return</span> concur=
rent;=0A}</pre><p>ListenerInvokerWrapper#invoke=A3=BA<br>=D6=B1=BD=
=D3=B5=F7=D3=C3AsyncToSyncInvoker#invoke</p><pre class=3D"hljs as=
pectj" style=3D"background-image: initial; background-attachment:=
 initial; background-size: initial; background-origin: initial; b=
ackground-clip: initial; background-position: initial; background=
-repeat: initial;"><span class=3D"hljs-keyword">public</span> <sp=
an class=3D"hljs-function">Result <span class=3D"hljs-title">invo=
ke</span><span class=3D"hljs-params">(Invocation invocation)</spa=
n> <span class=3D"hljs-keyword">throws</span> RpcException </span=
>{=0A    <span class=3D"hljs-function"><span class=3D"hljs-keywor=
d">return</span> invoker.<span class=3D"hljs-title">invoke</span>=
<span class=3D"hljs-params">(invocation)</span></span>;=0A}</pre>=
<p>AsyncToSyncInvoker#invoke=A3=BA<br>=C8=E7=B9=FB=CA=C7=CD=AC=B2=
=BD=A3=AC=BE=CD=D7=E8=C8=FB=B5=C8=B4=FD=B7=B5=BB=D8=A3=AC=C8=E7=B9=
=FB=CA=C7=D2=EC=B2=BD=A3=AC=BE=CD=D6=B1=BD=D3=B7=B5=BB=D8</p><pre=
 class=3D"hljs haxe" style=3D"background-image: initial; backgrou=
nd-attachment: initial; background-size: initial; background-orig=
in: initial; background-clip: initial; background-position: initi=
al; background-repeat: initial;"><span class=3D"hljs-keyword">pub=
lic</span> Result invoke(Invocation invocation) throws RpcExcepti=
on {=0A    Result asyncResult =3D invoker.invoke(invocation);=0A=0A=
    <span class=3D"hljs-keyword">try</span> {=0A        <span cla=
ss=3D"hljs-comment">// =CD=AC=B2=BD=BE=CD=D7=E8=C8=FB=B5=C8=B4=FD=
=B7=B5=BB=D8</span>=0A        <span class=3D"hljs-keyword">if</sp=
an> (InvokeMode.SYNC =3D=3D ((RpcInvocation) invocation).getInvok=
eMode()) {=0A            asyncResult.<span class=3D"hljs-keyword"=
>get</span>(Integer.MAX_VALUE, TimeUnit.MILLISECONDS);=0A       =20=
}=0A    } <span class=3D"hljs-keyword">catch</span> (InterruptedE=
xception e) {=0A        <span class=3D"hljs-keyword">throw</span>=
 <span class=3D"hljs-keyword">new</span> <span class=3D"hljs-type=
">RpcException</span>(<span class=3D"hljs-string">"Interrupted un=
expectedly while waiting for remoting result to return!  method:=20=
"</span> + invocation.getMethodName() + <span class=3D"hljs-strin=
g">", provider: "</span> + getUrl() + <span class=3D"hljs-string"=
>", cause: "</span> + e.getMessage(), e);=0A    } <span class=3D"=
hljs-keyword">catch</span> (ExecutionException e) {=0A        Thr=
owable t =3D e.getCause();=0A        <span class=3D"hljs-keyword"=
>if</span> (t instanceof TimeoutException) {=0A            <span=20=
class=3D"hljs-keyword">throw</span> <span class=3D"hljs-keyword">=
new</span> <span class=3D"hljs-type">RpcException</span>(RpcExcep=
tion.TIMEOUT_EXCEPTION, <span class=3D"hljs-string">"Invoke remot=
e method timeout. method: "</span> + invocation.getMethodName() +=
 <span class=3D"hljs-string">", provider: "</span> + getUrl() + <=
span class=3D"hljs-string">", cause: "</span> + e.getMessage(), e=
);=0A        } <span class=3D"hljs-keyword">else</span> <span cla=
ss=3D"hljs-keyword">if</span> (t instanceof RemotingException) {=0A=
            <span class=3D"hljs-keyword">throw</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-type">RpcExcepti=
on</span>(RpcException.NETWORK_EXCEPTION, <span class=3D"hljs-str=
ing">"Failed to invoke remote method: "</span> + invocation.getMe=
thodName() + <span class=3D"hljs-string">", provider: "</span> +=20=
getUrl() + <span class=3D"hljs-string">", cause: "</span> + e.get=
Message(), e);=0A        }=0A    } <span class=3D"hljs-keyword">c=
atch</span> (Throwable e) {=0A        <span class=3D"hljs-keyword=
">throw</span> <span class=3D"hljs-keyword">new</span> <span clas=
s=3D"hljs-type">RpcException</span>(e.getMessage(), e);=0A    }=0A=
    <span class=3D"hljs-keyword">return</span> asyncResult;=0A}</=
pre><p>AbstractInvoker#invoke</p><pre class=3D"hljs haxe" style=3D=
"background-image: initial; background-attachment: initial; backg=
round-size: initial; background-origin: initial; background-clip:=
 initial; background-position: initial; background-repeat: initia=
l;"><span class=3D"hljs-keyword">public</span> Result invoke(Invo=
cation inv) throws RpcException {=0A    <span class=3D"hljs-comme=
nt">// if invoker is destroyed due to address refresh from regist=
ry, let's allow the current invoke to proceed</span>=0A    <span=20=
class=3D"hljs-keyword">if</span> (destroyed.<span class=3D"hljs-k=
eyword">get</span>()) {=0A        logger.warn(<span class=3D"hljs=
-string">"Invoker for service "</span> + <span class=3D"hljs-buil=
t_in">this</span> + <span class=3D"hljs-string">" on consumer "</=
span> + NetUtils.getLocalHost() + <span class=3D"hljs-string">" i=
s destroyed, "</span>=0A                + <span class=3D"hljs-str=
ing">", dubbo version is "</span> + Version.getVersion() + <span=20=
class=3D"hljs-string">", this invoker should not be used any long=
er"</span>);=0A    }=0A    RpcInvocation invocation =3D (RpcInvoc=
ation) inv;=0A    <span class=3D"hljs-comment">// =B4=AB=C8=EB=B5=
=B1=C7=B0=B5=C4dubboInvoker</span>=0A    invocation.setInvoker(<s=
pan class=3D"hljs-built_in">this</span>);=0A    <span class=3D"hl=
js-keyword">if</span> (CollectionUtils.isNotEmptyMap(attachment))=
 {=0A        invocation.addAttachmentsIfAbsent(attachment);=0A  =20=
 }=0A    Map&lt;<span class=3D"hljs-keyword">String</span>, <span=
 class=3D"hljs-keyword">String</span>&gt; contextAttachments =3D=20=
RpcContext.getContext().getAttachments();=0A    <span class=3D"hl=
js-keyword">if</span> (CollectionUtils.isNotEmptyMap(contextAttac=
hments)) {=0A        invocation.addAttachments(contextAttachments=
);=0A    }=0A    <span class=3D"hljs-comment">// =B0=FC=C0=A8FUTU=
RE=A1=A2ASYNC=A1=A2SYNC</span>=0A    invocation.setInvokeMode(Rpc=
Utils.getInvokeMode(url, invocation));=0A    <span class=3D"hljs-=
comment">// Async=CA=B1=C9=E8=D6=C3ID</span>=0A    RpcUtils.attac=
hInvocationIdIfAsync(getUrl(), invocation);=0A=0A    <span class=3D=
"hljs-keyword">try</span> {=0A        <span class=3D"hljs-keyword=
">return</span> doInvoke(invocation);=0A    } <span class=3D"hljs=
-keyword">catch</span> (InvocationTargetException e) { <span clas=
s=3D"hljs-comment">// biz exception</span>=0A        Throwable te=
 =3D e.getTargetException();=0A        <span class=3D"hljs-keywor=
d">if</span> (te =3D=3D <span class=3D"hljs-literal">null</span>)=
 {=0A            <span class=3D"hljs-keyword">return</span> Async=
RpcResult.<span class=3D"hljs-keyword">new</span><span class=3D"h=
ljs-type">DefaultAsyncResult</span>(<span class=3D"hljs-literal">=
null</span>, e, invocation);=0A        } <span class=3D"hljs-keyw=
ord">else</span> {=0A            <span class=3D"hljs-keyword">if<=
/span> (te instanceof RpcException) {=0A                ((RpcExce=
ption) te).setCode(RpcException.BIZ_EXCEPTION);=0A            }=0A=
            <span class=3D"hljs-keyword">return</span> AsyncRpcRe=
sult.<span class=3D"hljs-keyword">new</span><span class=3D"hljs-t=
ype">DefaultAsyncResult</span>(<span class=3D"hljs-literal">null<=
/span>, te, invocation);=0A        }=0A    } <span class=3D"hljs-=
keyword">catch</span> (RpcException e) {=0A        <span class=3D=
"hljs-keyword">if</span> (e.isBiz()) {=0A            <span class=3D=
"hljs-keyword">return</span> AsyncRpcResult.<span class=3D"hljs-k=
eyword">new</span><span class=3D"hljs-type">DefaultAsyncResult</s=
pan>(<span class=3D"hljs-literal">null</span>, e, invocation);=0A=
        } <span class=3D"hljs-keyword">else</span> {=0A         =20=
  <span class=3D"hljs-keyword">throw</span> e;=0A        }=0A   =20=
} <span class=3D"hljs-keyword">catch</span> (Throwable e) {=0A  =20=
     <span class=3D"hljs-keyword">return</span> AsyncRpcResult.<s=
pan class=3D"hljs-keyword">new</span><span class=3D"hljs-type">De=
faultAsyncResult</span>(<span class=3D"hljs-literal">null</span>,=
 e, invocation);=0A    }=0A}</pre><p>DubboInvoker#doInvoke<br>=D4=
=B6=B3=CC=B5=F7=D3=C3=BD=D3=BF=DA=A3=AC=BB=F1=C8=A1=CA=FD=BE=DD</=
p><pre class=3D"hljs aspectj" style=3D"background-image: initial;=
 background-attachment: initial; background-size: initial; backgr=
ound-origin: initial; background-clip: initial; background-positi=
on: initial; background-repeat: initial;"><span class=3D"hljs-key=
word">protected</span> <span class=3D"hljs-function">Result <span=
 class=3D"hljs-title">doInvoke</span><span class=3D"hljs-params">=
(<span class=3D"hljs-keyword">final</span> Invocation invocation)=
</span> <span class=3D"hljs-keyword">throws</span> Throwable </sp=
an>{=0A    <span class=3D"hljs-comment">// =B8=F8inv=C9=E8=D6=C3=C2=
=B7=BE=B6=BA=CD=B0=E6=B1=BE=D0=C5=CF=A2</span>=0A    RpcInvocatio=
n inv =3D (RpcInvocation) invocation;=0A    <span class=3D"hljs-k=
eyword">final</span> String methodName =3D RpcUtils.getMethodName=
(invocation);=0A    inv.setAttachment(PATH_KEY, getUrl().getPath(=
));=0A    inv.setAttachment(VERSION_KEY, version);=0A    <span cl=
ass=3D"hljs-comment">// =BB=F1=C8=A1=D2=BB=B8=F6ExchangeClient</s=
pan>=0A    ExchangeClient currentClient;=0A    <span class=3D"hlj=
s-keyword">if</span> (clients.length =3D=3D <span class=3D"hljs-n=
umber">1</span>) {=0A        currentClient =3D clients[<span clas=
s=3D"hljs-number">0</span>];=0A    } <span class=3D"hljs-keyword"=
>else</span> {=0A        currentClient =3D clients[index.getAndIn=
crement() % clients.length];=0A    }=0A    <span class=3D"hljs-ke=
yword">try</span> {=0A        <span class=3D"hljs-comment">// =CA=
=C7=B7=F1=CE=AAOneway</span>=0A        <span class=3D"hljs-keywor=
d">boolean</span> isOneway =3D RpcUtils.isOneway(getUrl(), invoca=
tion);=0A        <span class=3D"hljs-keyword">int</span> timeout=20=
=3D getUrl().getMethodPositiveParameter(methodName, TIMEOUT_KEY,=20=
DEFAULT_TIMEOUT);=0A        <span class=3D"hljs-keyword">if</span=
> (isOneway) {=0A            <span class=3D"hljs-keyword">boolean=
</span> isSent =3D getUrl().getMethodParameter(methodName, Consta=
nts.SENT_KEY, <span class=3D"hljs-keyword">false</span>);=0A    =20=
       currentClient.send(inv, isSent);=0A            <span class=
=3D"hljs-function"><span class=3D"hljs-keyword">return</span> Asy=
ncRpcResult.<span class=3D"hljs-title">newDefaultAsyncResult</spa=
n><span class=3D"hljs-params">(invocation)</span></span>;=0A    =20=
   } <span class=3D"hljs-keyword">else</span> {=0A            Asy=
ncRpcResult asyncRpcResult =3D <span class=3D"hljs-keyword">new</=
span> AsyncRpcResult(inv);=0A            CompletableFuture&lt;Obj=
ect&gt; responseFuture =3D currentClient.request(inv, timeout);=0A=
            asyncRpcResult.subscribeTo(responseFuture);=0A      =20=
     <span class=3D"hljs-comment">// save for 2.6.x compatibility=
, for example, TraceFilter in Zipkin uses com.alibaba.xxx.FutureA=
dapter</span>=0A            FutureContext.getContext().setCompati=
bleFuture(responseFuture);=0A            <span class=3D"hljs-keyw=
ord">return</span> asyncRpcResult;=0A        }=0A    } <span clas=
s=3D"hljs-keyword">catch</span> (TimeoutException e) {=0A       =20=
<span class=3D"hljs-keyword">throw</span> <span class=3D"hljs-key=
word">new</span> RpcException(RpcException.TIMEOUT_EXCEPTION, <sp=
an class=3D"hljs-string">"Invoke remote method timeout. method: "=
</span> + invocation.getMethodName() + <span class=3D"hljs-string=
">", provider: "</span> + getUrl() + <span class=3D"hljs-string">=
", cause: "</span> + e.getMessage(), e);=0A    } <span class=3D"h=
ljs-keyword">catch</span> (RemotingException e) {=0A        <span=
 class=3D"hljs-keyword">throw</span> <span class=3D"hljs-keyword"=
>new</span> RpcException(RpcException.NETWORK_EXCEPTION, <span cl=
ass=3D"hljs-string">"Failed to invoke remote method: "</span> + i=
nvocation.getMethodName() + <span class=3D"hljs-string">", provid=
er: "</span> + getUrl() + <span class=3D"hljs-string">", cause: "=
</span> + e.getMessage(), e);=0A    }=0A}</pre></article><div cla=
ss=3D"col-6 text-secondary" id=3D"sf-article_metas">=D4=C4=B6=C1=20=
104=B7=A2=B2=BC=D3=DA 1=D4=C22=C8=D5</div><div class=3D"text-seco=
ndary font-size-14 mb-5 d-flex justify-content-between row"><br><=
/div><div>=C0=B4=D4=B4=A3=BA&nbsp;<a href=3D"https://segmentfault=
.com/a/1190000021463569?utm_source=3Dtag-newest">https://segmentf=
ault.com/a/1190000021463569?utm_source=3Dtag-newest</a></div></bo=
dy></html>=0A=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000494437.385--

------=_Next_Part_0001483311.361
Content-Type: image/png;
	name="0.006552868191187722.png"
Content-Transfer-Encoding: base64
Content-ID: <0.006552868191187722.png>
Content-Location: 0.006552868191187722.png

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEsElEQVRYR8WWa0wUVxiGvzOX3dmZWVwWRFhgFdRiSyrSmpJW0tj2h7dWDWlsgwEDGC2tphfbpiZN1PSHNNE2MdFqRQSq1KRNlLY0xF4tbYJRY41oXUyKArLgshfZ2dndmTPnNLsJDbG2y65UJpk/853vfZ/znXcmg2CaLzRV/qfslvy1vvBAsnpTBtCRa1tkM6etWfJn/65kIKYMoNOZXSwKwp6ne2+smBaAHx6avQcQzXrO1V89LQBni5zU6/EVr/QpVx84wLnC2QFZDX7/8LDvxWTMY2vvKwO9Er9IkiznEcu5HG5fcUzQJfElJtG6tMDj2wcANBFQygC9M+WtmRbTPkWP/OZ0q+U9aTAvzZJxglD2jzm3b1clMh6vpwTgzrB+aJb4d5WwctTp0WpvZsk7BE7aqRD0/Nzh4Y7Jmqd0BN/l5VWWMvh4NKqczB1RKobsljdk2f6xxxtYODcUupyMeUoAv8yf350XCZUVDgzFp9eXmxEQooYrZzRQlqx5SgA/zys4LWNcvPjGQG5M4Px8J50VCATyPWPpDwSgMy/7iRzZcrbkWl98At2FjnMFOLpYDQWbCrxaXbIQKYXQ5Zix32sWc5/qc6+9kG5a6JCkS2ZgoFul+St9vsFkIFICiBn0OLLaJU39vGBUOTE0U/xAMovvXwBu6bODw2f+V4BHV72XfrmjwR8zGcywbs/zBneP2IQqxHHbs0aVRyaaZ2w49BqDSMjTXN/8b1CTm8Cmjo9YoHmIGhdxSPkS2tZfnyjYlr9gW+XAtb0Tnzle3l2qCNkcFm07hUiw1NdU7bgXREKAjM3H9KDk5AxVbTSI3gscCslYpY4xN5NJIoKGDbuJN1kpRk6VYex+yRKgNNQ40LLtq3FD0ysnqYzVzb7G9Z/eDZEQINYgbjy+ErO2Eg2hWQCGHXjWAlgLA8OowDABoMwtiOAr0Lj6x3vt0vpmJyV+d2moueb3lABiTZa646+HTTYPfLKqLZmQ8Vs6bgtRX0vwcNU7KR3BeFP6ppauMXlOuRHW+hEyRlmgKgYKDMdaCSFZgGgOQwEIRjvh4IpdUN9Zw+JwpVkP7lObq7++vxBO6Ga2/rSF6Fohw1GZUIMAZRVAqB+wdgYOvXApvnR1uxUywQFNa1yJpjWpDPwt8urpo6AEdkDruv5/CNe2F03GMOUMxBvrO/tF2ZofiapAdOwHDmmgU1EQBCvH8kB0OqL63U/CZ+v6Eu18vP7fE6jvbACgMiDmKhxYdiDetOmbZ8DELQeKnIB1EyA2CgA3AUMXNK749m7j9Noj5f6mul+TykB6dWu5bs3sCgHrovuXLZjsbiauE2uaHhNZdu0dZC3SD1e8lBSAWHEoJ81uaYggpkTl7HM0YAkAGgMEfgCkIAQhSgDHf/koMQGLZECGBQDxgGgQSOyGXtCiB+FIRQ+/8dQxSbuzN9C64WJqGahqlYC3LeFkUQdMeMogKxhgNigmZob1RanmhZA6HBefIZYBJo8jhl9Eo8Ys4HmPjL1vK4crr9zfd6D2SDkHUA6AbICQAJTwlBAzA1RgTJzJQAyiCIUJpSOGoV/X7gQ7wl+8dSvR8SX3GiZSS6E+7QB/AVIm2jC53pzAAAAAAElFTkSuQmCC

------=_Next_Part_0001483311.361--

