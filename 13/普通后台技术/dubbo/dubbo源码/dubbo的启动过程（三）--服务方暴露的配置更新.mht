From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?ZHViYm+1xMb0tq+5/bPMo6jI/aOpLS23/s7xt72xqcK2tcTF5NbDuPzQwg==?=
Date: Date: Fri, 23 Jul 2021 05:55:47 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001482750.551"

This is a multi-part message in MIME format.

------=_Next_Part_0001482750.551
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000494250.476"


------=_Next_Part_0000494250.476
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000494250.476
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A<titl=
e>dubbo=B5=C4=C6=F4=B6=AF=B9=FD=B3=CC=A3=A8=C8=FD=A3=A9--=B7=FE=CE=
=F1=B7=BD=B1=A9=C2=B6=B5=C4=C5=E4=D6=C3=B8=FC=D0=C2</title>=0A  =20=
 =0A<style id=3D"wiz_custom_css">html, .wiz-editor-body {font-siz=
e: 12pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans=
 GB', '=E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91', 'Microsoft YaHei UI=
', SimSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 a=
uto;padding: 20px 16px;padding: 1.25rem 1rem;}.wiz-editor-body h1=
,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz=
-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.=
25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h=
1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-si=
ze:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;fon=
t-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.1=
7rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-ed=
itor-body h6 {font-size:12pt;font-size:1rem;color: #777777;margin=
: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-bod=
y ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li=20=
{margin:8px 0;}.wiz-editor-body blockquote,.wiz-editor-body table=
,.wiz-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-e=
ditor-body .CodeMirror pre {margin:0;}.wiz-editor-body ul,.wiz-ed=
itor-body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-bo=
dy ol.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-=
body ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-e=
ditor-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}=
.wiz-editor-body blockquote {padding: 0 12px;}.wiz-editor-body bl=
ockquote > :first-child {margin-top:0;}.wiz-editor-body blockquot=
e > :last-child {margin-bottom:0;}.wiz-editor-body img {border:0;=
max-width:100%;height:auto !important;margin:2px 0;}.wiz-editor-b=
ody table {border-collapse:collapse;border:1px solid #bbbbbb;}.wi=
z-editor-body td,.wiz-editor-body th {padding:4px 8px;border-coll=
apse:collapse;border:1px solid #bbbbbb;min-height:28px;word-break=
:break-word;box-sizing: border-box;}.wiz-hide {display:none !impo=
rtant;}</style></head>=0A=0A<body class=3D"wiz-editor-body"  spel=
lcheck=3D"false"><div></div><h1 class=3D"h2 mb-3" id=3D"sf-articl=
e_title"><a class=3D"text-body" href=3D"https://segmentfault.com/=
a/1190000021431522">dubbo=B5=C4=C6=F4=B6=AF=B9=FD=B3=CC=A3=A8=C8=FD=
=A3=A9--=B7=FE=CE=F1=B7=BD=B1=A9=C2=B6=B5=C4=C5=E4=D6=C3=B8=FC=D0=
=C2</a></h1><div class=3D"m-n1"><a class=3D"m-1 badge-tag" href=3D=
"https://segmentfault.com/t/dubbo" data-toggle=3D"popover" data-p=
lacement=3D"top" data-original-title=3D"dubbo" data-id=3D"1040000=
000257318">dubbo</a><a class=3D"m-1 badge-tag" href=3D"https://se=
gmentfault.com/t/java" data-toggle=3D"popover" data-img=3D"https:=
//avatar-static.segmentfault.com/512/342/51234253-104000000008944=
9_big64" data-placement=3D"top" data-original-title=3D"java" data=
-id=3D"1040000000089449"><img src=3D"0.22737364439483265.png"><sp=
an>&nbsp;</span>java</a><a class=3D"m-1 badge-tag" href=3D"https:=
//segmentfault.com/t/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90" data-t=
oggle=3D"popover" data-placement=3D"top" data-original-title=3D"=D4=
=B4=C2=EB=B7=D6=CE=F6" data-id=3D"1040000002479741">=D4=B4=C2=EB=B7=
=D6=CE=F6</a></div><div class=3D"font-size-14"><span class=3D"tex=
t-secondary ml-2">&nbsp;=D4=C4=B6=C1=D4=BC 26 =B7=D6=D6=D3</span>=
</div><p><a href=3D"https://segmentfault.com/a/1190000020986124#i=
tem-1-10">spring=B5=C4finishRefresh</a>=D6=D0=A3=AC=D3=D0=B8=F6=B2=
=BD=D6=E8=CA=C7=BB=D8=B5=F7=BC=E0=CC=FD=CA=C2=BC=FE=A1=A3=D3=C9=D3=
=DA=CA=B5=CF=D6=C1=CB<font color=3D"#e83e8c" face=3D"SFMono-Regul=
ar, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monosp=
ace"><span style=3D"font-size: 0.875rem;">ApplicationListener</sp=
an></font>=BD=D3=BF=DA=A3=AC=CB=F9=D2=D4=BB=D8=B5=F7<font color=3D=
"#e83e8c" face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Libera=
tion Mono, Courier New, monospace"><span style=3D"font-size: 0.87=
5rem;">onApplicationEvent</span></font>=B7=BD=B7=A8=A1=A3</p><art=
icle class=3D"article fmt article-content" data-id=3D"11900000214=
31522"><h1 id=3D"item-1">onApplicationEvent</h1><p>=C3=BB=D3=D0=B1=
=A9=C2=B6=B9=FD=C7=D2=C3=BB=D3=D0=C8=A1=CF=FB=B1=A9=C2=B6</p><pre=
 class=3D"hljs cpp" style=3D"background-image: initial; backgroun=
d-attachment: initial; background-size: initial; background-origi=
n: initial; background-clip: initial; background-position: initia=
l; background-repeat: initial;"><span class=3D"hljs-function"><sp=
an class=3D"hljs-keyword">public</span> <span class=3D"hljs-keywo=
rd">void</span> <span class=3D"hljs-title">onApplicationEvent</sp=
an><span class=3D"hljs-params">(ContextRefreshedEvent event)</spa=
n> </span>{=0A    <span class=3D"hljs-keyword">if</span> (!isExpo=
rted() &amp;&amp; !isUnexported()) {=0A        <span class=3D"hlj=
s-keyword">if</span> (logger.isInfoEnabled()) {=0A            log=
ger.info(<span class=3D"hljs-string">"The service ready on spring=
 started. service: "</span> + getInterface());=0A        }=0A   =20=
    <span class=3D"hljs-keyword">export</span>();=0A    }=0A}=0A=0A=
<span class=3D"hljs-function"><span class=3D"hljs-keyword">public=
</span> <span class=3D"hljs-keyword">void</span> <span class=3D"h=
ljs-title">export</span><span class=3D"hljs-params">()</span> </s=
pan>{=0A    super.<span class=3D"hljs-keyword">export</span>();=0A=
    <span class=3D"hljs-comment">// Publish ServiceBeanExportedEv=
ent</span>=0A    publishExportEvent();=0A}=0A<span class=3D"hljs-=
function"><span class=3D"hljs-keyword">private</span> <span class=
=3D"hljs-keyword">void</span> <span class=3D"hljs-title">publishE=
xportEvent</span><span class=3D"hljs-params">()</span> </span>{=0A=
    ServiceBeanExportedEvent exportEvent =3D <span class=3D"hljs-=
keyword">new</span> ServiceBeanExportedEvent(<span class=3D"hljs-=
keyword">this</span>);=0A    applicationEventPublisher.publishEve=
nt(exportEvent);=0A}</pre><h1 id=3D"item-2">export</h1><p>=B7=FE=CE=
=F1=B5=C4=B1=A9=C2=B6=A3=AC=D4=DAServiceConfig=D6=D0</p><pre clas=
s=3D"hljs aspectj" style=3D"background-image: initial; background=
-attachment: initial; background-size: initial; background-origin=
: initial; background-clip: initial; background-position: initial=
; background-repeat: initial;"><span class=3D"hljs-keyword">publi=
c</span> <span class=3D"hljs-keyword">synchronized</span> <span c=
lass=3D"hljs-function"><span class=3D"hljs-keyword">void</span> <=
span class=3D"hljs-title">export</span><span class=3D"hljs-params=
">()</span> </span>{=0A    <span class=3D"hljs-comment">// =B8=F7=
=D6=D6=C5=E4=D6=C3=B5=C4=B8=FC=D0=C2</span>=0A    checkAndUpdateS=
ubConfigs();=0A    =0A    <span class=3D"hljs-keyword">if</span>=20=
(!shouldExport()) {=0A        <span class=3D"hljs-keyword">return=
</span>;=0A    }=0A    <span class=3D"hljs-comment">// =D1=D3=B3=D9=
=B1=A9=C2=B6</span>=0A    <span class=3D"hljs-keyword">if</span>=20=
(shouldDelay()) {=0A        DELAY_EXPORT_EXECUTOR.schedule(<span=20=
class=3D"hljs-keyword">this</span>::doExport, getDelay(), TimeUni=
t.MILLISECONDS);=0A    } <span class=3D"hljs-keyword">else</span>=
 {=0A        <span class=3D"hljs-comment">// =B7=FE=CE=F1=B1=A9=C2=
=B6</span>=0A        doExport();=0A    }=0A}</pre><h1 id=3D"item-=
3">checkAndUpdateSubConfigs</h1><pre class=3D"hljs gradle" style=3D=
"background-image: initial; background-attachment: initial; backg=
round-size: initial; background-origin: initial; background-clip:=
 initial; background-position: initial; background-repeat: initia=
l;"><span class=3D"hljs-keyword">public</span> <span class=3D"hlj=
s-keyword">void</span> checkAndUpdateSubConfigs() {=0A    <span c=
lass=3D"hljs-comment">// Use default configs defined explicitly o=
n global configs</span>=0A    <span class=3D"hljs-comment">// =C9=
=E8=D6=C3registries=A1=A2monitor=B5=C4=D3=C5=CF=C8=BC=B6=A3=AC=D3=
=C5=CF=C8=BC=B6application&lt;module&lt;provider</span>=0A    <sp=
an class=3D"hljs-comment">// =B3=FD=C1=CB=C9=CF=C3=E6=C1=BD=B8=F6=
=A3=AC=BB=B9=D3=D0=B5=C4=C9=E8=D6=C3configCenter=A1=A2protocols</=
span>=0A    completeCompoundConfigs();=0A    <span class=3D"hljs-=
comment">// Config Center should always being started first.</spa=
n>=0A    <span class=3D"hljs-comment">// =C9=E8=D6=C3=C5=E4=D6=C3=
=D6=D0=D0=C4=A3=AC=B2=A2=C7=D2=B0=D1CompositeConfiguration=B5=C4=C5=
=E4=D6=C3=C9=E8=D6=C3=B5=BDApplication=A1=A2Monitor=A1=A2Module=A1=
=A2Protocols=A1=A2Registries=A1=A2Providers=A1=A2Consumers=D6=D0<=
/span>=0A    startConfigCenter();=0A    <span class=3D"hljs-comme=
nt">// =BC=EC=B2=E9provider=CA=C7=B7=F1=B4=E6=D4=DA=A3=AC=C8=E7=B9=
=FB=B2=BB=B4=E6=D4=DA=A3=AC=BE=CD=C4=AC=C8=CF=D2=BB=B8=F6=A3=AC=B2=
=A2=B5=F7=D3=C3refresh=B7=BD=B7=A8</span>=0A    checkDefault();=0A=
    <span class=3D"hljs-comment">// =C8=E7=B9=FB=C3=BB=D3=D0=C9=E8=
=D6=C3protocols=A3=AC=BB=E1=B4=D3provider=D6=D0=C8=A1protocols=A3=
=AC=B2=A2=C9=E8=D6=C3ProtocolConfig=BC=B0=B5=F7=D3=C3refresh=B7=BD=
=B7=A8</span>=0A    checkProtocol();=0A    <span class=3D"hljs-co=
mment">// =BC=EC=B2=E9provider=CA=C7=B7=F1=B4=E6=D4=DA=A3=AC=C8=E7=
=B9=FB=B2=BB=B4=E6=D4=DA=A3=AC=BE=CD=C4=AC=C8=CF=D2=BB=B8=F6=A3=AC=
=B2=A2=B5=F7=D3=C3refresh=B7=BD=B7=A8=A1=A3=D4=D9=B8=F9=BE=DDSHUT=
DOWN_WAIT_KEY=BA=CDSHUTDOWN_WAIT_SECONDS_KEY=D3=C3=D3=DA=CD=A3=BB=
=FA</span>=0A    checkApplication();=0A    <span class=3D"hljs-co=
mment">// if protocol is not injvm checkRegistry</span>=0A    <sp=
an class=3D"hljs-comment">// =C8=E7=B9=FB=C3=BB=D3=D0injvm=D0=AD=D2=
=E9=A3=AC=BE=CD=C8=A5=BC=EC=B2=E9Registry</span>=0A    <span clas=
s=3D"hljs-keyword">if</span> (!isOnlyInJvm()) {=0A        <span c=
lass=3D"hljs-comment">// =C8=E7=B9=FBregistries=CE=AA=BF=D5=A3=AC=
=BE=CD=B4=D3dubbo.registry.address=BB=F1=C8=A1=B5=D8=D6=B7=A3=AC=B2=
=A2=C9=E8=D6=C3RegistryConfig=BC=B0=B5=F7=D3=C3refresh=B7=BD=B7=A8=
</span>=0A        <span class=3D"hljs-comment">// =D5=E2=C0=EF=BB=
=E1=B0=D1=D7=A2=B2=E1=D6=D0=D0=C4=B5=C4=C5=E4=D6=C3=A3=AC=B8=B3=D6=
=B5=B8=F8=C5=E4=D6=C3=D6=D0=D0=C4=A3=AC=B2=A2=B5=F7=D3=C3refresh=B7=
=BD=B7=A8</span>=0A        <span class=3D"hljs-comment">// =CB=A2=
=D0=C2=BA=F3=BB=E1=B5=F7=D3=C3prepareEnvironment=B7=BD=B7=A8=A3=AC=
=D5=E2=C0=EF=CD=A8=B9=FDSPI=B5=C4=B7=BD=CA=BD=BB=F1=C8=A1=D7=A2=B2=
=E1=D6=D0=D0=C4</span>=0A        checkRegistry();=0A    }=0A    <=
span class=3D"hljs-comment">// =CB=A2=D0=C2ServiceConfig</span>=0A=
    <span class=3D"hljs-keyword">this</span>.refresh();=0A    <sp=
an class=3D"hljs-comment">// =BC=EC=B2=E9metadataReportConfig=CA=C7=
=B7=F1=B4=E6=D4=DA=A3=AC=C8=E7=B9=FB=B2=BB=B4=E6=D4=DA=A3=AC=BE=CD=
=C4=AC=C8=CFMetadataReportConfig=A3=AC=B2=A2=B5=F7=D3=C3refresh=B7=
=BD=B7=A8=A1=A3</span>=0A    checkMetadataReport();=0A    <span c=
lass=3D"hljs-comment">// =B1=D8=D0=EB=D3=D0interfaceName</span>=0A=
    <span class=3D"hljs-keyword">if</span> (StringUtils.isEmpty(i=
nterfaceName)) {=0A        <span class=3D"hljs-keyword">throw</sp=
an> <span class=3D"hljs-keyword">new</span> IllegalStateException=
(<span class=3D"hljs-string">"&lt;dubbo:service interface=3D\"\"=20=
/&gt; interface not allow null!"</span>);=0A    }=0A    <span cla=
ss=3D"hljs-comment">// =B7=BA=BB=AF</span>=0A    <span class=3D"h=
ljs-keyword">if</span> (ref <span class=3D"hljs-keyword">instance=
of</span> GenericService) {=0A        interfaceClass =3D GenericS=
ervice.<span class=3D"hljs-keyword">class</span>;=0A        <span=
 class=3D"hljs-keyword">if</span> (StringUtils.isEmpty(generic))=20=
{=0A            generic =3D <span class=3D"hljs-keyword">Boolean<=
/span>.<span class=3D"hljs-keyword">TRUE</span>.toString();=0A  =20=
     }=0A    } <span class=3D"hljs-keyword">else</span> {=0A    =20=
   <span class=3D"hljs-keyword">try</span> {=0A            interf=
aceClass =3D <span class=3D"hljs-keyword">Class</span>.forName(in=
terfaceName, <span class=3D"hljs-keyword">true</span>, Thread.cur=
rentThread()=0A                    .getContextClassLoader());=0A=20=
       } <span class=3D"hljs-keyword">catch</span> (ClassNotFound=
Exception e) {=0A            <span class=3D"hljs-keyword">throw</=
span> <span class=3D"hljs-keyword">new</span> IllegalStateExcepti=
on(e.getMessage(), e);=0A        }=0A        <span class=3D"hljs-=
comment">// =BC=EC=B2=E9=BD=D3=BF=DA=BA=CD=B7=BD=B7=A8</span>=0A=20=
       checkInterfaceAndMethods(interfaceClass, methods);=0A    =20=
   <span class=3D"hljs-comment">// =BC=EC=B2=E9ref=CA=C7=B7=F1=D3=
=D0=BC=CC=B3=D0=B9=D8=CF=B5</span>=0A        checkRef();=0A     =20=
  generic =3D <span class=3D"hljs-keyword">Boolean</span>.<span c=
lass=3D"hljs-keyword">FALSE</span>.toString();=0A    }=0A    <spa=
n class=3D"hljs-keyword">if</span> (local !=3D <span class=3D"hlj=
s-keyword">null</span>) {=0A        <span class=3D"hljs-keyword">=
if</span> (<span class=3D"hljs-keyword">Boolean</span>.<span clas=
s=3D"hljs-keyword">TRUE</span>.toString().equals(local)) {=0A   =20=
        local =3D interfaceName + <span class=3D"hljs-string">"Lo=
cal"</span>;=0A        }=0A        <span class=3D"hljs-keyword">C=
lass</span>&lt;?&gt; localClass;=0A        <span class=3D"hljs-ke=
yword">try</span> {=0A            localClass =3D ClassUtils.forNa=
meWithThreadContextClassLoader(local);=0A        } <span class=3D=
"hljs-keyword">catch</span> (ClassNotFoundException e) {=0A     =20=
      <span class=3D"hljs-keyword">throw</span> <span class=3D"hl=
js-keyword">new</span> IllegalStateException(e.getMessage(), e);=0A=
        }=0A        <span class=3D"hljs-keyword">if</span> (!inte=
rfaceClass.isAssignableFrom(localClass)) {=0A            <span cl=
ass=3D"hljs-keyword">throw</span> <span class=3D"hljs-keyword">ne=
w</span> IllegalStateException(<span class=3D"hljs-string">"The l=
ocal implementation class "</span> + localClass.getName() + <span=
 class=3D"hljs-string">" not implement interface "</span> + inter=
faceName);=0A        }=0A    }=0A    <span class=3D"hljs-keyword"=
>if</span> (stub !=3D <span class=3D"hljs-keyword">null</span>) {=
=0A        <span class=3D"hljs-keyword">if</span> (<span class=3D=
"hljs-keyword">Boolean</span>.<span class=3D"hljs-keyword">TRUE</=
span>.toString().equals(stub)) {=0A            stub =3D interface=
Name + <span class=3D"hljs-string">"Stub"</span>;=0A        }=0A=20=
       <span class=3D"hljs-keyword">Class</span>&lt;?&gt; stubCla=
ss;=0A        <span class=3D"hljs-keyword">try</span> {=0A      =20=
     stubClass =3D ClassUtils.forNameWithThreadContextClassLoader=
(stub);=0A        } <span class=3D"hljs-keyword">catch</span> (Cl=
assNotFoundException e) {=0A            <span class=3D"hljs-keywo=
rd">throw</span> <span class=3D"hljs-keyword">new</span> IllegalS=
tateException(e.getMessage(), e);=0A        }=0A        <span cla=
ss=3D"hljs-keyword">if</span> (!interfaceClass.isAssignableFrom(s=
tubClass)) {=0A            <span class=3D"hljs-keyword">throw</sp=
an> <span class=3D"hljs-keyword">new</span> IllegalStateException=
(<span class=3D"hljs-string">"The stub implementation class "</sp=
an> + stubClass.getName() + <span class=3D"hljs-string">" not imp=
lement interface "</span> + interfaceName);=0A        }=0A    }=0A=
    checkStubAndLocal(interfaceClass);=0A    checkMock(interfaceC=
lass);=0A}=0A=0A<span class=3D"hljs-keyword">protected</span> <sp=
an class=3D"hljs-keyword">synchronized</span> <span class=3D"hljs=
-keyword">void</span> doExport() {=0A    <span class=3D"hljs-comm=
ent">// =D2=D1=BE=AD=B1=A9=C2=B6=C1=CB=A3=AC=BE=CD=B2=BB=D4=D9=B1=
=A9=C2=B6</span>=0A    <span class=3D"hljs-keyword">if</span> (un=
exported) {=0A        <span class=3D"hljs-keyword">throw</span> <=
span class=3D"hljs-keyword">new</span> IllegalStateException(<spa=
n class=3D"hljs-string">"The service "</span> + interfaceClass.ge=
tName() + <span class=3D"hljs-string">" has already unexported!"<=
/span>);=0A    }=0A    <span class=3D"hljs-keyword">if</span> (ex=
ported) {=0A        <span class=3D"hljs-keyword">return</span>;=0A=
    }=0A    exported =3D <span class=3D"hljs-keyword">true</span>=
;=0A=0A    <span class=3D"hljs-keyword">if</span> (StringUtils.is=
Empty(path)) {=0A        path =3D interfaceName;=0A    }=0A    do=
ExportUrls();=0A}</pre><h2 id=3D"item-3-1">completeCompoundConfig=
s</h2><p>=C9=E8=D6=C3registries=A1=A2monitor=B5=C4=D3=C5=CF=C8=BC=
=B6=A3=AC=D3=C5=CF=C8=BC=B6application&lt;module&lt;provider</p><=
pre class=3D"hljs nix" style=3D"background-image: initial; backgr=
ound-attachment: initial; background-size: initial; background-or=
igin: initial; background-clip: initial; background-position: ini=
tial; background-repeat: initial;"><font face=3D"SFMono-Regular,=20=
Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace"=
>private void completeCompoundConfigs() {=0A    </font><span clas=
s=3D"hljs-keyword">if</span> (provider !=3D <span class=3D"hljs-l=
iteral">null</span>) {=0A        <span class=3D"hljs-keyword">if<=
/span> (<span class=3D"hljs-attr">application</span> =3D=3D <span=
 class=3D"hljs-literal">null</span>) {=0A            setApplicati=
on(provider.getApplication());=0A        }=0A        <span class=3D=
"hljs-keyword">if</span> (<span class=3D"hljs-attr">module</span>=
 =3D=3D <span class=3D"hljs-literal">null</span>) {=0A          =20=
 setModule(provider.getModule());=0A        }=0A        <span cla=
ss=3D"hljs-keyword">if</span> (<span class=3D"hljs-attr">registri=
es</span> =3D=3D <span class=3D"hljs-literal">null</span>) {=0A =20=
          setRegistries(provider.getRegistries());=0A        }=0A=
        <span class=3D"hljs-keyword">if</span> (<span class=3D"hl=
js-attr">monitor</span> =3D=3D <span class=3D"hljs-literal">null<=
/span>) {=0A            setMonitor(provider.getMonitor());=0A   =20=
    }=0A        <span class=3D"hljs-keyword">if</span> (<span cla=
ss=3D"hljs-attr">protocols</span> =3D=3D <span class=3D"hljs-lite=
ral">null</span>) {=0A            setProtocols(provider.getProtoc=
ols());=0A        }=0A        <span class=3D"hljs-keyword">if</sp=
an> (<span class=3D"hljs-attr">configCenter</span> =3D=3D <span c=
lass=3D"hljs-literal">null</span>) {=0A            setConfigCente=
r(provider.getConfigCenter());=0A        }=0A    }=0A    <span cl=
ass=3D"hljs-keyword">if</span> (module !=3D <span class=3D"hljs-l=
iteral">null</span>) {=0A        // =CE=AA=BF=D5=CB=B5=C3=F7=C9=CF=
=C3=E6=BB=B9=C3=BB=C9=E8=D6=C3=A3=AC=D5=E2=C0=EF=BF=C9=D2=D4=C9=E8=
=D6=C3=A1=A3=C8=E7=B9=FB=B2=BB=CE=AA=BF=D5=A3=AC=CB=B5=C3=F7=C9=CF=
=C3=E6=C9=E8=D6=C3=C1=CB=A3=AC=BE=CD=B2=BB=C4=DC=C9=E8=D6=C3=A1=A3=
=0A        <span class=3D"hljs-keyword">if</span> (<span class=3D=
"hljs-attr">registries</span> =3D=3D <span class=3D"hljs-literal"=
>null</span>) {=0A            setRegistries(module.getRegistries(=
));=0A        }=0A        <span class=3D"hljs-keyword">if</span>=20=
(<span class=3D"hljs-attr">monitor</span> =3D=3D <span class=3D"h=
ljs-literal">null</span>) {=0A            setMonitor(module.getMo=
nitor());=0A        }=0A    }=0A    <span class=3D"hljs-keyword">=
if</span> (application !=3D <span class=3D"hljs-literal">null</sp=
an>) {=0A        <span class=3D"hljs-keyword">if</span> (<span cl=
ass=3D"hljs-attr">registries</span> =3D=3D <span class=3D"hljs-li=
teral">null</span>) {=0A            setRegistries(application.get=
Registries());=0A        }=0A        <span class=3D"hljs-keyword"=
>if</span> (<span class=3D"hljs-attr">monitor</span> =3D=3D <span=
 class=3D"hljs-literal">null</span>) {=0A            setMonitor(a=
pplication.getMonitor());=0A        }=0A    }=0A}</pre><h2 id=3D"=
item-3-2">startConfigCenter</h2><pre class=3D"hljs kotlin" style=3D=
"background-image: initial; background-attachment: initial; backg=
round-size: initial; background-origin: initial; background-clip:=
 initial; background-position: initial; background-repeat: initia=
l;"><font face=3D"SFMono-Regular, Menlo, Monaco, Consolas, Libera=
tion Mono, Courier New, monospace">void startConfigCenter() {=0A=20=
   </font><span class=3D"hljs-comment">// =CE=AA=BF=D5=A3=AC=B4=D3=
=B6=F6=BA=BA=B5=A5=C0=FD=BB=F1=C8=A1</span>=0A    <span class=3D"=
hljs-keyword">if</span> (configCenter =3D=3D <span class=3D"hljs-=
literal">null</span>) {=0A        ConfigManager.getInstance().get=
ConfigCenter().ifPresent(cc -&gt; <span class=3D"hljs-keyword">th=
is</span>.configCenter =3D cc);=0A    }=0A    <span class=3D"hljs=
-comment">// =B2=BB=CE=AA=BF=D5=A3=AC=CB=A2=D0=C2=B2=A2=BB=B7=BE=B3=
=D7=BC=B1=B8=A1=A2=BC=EC=B2=E9</span>=0A    <span class=3D"hljs-k=
eyword">if</span> (<span class=3D"hljs-keyword">this</span>.confi=
gCenter !=3D <span class=3D"hljs-literal">null</span>) {=0A     =20=
  <span class=3D"hljs-comment">// TODO there may have duplicate r=
efresh</span>=0A        <span class=3D"hljs-keyword">this</span>.=
configCenter.refresh();=0A        prepareEnvironment();=0A    }=0A=
    <span class=3D"hljs-comment">// =CB=A2=D0=C2ApplicationConfig=
=A1=A2MonitorConfig=A1=A2ModuleConfig=A1=A2ProtocolConfig=A1=A2Re=
gistryConfig=A1=A2ProviderConfig=A1=A2ConsumerConfig</span>=0A  =20=
 ConfigManager.getInstance().refreshAll();=0A}</pre><h3>prepareEn=
vironment</h3><pre class=3D"hljs processing" style=3D"background-=
image: initial; background-attachment: initial; background-size:=20=
initial; background-origin: initial; background-clip: initial; ba=
ckground-position: initial; background-repeat: initial;"><span cl=
ass=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword">=
void</span> prepareEnvironment() {=0A    <span class=3D"hljs-comm=
ent">// =BC=EC=B2=E9address=A1=A2protocol=B5=C4=BA=CF=B7=A8=D0=D4=
</span>=0A    <span class=3D"hljs-keyword">if</span> (configCente=
r.isValid()) {=0A        <span class=3D"hljs-comment">// =D2=D1=BE=
=AD=B3=F5=CA=BC=BB=AF=B5=C4=BE=CD=B2=BB=D4=D9=B3=F5=CA=BC=BB=AF</=
span>=0A        <span class=3D"hljs-keyword">if</span> (!configCe=
nter.checkOrUpdateInited()) {=0A            <span class=3D"hljs-k=
eyword">return</span>;=0A        }=0A        <span class=3D"hljs-=
comment">// =BB=F1=C8=A1=C5=E4=D6=C3=D6=D0=D0=C4=A3=A8=D5=E2=C0=EF=
=BE=CD=D3=D0=D3=C3=B5=BDSPI=A3=A9</span>=0A        DynamicConfigu=
ration dynamicConfiguration =3D getDynamicConfiguration(configCen=
ter.toUrl());=0A        <span class=3D"hljs-comment">// =B4=D3=C5=
=E4=D6=C3=D6=D0=D0=C4=BB=F1=C8=A1=C5=E4=D6=C3</span>=0A        <s=
pan class=3D"hljs-keyword">String</span> configContent =3D dynami=
cConfiguration.getProperties(configCenter.getConfigFile(), config=
Center.getGroup());=0A=0A        <span class=3D"hljs-keyword">Str=
ing</span> appGroup =3D application !=3D <span class=3D"hljs-keyw=
ord">null</span> ? application.getName() : <span class=3D"hljs-ke=
yword">null</span>;=0A        <span class=3D"hljs-keyword">String=
</span> appConfigContent =3D <span class=3D"hljs-keyword">null</s=
pan>;=0A        <span class=3D"hljs-keyword">if</span> (StringUti=
ls.isNotEmpty(appGroup)) {=0A            appConfigContent =3D dyn=
amicConfiguration.getProperties=0A                    (StringUtil=
s.isNotEmpty(configCenter.getAppConfigFile()) ? configCenter.getA=
ppConfigFile() : configCenter.getConfigFile(),=0A               =20=
     appGroup=0A                    );=0A        }=0A        <spa=
n class=3D"hljs-keyword">try</span> {=0A            <span class=3D=
"hljs-comment">// =CA=C7=B7=F1=D7=EE=B8=DF=D3=C5=CF=C8=BC=B6</spa=
n>=0A            Environment.getInstance().setConfigCenterFirst(c=
onfigCenter.isHighestPriority());=0A            <span class=3D"hl=
js-comment">// =B0=D1configContent=B5=C4Properties=B8=F1=CA=BD=D7=
=AA=CE=AAmap=B2=A2=B4=E6=C8=EBexternalConfigurationMap</span>=0A=20=
           Environment.getInstance().updateExternalConfigurationM=
ap(parseProperties(configContent));=0A            <span class=3D"=
hljs-comment">// =B0=D1appConfigContent=B5=C4Properties=B8=F1=CA=BD=
=D7=AA=CE=AAmap=B2=A2=B4=E6=C8=EBappExternalConfigurationMap</spa=
n>=0A            Environment.getInstance().updateAppExternalConfi=
gurationMap(parseProperties(appConfigContent));=0A        } <span=
 class=3D"hljs-keyword">catch</span> (IOException e) {=0A       =20=
    <span class=3D"hljs-keyword">throw</span> <span class=3D"hljs=
-keyword">new</span> IllegalStateException(<span class=3D"hljs-st=
ring">"Failed to parse configurations from Config Center."</span>=
, e);=0A        }=0A    }=0A}</pre><h3>refreshAll</h3><p>=CB=A2=D0=
=C2ApplicationConfig=A1=A2MonitorConfig=A1=A2ModuleConfig=A1=A2Pr=
otocolConfig=A1=A2RegistryConfig=A1=A2ProviderConfig=A1=A2Consume=
rConfig</p><pre class=3D"hljs less" style=3D"background-image: in=
itial; background-attachment: initial; background-size: initial;=20=
background-origin: initial; background-clip: initial; background-=
position: initial; background-repeat: initial;"><span class=3D"hl=
js-selector-tag">public</span> <span class=3D"hljs-selector-tag">=
void</span> <span class=3D"hljs-selector-tag">refreshAll</span>()=
 {=0A    <span class=3D"hljs-comment">// refresh all configs here=
,</span>=0A    <span class=3D"hljs-selector-tag">getApplication</=
span>()<span class=3D"hljs-selector-class">.ifPresent</span>(<spa=
n class=3D"hljs-attribute">ApplicationConfig</span>::refresh);=0A=
    <span class=3D"hljs-selector-tag">getMonitor</span>()<span cl=
ass=3D"hljs-selector-class">.ifPresent</span>(<span class=3D"hljs=
-attribute">MonitorConfig</span>::refresh);=0A    <span class=3D"=
hljs-selector-tag">getModule</span>()<span class=3D"hljs-selector=
-class">.ifPresent</span>(<span class=3D"hljs-attribute">ModuleCo=
nfig</span>::refresh);=0A=0A    <span class=3D"hljs-selector-tag"=
>getProtocols</span>()<span class=3D"hljs-selector-class">.values=
</span>()<span class=3D"hljs-selector-class">.forEach</span>(<spa=
n class=3D"hljs-attribute">ProtocolConfig</span>::refresh);=0A  =20=
 <span class=3D"hljs-selector-tag">getRegistries</span>()<span cl=
ass=3D"hljs-selector-class">.values</span>()<span class=3D"hljs-s=
elector-class">.forEach</span>(<span class=3D"hljs-attribute">Reg=
istryConfig</span>::refresh);=0A    <span class=3D"hljs-selector-=
tag">getProviders</span>()<span class=3D"hljs-selector-class">.va=
lues</span>()<span class=3D"hljs-selector-class">.forEach</span>(=
<span class=3D"hljs-attribute">ProviderConfig</span>::refresh);=0A=
    <span class=3D"hljs-selector-tag">getConsumers</span>()<span=20=
class=3D"hljs-selector-class">.values</span>()<span class=3D"hljs=
-selector-class">.forEach</span>(<span class=3D"hljs-attribute">C=
onsumerConfig</span>::refresh);=0A}</pre><h2 id=3D"item-3-3">chec=
kDefault</h2><p>=C8=E7=B9=FB=C3=BB=D3=D0provider=A3=AC=D4=F2=B4=B4=
=BD=A8=D2=BB=B8=F6=A3=AC=B2=A2refresh</p><pre class=3D"hljs lives=
cript" style=3D"background-image: initial; background-attachment:=
 initial; background-size: initial; background-origin: initial; b=
ackground-clip: initial; background-position: initial; background=
-repeat: initial;"><font face=3D"SFMono-Regular, Menlo, Monaco, C=
onsolas, Liberation Mono, Courier New, monospace">private </font>=
<span class=3D"hljs-literal">void</span> checkDefault() {=0A    c=
reateProviderIfAbsent();=0A}=0A=0Aprivate <span class=3D"hljs-lit=
eral">void</span> createProviderIfAbsent() {=0A    <span class=3D=
"hljs-keyword">if</span> (provider !=3D <span class=3D"hljs-liter=
al">null</span>) {=0A        <span class=3D"hljs-keyword">return<=
/span>;=0A    }=0A    setProvider(=0A            ConfigManager.ge=
tInstance()=0A                    .getDefaultProvider()=0A      =20=
             .orElseGet<span class=3D"hljs-function"><span class=3D=
"hljs-params">(() -&gt; {=0A                        ProviderConfi=
g providerConfig =3D <span class=3D"hljs-keyword">new</span> Prov=
iderConfig();=0A                        providerConfig.refresh();=
=0A                        <span class=3D"hljs-keyword">return</s=
pan> providerConfig;=0A                    })</span>=0A    );=0A}=
</span></pre><h2 id=3D"item-3-4">checkProtocol</h2><p>=C9=E8=D6=C3=
Protocol</p><pre class=3D"hljs livescript" style=3D"background-im=
age: initial; background-attachment: initial; background-size: in=
itial; background-origin: initial; background-clip: initial; back=
ground-position: initial; background-repeat: initial;"><font face=
=3D"SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Cou=
rier New, monospace">private </font><span class=3D"hljs-literal">=
void</span> checkProtocol() {=0A    <span class=3D"hljs-regexp">/=
/ =C8=E7=B9=FBprotocols=CE=AA=BF=D5=A3=AC=B4=D3provider=C8=A1=0A=20=
   if (CollectionUtils.isEmpty(protocols) &amp;&amp; provider !=3D=
 null) {=0A        setProtocols(provider.getProtocols());=0A    }=
=0A    convertProtocolIdsToProtocols();=0A}=0A=0Aprivate void con=
vertProtocolIdsToProtocols() {=0A    if (StringUtils.isEmpty(prot=
ocolIds) &amp;&amp; CollectionUtils.isEmpty(protocols)) {=0A    =20=
   List&lt;String&gt; configedProtocols =3D new ArrayList&lt;&gt;=
();=0A        configedProtocols.addAll(getSubProperties(Environme=
nt.getInstance()=0A                .getExternalConfigurationMap()=
, PROTOCOLS_SUFFIX));=0A        configedProtocols.addAll(getSubPr=
operties(Environment.getInstance()=0A                .getAppExter=
nalConfigurationMap(), PROTOCOLS_SUFFIX));=0A=0A        protocolI=
ds =3D String.join(",", configedProtocols);=0A    }=0A    //</spa=
n> =C8=E7=B9=FB=BB=B9=CA=C7=C3=BB=D3=D0ProtocolConfig=A3=AC=D4=F2=
=B4=B4=BD=A8=D2=BB=B8=F6=B2=A2refresh=0A    <span class=3D"hljs-k=
eyword">if</span> (StringUtils.isEmpty(protocolIds)) {=0A       =20=
<span class=3D"hljs-keyword">if</span> (CollectionUtils.isEmpty(p=
rotocols)) {=0A            setProtocols(=0A                    Co=
nfigManager.getInstance().getDefaultProtocols()=0A              =20=
             .filter(CollectionUtils::isNotEmpty)=0A            =20=
               .orElseGet<span class=3D"hljs-function"><span clas=
s=3D"hljs-params">(() -&gt; {=0A                                P=
rotocolConfig protocolConfig =3D <span class=3D"hljs-keyword">new=
</span> ProtocolConfig();=0A                                proto=
colConfig.refresh();=0A                                <span clas=
s=3D"hljs-keyword">return</span> <span class=3D"hljs-keyword">new=
</span> ArrayList&lt;&gt;(Arrays.asList(protocolConfig));=0A    =20=
                       })</span>=0A            );=0A        }=0A=20=
   } <span class=3D"hljs-title">else</span> {=0A        // <span=20=
class=3D"hljs-title">id</span>=B8=B3=D6=B5=BA=F3<span class=3D"hl=
js-title">refresh</span>=0A        <span class=3D"hljs-title">Str=
ing</span>[] <span class=3D"hljs-title">arr</span> =3D <span clas=
s=3D"hljs-title">COMMA_SPLIT_PATTERN</span>.<span class=3D"hljs-t=
itle">split</span><span class=3D"hljs-params">(protocolIds)</span=
>;=0A        <span class=3D"hljs-title">List</span>&lt;<span clas=
s=3D"hljs-title">ProtocolConfig</span>&gt; <span class=3D"hljs-ti=
tle">tmpProtocols</span> =3D <span class=3D"hljs-title">Collectio=
nUtils</span>.<span class=3D"hljs-title">isNotEmpty</span><span c=
lass=3D"hljs-params">(protocols)</span> ? <span class=3D"hljs-tit=
le">protocols</span> : <span class=3D"hljs-title">new</span> <spa=
n class=3D"hljs-title">ArrayList</span>&lt;&gt;<span class=3D"hlj=
s-params">()</span>;=0A        <span class=3D"hljs-title">Arrays<=
/span>.<span class=3D"hljs-title">stream</span><span class=3D"hlj=
s-params">(arr)</span>.<span class=3D"hljs-title">forEach</span><=
span class=3D"hljs-params">(id -&gt; {=0A            <span class=3D=
"hljs-keyword">if</span> (tmpProtocols.stream().noneMatch(prot -&=
gt; prot.getId().equals(id))) {=0A                tmpProtocols.ad=
d(ConfigManager.getInstance().getProtocol(id).orElseGet(() -&gt;=20=
{=0A                    ProtocolConfig protocolConfig =3D <span c=
lass=3D"hljs-keyword">new</span> ProtocolConfig();=0A           =20=
        protocolConfig.setId(id);=0A                    protocolC=
onfig.refresh();=0A                    <span class=3D"hljs-keywor=
d">return</span> protocolConfig;=0A                }));=0A      =20=
     }=0A        })</span>;=0A        <span class=3D"hljs-title">=
if</span> <span class=3D"hljs-params">(tmpProtocols.size() &gt; a=
rr.length)</span> {=0A            <span class=3D"hljs-title">thro=
w</span> <span class=3D"hljs-title">new</span> <span class=3D"hlj=
s-title">IllegalStateException</span><span class=3D"hljs-params">=
(<span class=3D"hljs-string">"Too much protocols found, the proto=
cols comply to this service are :"</span> + protocolIds + <span c=
lass=3D"hljs-string">" but got "</span> + protocols=0A          =20=
         .size() + <span class=3D"hljs-string">" registries!"</sp=
an>)</span>;=0A        }=0A        <span class=3D"hljs-title">set=
Protocols</span><span class=3D"hljs-params">(tmpProtocols)</span>=
;=0A    }=0A}</span></pre><h2 id=3D"item-3-5">checkApplication</h=
2><pre class=3D"hljs gauss" style=3D"background-image: initial; b=
ackground-attachment: initial; background-size: initial; backgrou=
nd-origin: initial; background-clip: initial; background-position=
: initial; background-repeat: initial;"><font face=3D"SFMono-Regu=
lar, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monos=
pace">protected void checkApplication() {=0A    </font><span clas=
s=3D"hljs-comment">// for backward compatibility</span>=0A    <sp=
an class=3D"hljs-comment">// =C8=E7=B9=FB=C3=BB=D3=D0Application=A3=
=AC=D4=F2=B4=B4=BD=A8=D2=BB=B8=F6=B2=A2refresh</span>=0A    creat=
eApplicationIfAbsent();=0A    <span class=3D"hljs-comment">// =D1=
=E9=D6=A4name=CA=C7=B7=F1=CE=AA=BF=D5</span>=0A    <span class=3D=
"hljs-keyword">if</span> (!application.isValid()) {=0A        thr=
ow <span class=3D"hljs-keyword">new</span> IllegalStateException(=
<span class=3D"hljs-string">"No application config found or it's=20=
not a valid config! "</span> +=0A                <span class=3D"h=
ljs-string">"Please add &lt;dubbo:application name=3D\"...\" /&gt=
; to your spring config."</span>);=0A    }=0A    <span class=3D"h=
ljs-comment">// =B0=D1name=B8=B3=D6=B5=B8=F8ApplicationModel=B5=C4=
Application</span>=0A    ApplicationModel.setApplication(applicat=
ion.<span class=3D"hljs-built_in">getName</span>());=0A=0A    <sp=
an class=3D"hljs-comment">// backward compatibility</span>=0A   =20=
<span class=3D"hljs-comment">// =D3=C3=D3=DA=D3=C5=D1=C5=CD=A3=BB=
=FA</span>=0A    <span class=3D"hljs-keyword">String</span> <span=
 class=3D"hljs-built_in">wait</span> =3D ConfigUtils.getProperty(=
SHUTDOWN_WAIT_KEY);=0A    <span class=3D"hljs-keyword">if</span>=20=
(<span class=3D"hljs-built_in">wait</span> !=3D <span class=3D"hl=
js-built_in">null</span> &amp;&amp; <span class=3D"hljs-built_in"=
>wait</span>.trim().length() &gt; <span class=3D"hljs-number">0</=
span>) {=0A        <span class=3D"hljs-keyword">System</span>.set=
Property(SHUTDOWN_WAIT_KEY, <span class=3D"hljs-built_in">wait</s=
pan>.trim());=0A    } <span class=3D"hljs-keyword">else</span> {=0A=
        <span class=3D"hljs-built_in">wait</span> =3D ConfigUtils=
.getProperty(SHUTDOWN_WAIT_SECONDS_KEY);=0A        <span class=3D=
"hljs-keyword">if</span> (<span class=3D"hljs-built_in">wait</spa=
n> !=3D <span class=3D"hljs-built_in">null</span> &amp;&amp; <spa=
n class=3D"hljs-built_in">wait</span>.trim().length() &gt; <span=20=
class=3D"hljs-number">0</span>) {=0A            <span class=3D"hl=
js-keyword">System</span>.setProperty(SHUTDOWN_WAIT_SECONDS_KEY,=20=
<span class=3D"hljs-built_in">wait</span>.trim());=0A        }=0A=
    }=0A}</pre><h2 id=3D"item-3-6">checkRegistry</h2><pre class=3D=
"hljs livescript" style=3D"background-image: initial; background-=
attachment: initial; background-size: initial; background-origin:=
 initial; background-clip: initial; background-position: initial;=
 background-repeat: initial;"><font face=3D"SFMono-Regular, Menlo=
, Monaco, Consolas, Liberation Mono, Courier New, monospace">prot=
ected </font><span class=3D"hljs-literal">void</span> checkRegist=
ry() {=0A    <span class=3D"hljs-regexp">//=BC=D3=D4=D8RegistryCo=
nfig=0A    loadRegistriesFromBackwardConfig();=0A    //</span>=BC=
=D3=D4=D8RegistryConfig=0A    convertRegistryIdsToRegistries();=0A=
    <span class=3D"hljs-regexp">// =D1=E9=D6=A4address=0A    for=20=
(RegistryConfig registryConfig : registries) {=0A        if (!reg=
istryConfig.isValid()) {=0A            throw new IllegalStateExce=
ption("No registry config found or it's not a valid config! " +=0A=
                    "The registry config is: " + registryConfig);=
=0A        }=0A    }=0A=0A    useRegistryForConfigIfNecessary();=0A=
}=0Aprivate void useRegistryForConfigIfNecessary() {=0A    regist=
ries.stream().filter(RegistryConfig::isZookeeperProtocol).findFir=
st().ifPresent(rc -&gt; {=0A        //</span> we use the loading=20=
status <span class=3D"hljs-keyword">of</span> DynamicConfiguratio=
n <span class=3D"hljs-keyword">to</span> decide whether ConfigCen=
ter has been initiated.=0A        Environment.getInstance<span cl=
ass=3D"hljs-function"><span class=3D"hljs-params">()</span>.<span=
 class=3D"hljs-title">getDynamicConfiguration</span><span class=3D=
"hljs-params">()</span>.<span class=3D"hljs-title">orElseGet</spa=
n><span class=3D"hljs-params">(() -&gt; {=0A            ConfigMan=
ager configManager =3D ConfigManager.getInstance();=0A          =20=
 <span class=3D"hljs-regexp">// =B4=B4=BD=A8ConfigCenterConfig=0A=
            ConfigCenterConfig cc =3D configManager.getConfigCent=
er().orElse(new ConfigCenterConfig());=0A            //</span> =C9=
=E8=D6=C3=B2=CE=CA=FD=0A            <span class=3D"hljs-keyword">=
if</span> (cc.getParameters() =3D=3D <span class=3D"hljs-literal"=
>null</span>) {=0A                cc.setParameters(<span class=3D=
"hljs-keyword">new</span> HashMap&lt;&gt;());=0A            }=0A=20=
           <span class=3D"hljs-keyword">if</span> (rc.getParamete=
rs() !=3D <span class=3D"hljs-literal">null</span>) {=0A        =20=
       cc.getParameters().putAll(rc.getParameters());=0A        =20=
   }=0A            cc.getParameters().put(org.apache.dubbo.remoti=
ng.Constants.CLIENT_KEY,rc.getClient());=0A            cc.setProt=
ocol(rc.getProtocol());=0A            cc.setAddress(rc.getAddress=
());=0A            cc.setUsername(rc.getUsername());=0A         =20=
  cc.setPassword(rc.getPassword());=0A            cc.setHighestPr=
iority(<span class=3D"hljs-literal">false</span>);=0A           =20=
<span class=3D"hljs-regexp">//=C9=E8=D6=C3ConfigCenterConfig=0A =20=
          setConfigCenter(cc);=0A            //</span>=CB=A2=D0=C2=
=C5=E4=D6=C3=0A            startConfigCenter();=0A            <sp=
an class=3D"hljs-keyword">return</span> <span class=3D"hljs-liter=
al">null</span>;=0A        })</span>;=0A    });=0A}</span></pre><=
p>=C5=E4=D6=C3=D0=C5=CF=A2=B6=BC=BA=C3=C1=CB=A3=AC=BA=F3=C3=E6=BF=
=B4=BF=B4=D4=F5=C3=B4=B1=A9=C2=B6=B5=C4</p><br></article><div>=C0=
=B4=D4=B4=A3=BA&nbsp;<a href=3D"https://segmentfault.com/a/119000=
0021431522?utm_source=3Dtag-newest">https://segmentfault.com/a/11=
90000021431522?utm_source=3Dtag-newest</a></div></body></html>=0A=
=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000494250.476--

------=_Next_Part_0001482750.551
Content-Type: image/png;
	name="0.22737364439483265.png"
Content-Transfer-Encoding: base64
Content-ID: <0.22737364439483265.png>
Content-Location: 0.22737364439483265.png

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAEsElEQVRYR8WWa0wUVxiGvzOX3dmZWVwWRFhgFdRiSyrSmpJW0tj2h7dWDWlsgwEDGC2tphfbpiZN1PSHNNE2MdFqRQSq1KRNlLY0xF4tbYJRY41oXUyKArLgshfZ2dndmTPnNLsJDbG2y65UJpk/853vfZ/znXcmg2CaLzRV/qfslvy1vvBAsnpTBtCRa1tkM6etWfJn/65kIKYMoNOZXSwKwp6ne2+smBaAHx6avQcQzXrO1V89LQBni5zU6/EVr/QpVx84wLnC2QFZDX7/8LDvxWTMY2vvKwO9Er9IkiznEcu5HG5fcUzQJfElJtG6tMDj2wcANBFQygC9M+WtmRbTPkWP/OZ0q+U9aTAvzZJxglD2jzm3b1clMh6vpwTgzrB+aJb4d5WwctTp0WpvZsk7BE7aqRD0/Nzh4Y7Jmqd0BN/l5VWWMvh4NKqczB1RKobsljdk2f6xxxtYODcUupyMeUoAv8yf350XCZUVDgzFp9eXmxEQooYrZzRQlqx5SgA/zys4LWNcvPjGQG5M4Px8J50VCATyPWPpDwSgMy/7iRzZcrbkWl98At2FjnMFOLpYDQWbCrxaXbIQKYXQ5Zix32sWc5/qc6+9kG5a6JCkS2ZgoFul+St9vsFkIFICiBn0OLLaJU39vGBUOTE0U/xAMovvXwBu6bODw2f+V4BHV72XfrmjwR8zGcywbs/zBneP2IQqxHHbs0aVRyaaZ2w49BqDSMjTXN/8b1CTm8Cmjo9YoHmIGhdxSPkS2tZfnyjYlr9gW+XAtb0Tnzle3l2qCNkcFm07hUiw1NdU7bgXREKAjM3H9KDk5AxVbTSI3gscCslYpY4xN5NJIoKGDbuJN1kpRk6VYex+yRKgNNQ40LLtq3FD0ysnqYzVzb7G9Z/eDZEQINYgbjy+ErO2Eg2hWQCGHXjWAlgLA8OowDABoMwtiOAr0Lj6x3vt0vpmJyV+d2moueb3lABiTZa646+HTTYPfLKqLZmQ8Vs6bgtRX0vwcNU7KR3BeFP6ppauMXlOuRHW+hEyRlmgKgYKDMdaCSFZgGgOQwEIRjvh4IpdUN9Zw+JwpVkP7lObq7++vxBO6Ga2/rSF6Fohw1GZUIMAZRVAqB+wdgYOvXApvnR1uxUywQFNa1yJpjWpDPwt8urpo6AEdkDruv5/CNe2F03GMOUMxBvrO/tF2ZofiapAdOwHDmmgU1EQBCvH8kB0OqL63U/CZ+v6Eu18vP7fE6jvbACgMiDmKhxYdiDetOmbZ8DELQeKnIB1EyA2CgA3AUMXNK749m7j9Noj5f6mul+TykB6dWu5bs3sCgHrovuXLZjsbiauE2uaHhNZdu0dZC3SD1e8lBSAWHEoJ81uaYggpkTl7HM0YAkAGgMEfgCkIAQhSgDHf/koMQGLZECGBQDxgGgQSOyGXtCiB+FIRQ+/8dQxSbuzN9C64WJqGahqlYC3LeFkUQdMeMogKxhgNigmZob1RanmhZA6HBefIZYBJo8jhl9Eo8Ys4HmPjL1vK4crr9zfd6D2SDkHUA6AbICQAJTwlBAzA1RgTJzJQAyiCIUJpSOGoV/X7gQ7wl+8dSvR8SX3GiZSS6E+7QB/AVIm2jC53pzAAAAAAElFTkSuQmCC

------=_Next_Part_0001482750.551--

