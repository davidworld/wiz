From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?U3ByaW5nYm9vdMb0tq/JqMPosPy1xNStwO0=?=
Date: Date: Fri, 23 Jul 2021 05:55:51 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001494654.914"

This is a multi-part message in MIME format.

------=_Next_Part_0001494654.914
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000498218.595"


------=_Next_Part_0000498218.595
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000498218.595
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A=0A<t=
itle>Springboot=C6=F4=B6=AF=C9=A8=C3=E8=B0=FC=B5=C4=D4=AD=C0=ED</=
title>=0A    =0A<style id=3D"wiz_custom_css">html, .wiz-editor-bo=
dy {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica, 'H=
iragino Sans GB', '=E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91', 'Micros=
oft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.7=
;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}.wiz-ed=
itor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-=
body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10=
px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-e=
ditor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body=
 h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-s=
ize:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;f=
ont-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1=
rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color: #7=
77777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wi=
z-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-edi=
tor-body li {margin:8px 0;}.wiz-editor-body blockquote,.wiz-edito=
r-body table,.wiz-editor-body pre,.wiz-editor-body code {margin:8=
px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-bod=
y ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;}.w=
iz-editor-body ol.wiz-list-level1 > li {list-style-type:decimal;}=
.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lower-l=
atin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-type:l=
ower-roman;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz-ed=
itor-body blockquote > :first-child {margin-top:0;}.wiz-editor-bo=
dy blockquote > :last-child {margin-bottom:0;}.wiz-editor-body im=
g {border:0;max-width:100%;height:auto !important;margin:2px 0;}.=
wiz-editor-body table {border-collapse:collapse;border:1px solid=20=
#bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {padding:4px 8px=
;border-collapse:collapse;border:1px solid #bbbbbb;min-height:28p=
x;word-break:break-word;box-sizing: border-box;}.wiz-hide {displa=
y:none !important;}</style></head>=0A=0A<body class=3D"wiz-editor=
-body"  spellcheck=3D"false"><div></div><h1 class=3D"_1RuRku" sty=
le=3D"color: rgb(64, 64, 64); font-size: 1.875rem;">Springboot=C6=
=F4=B6=AF=C9=A8=C3=E8=B0=FC=B5=C4=D4=AD=C0=ED</h1><div class=3D"_=
2mYfmT" style=3D"font-size:0.813rem;color:rgb(64, 64, 64)"><a cla=
ss=3D"_1OhGeD" href=3D"https://www.jianshu.com/u/89bc27aaac9b" ta=
rget=3D"_blank" style=3D"text-decoration:none;"><img class=3D"_13=
D2Eh" src=3D"0.24956363980345886.png" alt=3D""></a></div><div cla=
ss=3D"_3U4Smb" style=3D"font-size:0.813rem;color:rgb(64, 64, 64)"=
><span class=3D"FxYr8x" style=3D"font-size:1rem;"><a class=3D"_1O=
hGeD" href=3D"https://www.jianshu.com/u/89bc27aaac9b" target=3D"_=
blank" style=3D"text-decoration:none;">WAHAHA402</a></span><butto=
n data-locale=3D"zh-CN" type=3D"button" class=3D"_3kba3h _1OyPqC=20=
_3Mi9q9 _34692-" style=3D"color: rgb(236, 114, 89); font-size: 0.=
75rem; background-image: none;"><span>=B9=D8=D7=A2</span></button=
></div><div class=3D"s-dsoj" style=3D"font-size:0.813rem;color:rg=
b(150, 150, 150)"><span class=3D"_3tCVn5" style=3D"color:rgb(236,=
 114, 89);"><span>0.307</span></span><time datetime=3D"2019-05-17=
T03:59:18.000Z" style=3D"">2019.05.17 11:59:18</time><span>=D7=D6=
=CA=FD 809</span><span>=D4=C4=B6=C1 1,442</span></div><p style=3D=
"color:rgb(64, 64, 64)"><a href=3D"https://links.jianshu.com/go?t=
o=3D%255Bhttps%3A%2F%2Fnofluffjuststuff.com%2Fblog%2Fscott_leberk=
night%2F2008%2F06%2Fjust_how_does_spring_do_its_classpath_compone=
nt_scanning_magic_%255D%28https%3A%2F%2Fnofluffjuststuff.com%2Fbl=
og%2Fscott_leberknight%2F2008%2F06%2Fjust_how_does_spring_do_its_=
classpath_component_scanning_magic_%29" target=3D"_blank" style=3D=
"color:rgb(6, 129, 208);text-decoration:none;">=B2=CE=BF=BC=C1=B4=
=BD=D31</a><br><a href=3D"https://links.jianshu.com/go?to=3D%255B=
https%3A%2F%2Fwww.douban.com%2Fnote%2F717513413%2F%255D%28https%3=
A%2F%2Fwww.douban.com%2Fnote%2F717513413%2F%29" target=3D"_blank"=
 style=3D"color:rgb(6, 129, 208);text-decoration:none;">=B2=CE=BF=
=BC=C1=B4=BD=D32</a><br>=CB=F9=B2=CE=D5=D5=B4=FA=C2=EB=CE=AASprin=
gboot2.1.1</p><article class=3D"_2rhmJa" style=3D"color: rgb(64,=20=
64, 64);"><blockquote style=3D"background-color: rgb(250, 250, 25=
0);"><p> =C4=AC=C8=CF=C7=E9=BF=F6=CF=C2=A3=AC=C9=A8=C3=E8=B7=B6=CE=
=A7=CA=C7=D6=F7=C0=E0xxxApplication=CB=F9=D4=DA=B0=FC=BC=B0=C6=E4=
=D7=D3=C4=BF=C2=BC=A3=AC=BF=C9=D2=D4=D4=DA=BA=F3=C3=E6=B5=C4=BE=DF=
=CC=E5=CA=B5=CF=D6=D6=D0=BF=B4=B5=BD=A1=A3</p></blockquote><p> =B4=
=D3=D6=F7=C0=E0=D6=D0=B5=C4<code style=3D"font-size: 0.75rem; col=
or: rgb(199, 37, 78); background-color: rgb(242, 242, 242);">Spri=
ngApplication.run(xxxApplication.class, args);</code>=D2=BB=D6=B1=
=B5=E3=BB=F7=BD=F8=C8=EBrun=B7=BD=B7=A8=B5=C4=CA=B5=CF=D6=A3=AC=D5=
=E2=C0=EF=BF=C9=D2=D4=BF=B4=B5=BDrun=B7=BD=B7=A8=C0=EF=D3=D0=BC=B8=
=B8=F6=B9=D8=D3=DAcontext=B5=C4=B7=BD=B7=A8=B7=D6=B1=F0=CA=C7=A3=BA=
</p><ul><li><p>createApplicationContext()</p></li><li><p>prepareC=
ontext(xxx,xx)</p></li><li><p>refreshContext(context)</p></li></u=
l><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  language-jav=
a" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204); backgr=
ound: rgb(45, 45, 45);"><code class=3D"java  language-java" style=
=3D"font-size: 1rem; background: none transparent;"><span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">public</span>=
 <span class=3D"token class-name" style=3D"color:rgb(248, 197, 85=
);">ConfigurableApplicationContext</span> <span class=3D"token fu=
nction" style=3D"color:rgb(240, 141, 73);">run</span><span class=3D=
"token punctuation">(</span><span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">String</span><span class=3D"token=20=
punctuation">.</span><span class=3D"token punctuation">.</span><s=
pan class=3D"token punctuation">.</span> args<span class=3D"token=
 punctuation">)</span> <span class=3D"token punctuation">{</span>=
=0A        <span class=3D"token punctuation">.</span><span class=3D=
"token punctuation">.</span><span class=3D"token punctuation">.</=
span>=0A        <span class=3D"token keyword" style=3D"color:rgb(=
204, 153, 205);">try</span> <span class=3D"token punctuation">{</=
span>=0A            <span class=3D"token punctuation">.</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token punct=
uation">.</span>=0A            context <span class=3D"token opera=
tor" style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">createApplica=
tionContext</span><span class=3D"token punctuation">(</span><span=
 class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">;</span>=0A            <span class=3D"token punctuation">.<=
/span><span class=3D"token punctuation">.</span><span class=3D"to=
ken punctuation">.</span>=0A            <span class=3D"token func=
tion" style=3D"color:rgb(240, 141, 73);">prepareContext</span><sp=
an class=3D"token punctuation">(</span>context<span class=3D"toke=
n punctuation">,</span> environment<span class=3D"token punctuati=
on">,</span> listeners<span class=3D"token punctuation">,</span>=20=
applicationArguments<span class=3D"token punctuation">,</span>=0A=
                    printedBanner<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span>=0A         =20=
  <span class=3D"token function" style=3D"color:rgb(240, 141, 73)=
;">refreshContext</span><span class=3D"token punctuation">(</span=
>context<span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">;</span>=0A            <span class=3D"token pu=
nctuation">.</span><span class=3D"token punctuation">.</span><spa=
n class=3D"token punctuation">.</span><span class=3D"token punctu=
ation">.</span>=0A        <span class=3D"token keyword" style=3D"=
color:rgb(204, 153, 205);">catch</span> <span class=3D"token punc=
tuation">(</span><span class=3D"token class-name" style=3D"color:=
rgb(248, 197, 85);">Throwable</span> ex<span class=3D"token punct=
uation">)</span> <span class=3D"token punctuation">{</span>=0A  =20=
     =0A        <span class=3D"token punctuation">}</span>=0A</co=
de></pre></div><p>=D6=F0=B8=F6=B7=D6=CE=F6=A3=BA</p><h3 style=3D"=
font-size: 1.375rem;">1.createApplicationContext()</h3><p>=D5=E2=B8=
=F6=B7=BD=B7=A8=B7=B5=BB=D8=D2=BB=B8=F6=C0=E0=D0=CD=CE=AA<code st=
yle=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-co=
lor: rgb(242, 242, 242);">AnnotationConfigServletWebServerApplica=
tionContext</code>=B5=C4context=A3=AC=BF=C9=D2=D4=B5=E3=BD=F8=C8=A5=
=BF=B4=B5=BD=D5=E2=B8=F6class=CE=AA<code style=3D"font-size: 0.75=
rem; color: rgb(199, 37, 78); background-color: rgb(242, 242, 242=
);">AnnotationConfigServletWebServerApplicationContext</code>=C0=E0=
=D0=CD=A1=A3</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers=
  language-java" style=3D"font-size: 0.75rem; color: rgb(204, 204=
, 204); background: rgb(45, 45, 45);"><code class=3D"java  langua=
ge-java" style=3D"font-size: 1rem; background: none transparent;"=
><span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);=
">protected</span> <span class=3D"token class-name" style=3D"colo=
r:rgb(248, 197, 85);">ConfigurableApplicationContext</span> <span=
 class=3D"token function" style=3D"color:rgb(240, 141, 73);">crea=
teApplicationContext</span><span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span>=0A        <span class=3D"token punctuati=
on">.</span><span class=3D"token punctuation">.</span><span class=
=3D"token punctuation">.</span>=0A                <span class=3D"=
token keyword" style=3D"color:rgb(204, 153, 205);">case</span> SE=
RVLET<span class=3D"token operator" style=3D"color:rgb(103, 205,=20=
204);">:</span>=0A                    contextClass <span class=3D=
"token operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <=
span class=3D"token class-name" style=3D"color:rgb(248, 197, 85);=
">Class</span><span class=3D"token punctuation">.</span><span cla=
ss=3D"token function" style=3D"color:rgb(240, 141, 73);">forName<=
/span><span class=3D"token punctuation">(</span><span class=3D"to=
ken operator" style=3D"color:rgb(103, 205, 204);">*</span><span c=
lass=3D"token operator" style=3D"color:rgb(103, 205, 204);">*</sp=
an>DEFAULT_SERVLET_WEB_CONTEXT_CLASS<span class=3D"token operator=
" style=3D"color:rgb(103, 205, 204);">*</span><span class=3D"toke=
n operator" style=3D"color:rgb(103, 205, 204);">*</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation=
">;</span>=0A                    <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">break</span><span class=3D"toke=
n punctuation">;</span>=0A                <span class=3D"token ke=
yword" style=3D"color:rgb(204, 153, 205);">case</span> <span clas=
s=3D"token punctuation">.</span><span class=3D"token punctuation"=
>.</span><span class=3D"token punctuation">.</span>=0A          =20=
     <span class=3D"token punctuation">}</span>=0A            <sp=
an class=3D"token punctuation">}</span>=0A            <span class=
=3D"token punctuation">.</span><span class=3D"token punctuation">=
.</span><span class=3D"token punctuation">.</span><span class=3D"=
token punctuation">.</span>=0A        <span class=3D"token keywor=
d" style=3D"color:rgb(204, 153, 205);">return</span> <span class=3D=
"token punctuation">(</span><span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">ConfigurableApplicationContext</sp=
an><span class=3D"token punctuation">)</span> <span class=3D"toke=
n class-name" style=3D"color:rgb(248, 197, 85);">BeanUtils</span>=
<span class=3D"token punctuation">.</span><span class=3D"token fu=
nction" style=3D"color:rgb(240, 141, 73);">instantiateClass</span=
><span class=3D"token punctuation">(</span>contextClass<span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation"=
>;</span>=0A    <span class=3D"token punctuation">}</span>=0A</co=
de></pre></div><p>=B8=C3=C0=E0=B5=C4=D2=BB=B8=F6=B8=B8=C0=E0<code=
 style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background=
-color: rgb(242, 242, 242);">GenericApplicationContext</code>=D6=D0=
=A3=AC=B4=B4=BD=A8=C1=CB=D2=BB=B8=F6<code style=3D"font-size: 0.7=
5rem; color: rgb(199, 37, 78); background-color: rgb(242, 242, 24=
2);">beanFactory</code>=A3=AC=D5=E2=B8=F6beanFactory=CA=B5=CF=D6=C1=
=CB<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); ba=
ckground-color: rgb(242, 242, 242);">BeanDefinitionRegistry</code=
>=B5=C4=BD=D3=BF=DA=A3=AC=BA=F3=C3=E6=BB=E1=D3=C3=B5=BD=A1=A3</p>=
<div class=3D"_2Uzcx_"><pre class=3D"line-numbers  language-java"=
 style=3D"font-size: 0.75rem; color: rgb(204, 204, 204); backgrou=
nd: rgb(45, 45, 45);"><code class=3D"java  language-java" style=3D=
"font-size: 1rem; background: none transparent;"><span class=3D"t=
oken keyword" style=3D"color:rgb(204, 153, 205);">public</span> <=
span class=3D"token class-name" style=3D"color:rgb(248, 197, 85);=
">GenericApplicationContext</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span> <span class=
=3D"token punctuation">{</span>=0A   <span class=3D"token keyword=
" style=3D"color:rgb(204, 153, 205);">this</span><span class=3D"t=
oken punctuation">.</span>beanFactory <span class=3D"token operat=
or" style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">new</span> <s=
pan class=3D"token class-name" style=3D"color:rgb(248, 197, 85);"=
>DefaultListableBeanFactory</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A<span class=3D"token punctuation">=
}</span>=0A</code></pre></div><p>createApplicationContext=B7=B5=BB=
=D8=B5=C4=D3=EF=BE=E4=D6=D0=B5=F7=D3=C3=C1=CB<code style=3D"font-=
size: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242=
, 242, 242);">AnnotationConfigServletWebServerApplicationContext<=
/code>=C0=E0=B5=C4=B9=B9=D4=EC=BA=AF=CA=FD=A3=AC</p><div class=3D=
"_2Uzcx_"><pre class=3D"line-numbers  language-java" style=3D"fon=
t-size: 0.75rem; color: rgb(204, 204, 204); background: rgb(45, 4=
5, 45);"><code class=3D"java  language-java" style=3D"font-size:=20=
1rem; background: none transparent;"><span class=3D"token keyword=
" style=3D"color:rgb(204, 153, 205);">public</span> <span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">AnnotationC=
onfigServletWebServerApplicationContext</span><span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span>=
 <span class=3D"token punctuation">{</span>=0A   <span class=3D"t=
oken keyword" style=3D"color:rgb(204, 153, 205);">this</span><spa=
n class=3D"token punctuation">.</span>reader <span class=3D"token=
 operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <span c=
lass=3D"token keyword" style=3D"color:rgb(204, 153, 205);">new</s=
pan> <span class=3D"token class-name" style=3D"color:rgb(248, 197=
, 85);">AnnotatedBeanDefinitionReader</span><span class=3D"token=20=
punctuation">(</span><span class=3D"token keyword" style=3D"color=
:rgb(204, 153, 205);">this</span><span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span>=0A   <span c=
lass=3D"token keyword" style=3D"color:rgb(204, 153, 205);">this</=
span><span class=3D"token punctuation">.</span>scanner <span clas=
s=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D</spa=
n> <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205=
);">new</span> <span class=3D"token class-name" style=3D"color:rg=
b(248, 197, 85);">ClassPathBeanDefinitionScanner</span><span clas=
s=3D"token punctuation">(</span><span class=3D"token keyword" sty=
le=3D"color:rgb(204, 153, 205);">this</span><span class=3D"token=20=
punctuation">)</span><span class=3D"token punctuation">;</span>=0A=
<span class=3D"token punctuation">}</span>=0A</code></pre></div><=
p>=BD=F8=C8=EB=B9=B9=D4=EC=BA=AF=CA=FD=D6=D0=B5=C4=B5=DA=D2=BB=B8=
=F6<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); ba=
ckground-color: rgb(242, 242, 242);">AnnotatedBeanDefinitionReade=
r</code>=A3=AC=D2=BB=D6=B1=B5=E3=B5=BD<code style=3D"font-size: 0=
.75rem; color: rgb(199, 37, 78); background-color: rgb(242, 242,=20=
242);">registerAnnotationConfigProcessors</code>=B5=C4=B7=BD=B7=A8=
=A3=BA</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  lang=
uage-java" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204)=
; background: rgb(45, 45, 45);"><code class=3D"java  language-jav=
a" style=3D"font-size: 1rem; background: none transparent;"><span=
 class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">publ=
ic</span> <span class=3D"token keyword" style=3D"color:rgb(204, 1=
53, 205);">static</span> <span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">Set</span><span class=3D"token generic=
s"><span class=3D"token punctuation">&lt;</span><span class=3D"to=
ken class-name" style=3D"color:rgb(248, 197, 85);">BeanDefinition=
Holder</span><span class=3D"token punctuation">&gt;</span></span>=
 <span class=3D"token function" style=3D"color:rgb(240, 141, 73);=
">registerAnnotationConfigProcessors</span><span class=3D"token p=
unctuation">(</span>=0A      <span class=3D"token class-name" sty=
le=3D"color:rgb(248, 197, 85);">BeanDefinitionRegistry</span> reg=
istry<span class=3D"token punctuation">,</span> <span class=3D"to=
ken annotation punctuation">@Nullable</span> <span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">Object</span> sou=
rce<span class=3D"token punctuation">)</span> <span class=3D"toke=
n punctuation">{</span>=0A   <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">//=B4=B4=BD=A8=C1=CB=D2=BB=B8=F6beanF=
actory</span>=0A   <span class=3D"token class-name" style=3D"colo=
r:rgb(248, 197, 85);">DefaultListableBeanFactory</span> beanFacto=
ry <span class=3D"token operator" style=3D"color:rgb(103, 205, 20=
4);">=3D</span> <span class=3D"token function" style=3D"color:rgb=
(240, 141, 73);">unwrapDefaultListableBeanFactory</span><span cla=
ss=3D"token punctuation">(</span>registry<span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">;</span>=0A =20=
 <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);=
">if</span> <span class=3D"token punctuation">(</span>beanFactory=
 <span class=3D"token operator" style=3D"color:rgb(103, 205, 204)=
;">!=3D</span> <span class=3D"token keyword" style=3D"color:rgb(2=
04, 153, 205);">null</span><span class=3D"token punctuation">)</s=
pan> <span class=3D"token punctuation">{</span>=0A      <span cla=
ss=3D"token punctuation">.</span><span class=3D"token punctuation=
">.</span><span class=3D"token punctuation">.</span><span class=3D=
"token punctuation">.</span><span class=3D"token punctuation">.</=
span>=0A   <span class=3D"token punctuation">}</span>=0A=0A   <sp=
an class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">=
Set</span><span class=3D"token generics"><span class=3D"token pun=
ctuation">&lt;</span><span class=3D"token class-name" style=3D"co=
lor:rgb(248, 197, 85);">BeanDefinitionHolder</span><span class=3D=
"token punctuation">&gt;</span></span> beanDefs <span class=3D"to=
ken operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <spa=
n class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">new=
</span> <span class=3D"token class-name" style=3D"color:rgb(248,=20=
197, 85);">LinkedHashSet</span><span class=3D"token generics"><sp=
an class=3D"token punctuation">&lt;</span><span class=3D"token pu=
nctuation">&gt;</span></span><span class=3D"token punctuation">(<=
/span><span class=3D"token number" style=3D"color:rgb(240, 141, 7=
3);">8</span><span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">;</span>=0A=0A   <span class=3D"token key=
word" style=3D"color:rgb(204, 153, 205);">if</span> <span class=3D=
"token punctuation">(</span><span class=3D"token operator" style=3D=
"color:rgb(103, 205, 204);">!</span>registry<span class=3D"token=20=
punctuation">.</span><span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">containsBeanDefinition</span><span class=3D=
"token punctuation">(</span>CONFIGURATION_ANNOTATION_PROCESSOR_BE=
AN_NAME<span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">)</span> <span class=3D"token punctuation">{</s=
pan>=0A      <span class=3D"token class-name" style=3D"color:rgb(=
248, 197, 85);">RootBeanDefinition</span> def <span class=3D"toke=
n operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <span=20=
class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">new</=
span> <span class=3D"token class-name" style=3D"color:rgb(248, 19=
7, 85);">RootBeanDefinition</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token class-name" style=3D"color:rgb(24=
8, 197, 85);">ConfigurationClassPostProcessor</span><span class=3D=
"token punctuation">.</span><span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">class</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">;</span>=0A  =20=
   def<span class=3D"token punctuation">.</span><span class=3D"to=
ken function" style=3D"color:rgb(240, 141, 73);">setSource</span>=
<span class=3D"token punctuation">(</span>source<span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">;</spa=
n>=0A       <span class=3D"token comment" style=3D"color:rgb(153,=
 153, 153);">//=CC=ED=BC=D3=C1=CB=D2=BB=B8=F6=C0=E0=D0=CD=CE=AACO=
NFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME=B5=C4beanDefinition=A3=
=AC=CF=C2=C3=E6=D2=BB=B6=CE=B4=FA=C2=EB=BF=C9=D2=D4=BF=B4=B5=BD=CB=
=FC=B5=C4=C3=FB=D7=D6=CE=AAinternalConfigurationAnnotationProcess=
or,(ConfigurationClassPostProcessor.class)=CE=AA=C0=E0=D0=CD=B5=C4=
beanDefinition =D5=E2=B8=F6=BA=F3=C3=E6=BB=E1=D3=C3=B5=BD</span>=0A=
      beanDefs<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function" style=3D"color:rgb(240, 141, 73);">add</spa=
n><span class=3D"token punctuation">(</span><span class=3D"token=20=
function" style=3D"color:rgb(240, 141, 73);">registerPostProcesso=
r</span><span class=3D"token punctuation">(</span>registry<span c=
lass=3D"token punctuation">,</span> def<span class=3D"token punct=
uation">,</span> CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME<spa=
n class=3D"token punctuation">)</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">;</span>=0A   <s=
pan class=3D"token punctuation">}</span>=0A=0A   <span class=3D"t=
oken punctuation">.</span><span class=3D"token punctuation">.</sp=
an><span class=3D"token punctuation">.</span><span class=3D"token=
 punctuation">.</span>=0A   <span class=3D"token punctuation">}</=
span>=0A</code></pre></div><div class=3D"_2Uzcx_"><pre class=3D"l=
ine-numbers  language-java" style=3D"font-size: 0.75rem; color: r=
gb(204, 204, 204); background: rgb(45, 45, 45);"><code class=3D"j=
ava  language-java" style=3D"font-size: 1rem; background: none tr=
ansparent;"><span class=3D"token keyword" style=3D"color:rgb(204,=
 153, 205);">public</span> <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">static</span> <span class=3D"token ke=
yword" style=3D"color:rgb(204, 153, 205);">final</span> <span cla=
ss=3D"token class-name" style=3D"color:rgb(248, 197, 85);">String=
</span> CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME <span class=3D=
"token operator" style=3D"color:rgb(103, 205, 204);">=3D</span>=0A=
      <span class=3D"token string" style=3D"color:rgb(126, 198, 1=
53);">"org.springframework.context.annotation.internalConfigurati=
onAnnotationProcessor"</span><span class=3D"token punctuation">;<=
/span>=0A</code></pre></div><p>=BD=D3=D7=C5=BD=F8=C8=EB=B5=BD=B9=B9=
=D4=EC=BA=AF=CA=FD=D6=D0=B5=C4new ClassPathBeanDefinitionScanner(=
)=A3=AC</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  lan=
guage-java" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204=
); background: rgb(45, 45, 45);"><code class=3D"java  language-ja=
va" style=3D"font-size: 1rem; background: none transparent;"><spa=
n class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">pub=
lic</span> <span class=3D"token class-name" style=3D"color:rgb(24=
8, 197, 85);">ClassPathBeanDefinitionScanner</span><span class=3D=
"token punctuation">(</span><span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">BeanDefinitionRegistry</span> regi=
stry<span class=3D"token punctuation">,</span> <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">boolean</span> us=
eDefaultFilters<span class=3D"token punctuation">,</span>=0A    =20=
 <span class=3D"token class-name" style=3D"color:rgb(248, 197, 85=
);">Environment</span> environment<span class=3D"token punctuatio=
n">,</span> <span class=3D"token annotation punctuation">@Nullabl=
e</span> <span class=3D"token class-name" style=3D"color:rgb(248,=
 197, 85);">ResourceLoader</span> resourceLoader<span class=3D"to=
ken punctuation">)</span> <span class=3D"token punctuation">{</sp=
an>=0A    <span class=3D"token punctuation">.</span><span class=3D=
"token punctuation">.</span><span class=3D"token punctuation">.</=
span><span class=3D"token punctuation">.</span>=0A    <span class=
=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=C8=EB=BF=
=DA=B4=A6=C4=AC=C8=CFuseDefaultFilters=CE=AAtrue</span>=0A   <spa=
n class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">if<=
/span> <span class=3D"token punctuation">(</span>useDefaultFilter=
s<span class=3D"token punctuation">)</span> <span class=3D"token=20=
punctuation">{</span>=0A      <span class=3D"token function" styl=
e=3D"color:rgb(240, 141, 73);">registerDefaultFilters</span><span=
 class=3D"token punctuation">(</span><span class=3D"token punctua=
tion">)</span><span class=3D"token punctuation">;</span>=0A   <sp=
an class=3D"token punctuation">}</span>=0A   <span class=3D"token=
 function" style=3D"color:rgb(240, 141, 73);">setEnvironment</spa=
n><span class=3D"token punctuation">(</span>environment<span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation"=
>;</span>=0A   <span class=3D"token function" style=3D"color:rgb(=
240, 141, 73);">setResourceLoader</span><span class=3D"token punc=
tuation">(</span>resourceLoader<span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">;</span>=0A<span class=3D=
"token punctuation">}</span>=0A</code></pre></div><p>=BD=F8=C8=EB=
<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); backg=
round-color: rgb(242, 242, 242);">registerDefaultFilters</code>=B7=
=BD=B7=A8=A3=AC</p><div class=3D"_2Uzcx_"><pre class=3D"line-numb=
ers  language-java" style=3D"font-size: 0.75rem; color: rgb(204,=20=
204, 204); background: rgb(45, 45, 45);"><code class=3D"java  lan=
guage-java" style=3D"font-size: 1rem; background: none transparen=
t;"><span class=3D"token keyword" style=3D"color:rgb(204, 153, 20=
5);">protected</span> <span class=3D"token keyword" style=3D"colo=
r:rgb(204, 153, 205);">void</span> <span class=3D"token function"=
 style=3D"color:rgb(240, 141, 73);">registerDefaultFilters</span>=
<span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span> <span class=3D"token punctuation">{</span>=0A=
    <span class=3D"token comment" style=3D"color:rgb(153, 153, 15=
3);">//=D5=E2=C0=EF=B0=D1Component.class=D7=F7=CE=AA=C4=AC=C8=CF=B5=
=C4includeFilter=BC=D3=C8=EB=C1=CB=B9=FD=C2=CB=C6=F7</span>=0A  =20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>this</span><span class=3D"token punctuation">.</span>includeFilt=
ers<span class=3D"token punctuation">.</span><span class=3D"token=
 function" style=3D"color:rgb(240, 141, 73);">add</span><span cla=
ss=3D"token punctuation">(</span><span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">new</span> <span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">AnnotationTypeFil=
ter</span><span class=3D"token punctuation">(</span><span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">Component</=
span><span class=3D"token punctuation">.</span><span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">class</span><span=
 class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">)</span><span class=3D"token punctuation">;</span>=0A   <sp=
an class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">=
ClassLoader</span> cl <span class=3D"token operator" style=3D"col=
or:rgb(103, 205, 204);">=3D</span> <span class=3D"token class-nam=
e" style=3D"color:rgb(248, 197, 85);">ClassPathScanningCandidateC=
omponentProvider</span><span class=3D"token punctuation">.</span>=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>class</span><span class=3D"token punctuation">.</span><span clas=
s=3D"token function" style=3D"color:rgb(240, 141, 73);">getClassL=
oader</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">=
;</span>=0A   <span class=3D"token keyword" style=3D"color:rgb(20=
4, 153, 205);">try</span> <span class=3D"token punctuation">{</sp=
an>=0A      <span class=3D"token punctuation">.</span><span class=
=3D"token punctuation">.</span><span class=3D"token punctuation">=
.</span><span class=3D"token punctuation">.</span><span class=3D"=
token punctuation">.</span><span class=3D"token punctuation">.</s=
pan>=0A<span class=3D"token punctuation">}</span>=0A</code></pre>=
</div><h3 style=3D"font-size: 1.375rem;">2.prepareContext()</h3><=
p>prepareContext()=B7=BD=B7=A8=C0=EF=D3=D0=B8=F6load=BA=AF=CA=FD=A3=
=AC=BD=F8=C8=EBload=BA=AF=CA=FD=B5=C4=BE=DF=CC=E5=CA=B5=CF=D6=A3=AC=
</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  language-j=
ava" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204); back=
ground: rgb(45, 45, 45);"><code class=3D"java  language-java" sty=
le=3D"font-size: 1rem; background: none transparent;"><span class=
=3D"token keyword" style=3D"color:rgb(204, 153, 205);">private</s=
pan> <span class=3D"token keyword" style=3D"color:rgb(204, 153, 2=
05);">int</span> <span class=3D"token function" style=3D"color:rg=
b(240, 141, 73);">load</span><span class=3D"token punctuation">(<=
/span><span class=3D"token class-name" style=3D"color:rgb(248, 19=
7, 85);">Object</span> source<span class=3D"token punctuation">)<=
/span> <span class=3D"token punctuation">{</span>=0A   <span clas=
s=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Assert<=
/span><span class=3D"token punctuation">.</span><span class=3D"to=
ken function" style=3D"color:rgb(240, 141, 73);">notNull</span><s=
pan class=3D"token punctuation">(</span>source<span class=3D"toke=
n punctuation">,</span> <span class=3D"token string" style=3D"col=
or:rgb(126, 198, 153);">"Source must not be null"</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation=
">;</span>=0A   <span class=3D"token keyword" style=3D"color:rgb(=
204, 153, 205);">if</span> <span class=3D"token punctuation">(</s=
pan>source <span class=3D"token keyword" style=3D"color:rgb(204,=20=
153, 205);">instanceof</span> <span class=3D"token class-name" st=
yle=3D"color:rgb(248, 197, 85);">Class</span><span class=3D"token=
 generics"><span class=3D"token punctuation">&lt;</span><span cla=
ss=3D"token operator" style=3D"color:rgb(103, 205, 204);">?</span=
><span class=3D"token punctuation">&gt;</span></span><span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A      <span class=3D"token keyword" style=3D"color:rgb(2=
04, 153, 205);">return</span> <span class=3D"token function" styl=
e=3D"color:rgb(240, 141, 73);">load</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token punctuation">(</span><spa=
n class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">C=
lass</span><span class=3D"token generics"><span class=3D"token pu=
nctuation">&lt;</span><span class=3D"token operator" style=3D"col=
or:rgb(103, 205, 204);">?</span><span class=3D"token punctuation"=
>&gt;</span></span><span class=3D"token punctuation">)</span> sou=
rce<span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">;</span>=0A   <span class=3D"token punctuation">}</=
span>=0A   <span class=3D"token keyword" style=3D"color:rgb(204,=20=
153, 205);">if</span> <span class=3D"token punctuation">(</span>s=
ource <span class=3D"token keyword" style=3D"color:rgb(204, 153,=20=
205);">instanceof</span> <span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">Resource</span><span class=3D"token pu=
nctuation">)</span> <span class=3D"token punctuation">{</span>=0A=
      <span class=3D"token keyword" style=3D"color:rgb(204, 153,=20=
205);">return</span> <span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">load</span><span class=3D"token punctuation=
">(</span><span class=3D"token punctuation">(</span><span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">Resource</s=
pan><span class=3D"token punctuation">)</span> source<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">;</=
span>=0A   <span class=3D"token punctuation">}</span>=0A   <span=20=
class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">if</s=
pan> <span class=3D"token punctuation">(</span>source <span class=
=3D"token keyword" style=3D"color:rgb(204, 153, 205);">instanceof=
</span> <span class=3D"token class-name" style=3D"color:rgb(248,=20=
197, 85);">Package</span><span class=3D"token punctuation">)</spa=
n> <span class=3D"token punctuation">{</span>=0A      <span class=
=3D"token punctuation">.</span><span class=3D"token punctuation">=
.</span><span class=3D"token punctuation">.</span><span class=3D"=
token punctuation">.</span>=0A<span class=3D"token punctuation">}=
</span>=0A</code></pre></div><p>=D2=F2=CE=AA=D6=F7=C0=E0=B5=C4run=
=B7=BD=B7=A8=B4=AB=C8=EB=B5=C4=CA=C7xxxxApplication.class=A3=AC=CB=
=F9=D2=D4=D5=E2=C0=EF=D7=DF=B5=DA=D2=BB=B8=F6=B7=D6=D6=A7</p><div=
 class=3D"_2Uzcx_"><pre class=3D"line-numbers  language-java" sty=
le=3D"font-size: 0.75rem; color: rgb(204, 204, 204); background:=20=
rgb(45, 45, 45);"><code class=3D"java  language-java" style=3D"fo=
nt-size: 1rem; background: none transparent;"><span class=3D"toke=
n keyword" style=3D"color:rgb(204, 153, 205);">private</span> <sp=
an class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">in=
t</span> <span class=3D"token function" style=3D"color:rgb(240, 1=
41, 73);">load</span><span class=3D"token punctuation">(</span><s=
pan class=3D"token class-name" style=3D"color:rgb(248, 197, 85);"=
>Class</span><span class=3D"token generics"><span class=3D"token=20=
punctuation">&lt;</span><span class=3D"token operator" style=3D"c=
olor:rgb(103, 205, 204);">?</span><span class=3D"token punctuatio=
n">&gt;</span></span> source<span class=3D"token punctuation">)</=
span> <span class=3D"token punctuation">{</span>=0A   <span class=
=3D"token punctuation">.</span><span class=3D"token punctuation">=
.</span><span class=3D"token punctuation">.</span><span class=3D"=
token punctuation">.</span><span class=3D"token punctuation">.</s=
pan>=0A   <span class=3D"token comment" style=3D"color:rgb(153, 1=
53, 153);">//isComponent=C0=EF=C3=E6=C5=D0=B6=CF=CA=C7=B7=F1=D3=D0=
Component=B5=C4=D7=A2=BD=E2=A3=AC=C6=F4=B6=AF=C0=E0=CA=C7=D3=D0=B5=
=C4=A3=AC=CB=F9=D2=D4=D5=E2=C0=EF=BD=AB=C6=F4=B6=AF=C0=E0=BC=D3=D4=
=D8=BD=F8=C0=B4=C1=CB</span>=0A   <span class=3D"token keyword" s=
tyle=3D"color:rgb(204, 153, 205);">if</span> <span class=3D"token=
 punctuation">(</span><span class=3D"token function" style=3D"col=
or:rgb(240, 141, 73);">isComponent</span><span class=3D"token pun=
ctuation">(</span>source<span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">)</span> <span class=3D"token=20=
punctuation">{</span>=0A      <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">this</span><span class=3D"token pu=
nctuation">.</span>annotatedReader<span class=3D"token punctuatio=
n">.</span><span class=3D"token function" style=3D"color:rgb(240,=
 141, 73);">register</span><span class=3D"token punctuation">(</s=
pan>source<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A      <span class=3D"token keyword=
" style=3D"color:rgb(204, 153, 205);">return</span> <span class=3D=
"token number" style=3D"color:rgb(240, 141, 73);">1</span><span c=
lass=3D"token punctuation">;</span>=0A   <span class=3D"token pun=
ctuation">}</span>=0A   <span class=3D"token keyword" style=3D"co=
lor:rgb(204, 153, 205);">return</span> <span class=3D"token numbe=
r" style=3D"color:rgb(240, 141, 73);">0</span><span class=3D"toke=
n punctuation">;</span>=0A<span class=3D"token punctuation">}</sp=
an>=0A</code></pre></div><h3 style=3D"font-size: 1.375rem;">3.ref=
reshContext()</h3><p>=B5=E3=BB=F7=BD=F8=C8=EBrefresh=B5=C4=BE=DF=CC=
=E5=CA=B5=CF=D6=A3=AC=BF=B4=B5=BD=D2=BB=B8=F6invokeBeanFactoryPos=
tProcessors=B5=C4=B7=BD=B7=A8</p><div class=3D"_2Uzcx_"><pre clas=
s=3D"line-numbers  language-java" style=3D"font-size: 0.75rem; co=
lor: rgb(204, 204, 204); background: rgb(45, 45, 45);"><code clas=
s=3D"java  language-java" style=3D"font-size: 1rem; background: n=
one transparent;"><span class=3D"token annotation punctuation">@O=
verride</span>=0A<span class=3D"token keyword" style=3D"color:rgb=
(204, 153, 205);">public</span> <span class=3D"token keyword" sty=
le=3D"color:rgb(204, 153, 205);">void</span> <span class=3D"token=
 function" style=3D"color:rgb(240, 141, 73);">refresh</span><span=
 class=3D"token punctuation">(</span><span class=3D"token punctua=
tion">)</span> <span class=3D"token keyword" style=3D"color:rgb(2=
04, 153, 205);">throws</span> <span class=3D"token class-name" st=
yle=3D"color:rgb(248, 197, 85);">BeansException</span><span class=
=3D"token punctuation">,</span> <span class=3D"token class-name"=20=
style=3D"color:rgb(248, 197, 85);">IllegalStateException</span> <=
span class=3D"token punctuation">{</span>=0A   <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">synchronized</spa=
n> <span class=3D"token punctuation">(</span><span class=3D"token=
 keyword" style=3D"color:rgb(204, 153, 205);">this</span><span cl=
ass=3D"token punctuation">.</span>startupShutdownMonitor<span cla=
ss=3D"token punctuation">)</span> <span class=3D"token punctuatio=
n">{</span>=0A      <span class=3D"token comment" style=3D"color:=
rgb(153, 153, 153);">// Prepare this context for refreshing.</spa=
n>=0A      <span class=3D"token function" style=3D"color:rgb(240,=
 141, 73);">prepareRefresh</span><span class=3D"token punctuation=
">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A=0A      <span class=3D"token comm=
ent" style=3D"color:rgb(153, 153, 153);">// Tell the subclass to=20=
refresh the internal bean factory.</span>=0A      <span class=3D"=
token class-name" style=3D"color:rgb(248, 197, 85);">Configurable=
ListableBeanFactory</span> beanFactory <span class=3D"token opera=
tor" style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">obtainFreshBe=
anFactory</span><span class=3D"token punctuation">(</span><span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuati=
on">;</span>=0A=0A      <span class=3D"token comment" style=3D"co=
lor:rgb(153, 153, 153);">// Prepare the bean factory for use in t=
his context.</span>=0A      <span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">prepareBeanFactory</span><span class=3D=
"token punctuation">(</span>beanFactory<span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">;</span>=0A=0A=20=
     <span class=3D"token keyword" style=3D"color:rgb(204, 153, 2=
05);">try</span> <span class=3D"token punctuation">{</span>=0A  =20=
      <span class=3D"token comment" style=3D"color:rgb(153, 153,=20=
153);">// Allows post-processing of the bean factory in context s=
ubclasses.</span>=0A         <span class=3D"token function" style=
=3D"color:rgb(240, 141, 73);">postProcessBeanFactory</span><span=20=
class=3D"token punctuation">(</span>beanFactory<span class=3D"tok=
en punctuation">)</span><span class=3D"token punctuation">;</span=
>=0A=0A         <span class=3D"token comment" style=3D"color:rgb(=
153, 153, 153);">//=D5=E2=C0=EF=D0=B4=D7=C5=D7=A2=B2=E1bean</span=
>=0A         <span class=3D"token function" style=3D"color:rgb(24=
0, 141, 73);">invokeBeanFactoryPostProcessors</span><span class=3D=
"token punctuation">(</span>beanFactory<span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">;</span>=0A=0A=20=
        <span class=3D"token comment" style=3D"color:rgb(153, 153=
, 153);">// Register bean processors that intercept bean creation=
.</span>=0A         <span class=3D"token function" style=3D"color=
:rgb(240, 141, 73);">registerBeanPostProcessors</span><span class=
=3D"token punctuation">(</span>beanFactory<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">;</span>=0A=0A=
         <span class=3D"token comment" style=3D"color:rgb(153, 15=
3, 153);">// Initialize message source for this context.</span>=0A=
         <span class=3D"token function" style=3D"color:rgb(240, 1=
41, 73);">initMessageSource</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A=0A         <span class=3D"token p=
unctuation">.</span><span class=3D"token punctuation">.</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token punct=
uation">.</span>=0A</code></pre></div><p>=BD=F8=C8=EB=C6=E4=CA=B5=
=CF=D6=A3=AC=D5=E2=C0=EF=B4=AB=C8=EB=B5=C4beanFactory=B5=C4=BE=CD=
=CA=C71.createApplicationContext()=D6=D0=B5=DA=D2=BB=B8=F6=B7=BD=B7=
=A8=B4=B4=BD=A8=B5=C4=B5=C4beanFactory</p><div class=3D"_2Uzcx_">=
<pre class=3D"line-numbers  language-java" style=3D"font-size: 0.=
75rem; color: rgb(204, 204, 204); background: rgb(45, 45, 45);"><=
code class=3D"java  language-java" style=3D"font-size: 1rem; back=
ground: none transparent;"><span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">protected</span> <span class=3D"token=
 keyword" style=3D"color:rgb(204, 153, 205);">void</span> <span c=
lass=3D"token function" style=3D"color:rgb(240, 141, 73);">invoke=
BeanFactoryPostProcessors</span><span class=3D"token punctuation"=
>(</span><span class=3D"token class-name" style=3D"color:rgb(248,=
 197, 85);">ConfigurableListableBeanFactory</span> beanFactory<sp=
an class=3D"token punctuation">)</span> <span class=3D"token punc=
tuation">{</span>=0A   <span class=3D"token class-name" style=3D"=
color:rgb(248, 197, 85);">PostProcessorRegistrationDelegate</span=
><span class=3D"token punctuation">.</span><span class=3D"token f=
unction" style=3D"color:rgb(240, 141, 73);">invokeBeanFactoryPost=
Processors</span><span class=3D"token punctuation">(</span>beanFa=
ctory<span class=3D"token punctuation">,</span> <span class=3D"to=
ken function" style=3D"color:rgb(240, 141, 73);">getBeanFactoryPo=
stProcessors</span><span class=3D"token punctuation">(</span><spa=
n class=3D"token punctuation">)</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">;</span>=0A=0A =20=
 <span class=3D"token punctuation">.</span><span class=3D"token p=
unctuation">.</span><span class=3D"token punctuation">.</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token punct=
uation">.</span>=0A<span class=3D"token punctuation">}</span>=0A<=
/code></pre></div><p>=BD=F8=C8=EB=D5=E2=B8=F6=B7=BD=B7=A8=A3=AC=D2=
=F2=CE=AA1.createApplicationContext=D6=D0=B4=B4=BD=A8=B5=C4beanFa=
ctory=CA=B5=CF=D6=C1=CBBeanDefinitionRegistry=BD=D3=BF=DA=A3=AC=CB=
=F9=D2=D4=CE=D2=C3=C7=BD=F8=C8=EB=D5=E2=B8=F6=B7=D6=D6=A7=BF=B4=D2=
=BB=BF=B4=A3=AC</p><div class=3D"_2Uzcx_"><pre class=3D"line-numb=
ers  language-java" style=3D"font-size: 0.75rem; color: rgb(204,=20=
204, 204); background: rgb(45, 45, 45);"><code class=3D"java  lan=
guage-java" style=3D"font-size: 1rem; background: none transparen=
t;"><span class=3D"token keyword" style=3D"color:rgb(204, 153, 20=
5);">public</span> <span class=3D"token keyword" style=3D"color:r=
gb(204, 153, 205);">static</span> <span class=3D"token keyword" s=
tyle=3D"color:rgb(204, 153, 205);">void</span> <span class=3D"tok=
en function" style=3D"color:rgb(240, 141, 73);">invokeBeanFactory=
PostProcessors</span><span class=3D"token punctuation">(</span>=0A=
      <span class=3D"token class-name" style=3D"color:rgb(248, 19=
7, 85);">ConfigurableListableBeanFactory</span> beanFactory<span=20=
class=3D"token punctuation">,</span> <span class=3D"token class-n=
ame" style=3D"color:rgb(248, 197, 85);">List</span><span class=3D=
"token generics"><span class=3D"token punctuation">&lt;</span><sp=
an class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">=
BeanFactoryPostProcessor</span><span class=3D"token punctuation">=
&gt;</span></span> beanFactoryPostProcessors<span class=3D"token=20=
punctuation">)</span> <span class=3D"token punctuation">{</span>=0A=
=0A   <span class=3D"token class-name" style=3D"color:rgb(248, 19=
7, 85);">Set</span><span class=3D"token generics"><span class=3D"=
token punctuation">&lt;</span><span class=3D"token class-name" st=
yle=3D"color:rgb(248, 197, 85);">String</span><span class=3D"toke=
n punctuation">&gt;</span></span> processedBeans <span class=3D"t=
oken operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <sp=
an class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">ne=
w</span> <span class=3D"token class-name" style=3D"color:rgb(248,=
 197, 85);">HashSet</span><span class=3D"token generics"><span cl=
ass=3D"token punctuation">&lt;</span><span class=3D"token punctua=
tion">&gt;</span></span><span class=3D"token punctuation">(</span=
><span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">;</span>=0A    <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">//BeanDefinitionRegistry</span>=0A  =20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>if</span> <span class=3D"token punctuation">(</span>beanFactory=20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>instanceof</span> <span class=3D"token class-name" style=3D"colo=
r:rgb(248, 197, 85);">BeanDefinitionRegistry</span><span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A      <span class=3D"token punctuation">.</span><span cl=
ass=3D"token punctuation">.</span><span class=3D"token punctuatio=
n">.</span><span class=3D"token punctuation">.</span><span class=3D=
"token punctuation">.</span>=0A      <span class=3D"token keyword=
" style=3D"color:rgb(204, 153, 205);">for</span> <span class=3D"t=
oken punctuation">(</span><span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">BeanFactoryPostProcessor</span> postPr=
ocessor <span class=3D"token operator" style=3D"color:rgb(103, 20=
5, 204);">:</span> beanFactoryPostProcessors<span class=3D"token=20=
punctuation">)</span> <span class=3D"token punctuation">{</span>=0A=
      <span class=3D"token comment" style=3D"color:rgb(153, 153,=20=
153);">//BeanDefinitionRegistryPostProcessor</span>=0A         <s=
pan class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">i=
f</span> <span class=3D"token punctuation">(</span>postProcessor=20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>instanceof</span> <span class=3D"token class-name" style=3D"colo=
r:rgb(248, 197, 85);">BeanDefinitionRegistryPostProcessor</span><=
span class=3D"token punctuation">)</span> <span class=3D"token pu=
nctuation">{</span>=0A            <span class=3D"token class-name=
" style=3D"color:rgb(248, 197, 85);">BeanDefinitionRegistryPostPr=
ocessor</span> registryProcessor <span class=3D"token operator" s=
tyle=3D"color:rgb(103, 205, 204);">=3D</span>=0A                =20=
 <span class=3D"token punctuation">(</span><span class=3D"token c=
lass-name" style=3D"color:rgb(248, 197, 85);">BeanDefinitionRegis=
tryPostProcessor</span><span class=3D"token punctuation">)</span>=
 postProcessor<span class=3D"token punctuation">;</span>=0A     =20=
      registryProcessor<span class=3D"token punctuation">.</span>=
<span class=3D"token function" style=3D"color:rgb(240, 141, 73);"=
>postProcessBeanDefinitionRegistry</span><span class=3D"token pun=
ctuation">(</span>registry<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">;</span>=0A            <span=
 class=3D"token punctuation">.</span><span class=3D"token punctua=
tion">.</span><span class=3D"token punctuation">.</span><span cla=
ss=3D"token punctuation">.</span><span class=3D"token punctuation=
">.</span>=0A      <span class=3D"token punctuation">}</span>=0A<=
/code></pre></div><p>=BB=B9=CA=C71.createApplicationContext()=D6=D0=
=B4=B4=BD=A8=B5=C4ConfigurationClassPostProcessor=C0=E0=A3=AC=B8=D5=
=BA=C3=CA=B5=CF=D6=C1=CBBeanDefinitionRegistryPostProcessor=A3=AC=
=CB=F9=D2=D4=D5=E2=C0=EF=CE=D2=C3=C7=D6=B1=BD=D3=BF=B4Configurati=
onClassPostProcessor=C0=DB=B5=C4postProcessBeanDefinitionRegistry=
=B7=BD=B7=A8=A3=AC=BF=C9=D2=D4=BF=B4=B5=BD=D5=E2=C0=EF=B5=F7=D3=C3=
=C1=CBprocessConfigBeanDefinitions=B7=BD=B7=A8,</p><div class=3D"=
_2Uzcx_"><pre class=3D"line-numbers  language-java" style=3D"font=
-size: 0.75rem; color: rgb(204, 204, 204); background: rgb(45, 45=
, 45);"><code class=3D"java  language-java" style=3D"font-size: 1=
rem; background: none transparent;"><span class=3D"token keyword"=
 style=3D"color:rgb(204, 153, 205);">public</span> <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">void</span> <=
span class=3D"token function" style=3D"color:rgb(240, 141, 73);">=
postProcessBeanDefinitionRegistry</span><span class=3D"token punc=
tuation">(</span><span class=3D"token class-name" style=3D"color:=
rgb(248, 197, 85);">BeanDefinitionRegistry</span> registry<span c=
lass=3D"token punctuation">)</span> <span class=3D"token punctuat=
ion">{</span>=0A   <span class=3D"token punctuation">.</span><spa=
n class=3D"token punctuation">.</span><span class=3D"token punctu=
ation">.</span><span class=3D"token punctuation">.</span>=0A=0A =20=
 <span class=3D"token function" style=3D"color:rgb(240, 141, 73);=
">processConfigBeanDefinitions</span><span class=3D"token punctua=
tion">(</span>registry<span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">;</span>=0A<span class=3D"token=20=
punctuation">}</span>=0A</code></pre></div><p>=BD=F8=C8=EB=D5=E2=B8=
=F6=B7=BD=B7=A8=A3=BA</p><div class=3D"_2Uzcx_"><pre class=3D"lin=
e-numbers  language-java" style=3D"font-size: 0.75rem; color: rgb=
(204, 204, 204); background: rgb(45, 45, 45);"><code class=3D"jav=
a  language-java" style=3D"font-size: 1rem; background: none tran=
sparent;"><span class=3D"token keyword" style=3D"color:rgb(204, 1=
53, 205);">public</span> <span class=3D"token keyword" style=3D"c=
olor:rgb(204, 153, 205);">void</span> <span class=3D"token functi=
on" style=3D"color:rgb(240, 141, 73);">processConfigBeanDefinitio=
ns</span><span class=3D"token punctuation">(</span><span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">BeanDefinit=
ionRegistry</span> registry<span class=3D"token punctuation">)</s=
pan> <span class=3D"token punctuation">{</span>=0A   <span class=3D=
"token punctuation">.</span><span class=3D"token punctuation">.</=
span><span class=3D"token punctuation">.</span><span class=3D"tok=
en punctuation">.</span><span class=3D"token punctuation">.</span=
>=0A=0A   <span class=3D"token class-name" style=3D"color:rgb(248=
, 197, 85);">Set</span><span class=3D"token generics"><span class=
=3D"token punctuation">&lt;</span><span class=3D"token class-name=
" style=3D"color:rgb(248, 197, 85);">BeanDefinitionHolder</span><=
span class=3D"token punctuation">&gt;</span></span> candidates <s=
pan class=3D"token operator" style=3D"color:rgb(103, 205, 204);">=
=3D</span> <span class=3D"token keyword" style=3D"color:rgb(204,=20=
153, 205);">new</span> <span class=3D"token class-name" style=3D"=
color:rgb(248, 197, 85);">LinkedHashSet</span><span class=3D"toke=
n generics"><span class=3D"token punctuation">&lt;</span><span cl=
ass=3D"token punctuation">&gt;</span></span><span class=3D"token=20=
punctuation">(</span>configCandidates<span class=3D"token punctua=
tion">)</span><span class=3D"token punctuation">;</span>=0A   <sp=
an class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">=
Set</span><span class=3D"token generics"><span class=3D"token pun=
ctuation">&lt;</span><span class=3D"token class-name" style=3D"co=
lor:rgb(248, 197, 85);">ConfigurationClass</span><span class=3D"t=
oken punctuation">&gt;</span></span> alreadyParsed <span class=3D=
"token operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <=
span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">=
new</span> <span class=3D"token class-name" style=3D"color:rgb(24=
8, 197, 85);">HashSet</span><span class=3D"token generics"><span=20=
class=3D"token punctuation">&lt;</span><span class=3D"token punct=
uation">&gt;</span></span><span class=3D"token punctuation">(</sp=
an>configCandidates<span class=3D"token punctuation">.</span><spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">siz=
e</span><span class=3D"token punctuation">(</span><span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">)</s=
pan><span class=3D"token punctuation">;</span>=0A   <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">do</span> <sp=
an class=3D"token punctuation">{</span>=0A      parser<span class=
=3D"token punctuation">.</span><span class=3D"token function" sty=
le=3D"color:rgb(240, 141, 73);">parse</span><span class=3D"token=20=
punctuation">(</span>candidates<span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">;</span>=0A      parser=
<span class=3D"token punctuation">.</span><span class=3D"token fu=
nction" style=3D"color:rgb(240, 141, 73);">validate</span><span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuati=
on">)</span><span class=3D"token punctuation">;</span>=0A=0A    =20=
 <span class=3D"token punctuation">.</span><span class=3D"token p=
unctuation">.</span><span class=3D"token punctuation">.</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token punct=
uation">.</span>=0A      <span class=3D"token punctuation">}</spa=
n>=0A</code></pre></div><p>=BD=F8=C8=EBparse(candidates)=A3=AC=D5=
=E2=C0=EF=D4=D9=C7=B0=C3=E6=B4=B4=BD=A8ConfigurationClassPostProc=
essor=B5=C4=CA=B1=BA=F2=B8=F8=CB=FC=C9=FA=B3=C9=C1=CB=D2=BB=B8=F6=
Holder=A3=AC=B6=F8=D5=E2=B8=F6beanDefinition=B5=C4=C0=E0=D0=CD=BE=
=CD=CA=C7AnnotatedBeanDefinition=A3=AC=CB=F9=D2=D4=D7=DF=D5=E2=B8=
=F6=B7=D6=D6=A7=B5=C4parse=B7=BD=B7=A8</p><div class=3D"_2Uzcx_">=
<pre class=3D"line-numbers  language-java" style=3D"font-size: 0.=
75rem; color: rgb(204, 204, 204); background: rgb(45, 45, 45);"><=
code class=3D"java  language-java" style=3D"font-size: 1rem; back=
ground: none transparent;"><span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">public</span> <span class=3D"token ke=
yword" style=3D"color:rgb(204, 153, 205);">void</span> <span clas=
s=3D"token function" style=3D"color:rgb(240, 141, 73);">parse</sp=
an><span class=3D"token punctuation">(</span><span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">Set</span><span c=
lass=3D"token generics"><span class=3D"token punctuation">&lt;</s=
pan><span class=3D"token class-name" style=3D"color:rgb(248, 197,=
 85);">BeanDefinitionHolder</span><span class=3D"token punctuatio=
n">&gt;</span></span> configCandidates<span class=3D"token punctu=
ation">)</span> <span class=3D"token punctuation">{</span>=0A   <=
span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">=
for</span> <span class=3D"token punctuation">(</span><span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">BeanDefinit=
ionHolder</span> holder <span class=3D"token operator" style=3D"c=
olor:rgb(103, 205, 204);">:</span> configCandidates<span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A      <span class=3D"token class-name" style=3D"color:rg=
b(248, 197, 85);">BeanDefinition</span> bd <span class=3D"token o=
perator" style=3D"color:rgb(103, 205, 204);">=3D</span> holder<sp=
an class=3D"token punctuation">.</span><span class=3D"token funct=
ion" style=3D"color:rgb(240, 141, 73);">getBeanDefinition</span><=
span class=3D"token punctuation">(</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">;</span>=0A =20=
    <span class=3D"token keyword" style=3D"color:rgb(204, 153, 20=
5);">try</span> <span class=3D"token punctuation">{</span>=0A   =20=
      <span class=3D"token comment" style=3D"color:rgb(153, 153,=20=
153);">//=D5=E2=B8=F6=B7=D6=D6=A7</span>=0A         <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">if</span> <sp=
an class=3D"token punctuation">(</span>bd <span class=3D"token ke=
yword" style=3D"color:rgb(204, 153, 205);">instanceof</span> <spa=
n class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">A=
nnotatedBeanDefinition</span><span class=3D"token punctuation">)<=
/span> <span class=3D"token punctuation">{</span>=0A            <=
span class=3D"token function" style=3D"color:rgb(240, 141, 73);">=
parse</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">=
(</span><span class=3D"token class-name" style=3D"color:rgb(248,=20=
197, 85);">AnnotatedBeanDefinition</span><span class=3D"token pun=
ctuation">)</span> bd<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">.</span><span class=3D"token func=
tion" style=3D"color:rgb(240, 141, 73);">getMetadata</span><span=20=
class=3D"token punctuation">(</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">,</span> holder<sp=
an class=3D"token punctuation">.</span><span class=3D"token funct=
ion" style=3D"color:rgb(240, 141, 73);">getBeanName</span><span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuati=
on">)</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">;</span>=0A         <span class=3D"token p=
unctuation">}</span>=0A         <span class=3D"token keyword" sty=
le=3D"color:rgb(204, 153, 205);">else</span> <span class=3D"token=
 keyword" style=3D"color:rgb(204, 153, 205);">if</span> <span cla=
ss=3D"token punctuation">(</span>bd <span class=3D"token keyword"=
 style=3D"color:rgb(204, 153, 205);">instanceof</span> <span clas=
s=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Abstrac=
tBeanDefinition</span> <span class=3D"token operator" style=3D"co=
lor:rgb(103, 205, 204);">&amp;&amp;</span> <span class=3D"token p=
unctuation">(</span><span class=3D"token punctuation">(</span><sp=
an class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">=
AbstractBeanDefinition</span><span class=3D"token punctuation">)<=
/span> bd<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">hasBeanClass</span><span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span>=
<span class=3D"token punctuation">)</span> <span class=3D"token p=
unctuation">{</span>=0A           <span class=3D"token punctuatio=
n">.</span><span class=3D"token punctuation">.</span><span class=3D=
"token punctuation">.</span><span class=3D"token punctuation">.</=
span>=0A<span class=3D"token punctuation">}</span>=0A</code></pre=
></div><p>=D2=BB=C2=B7=B5=E3=CF=C2=C8=A5=A3=AC=BD=F8=C8=EBdoProce=
ssConfigurationClass=B7=BD=B7=A8=A3=AC=B7=A2=CF=D6=D5=E2=C0=EF=BE=
=CD=CA=C7=D3=C3ComponentScan=C0=B4=BD=E2=CE=F6bean=B6=D4=CF=F3=B5=
=C4</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  languag=
e-java" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204); b=
ackground: rgb(45, 45, 45);"><code class=3D"java  language-java"=20=
style=3D"font-size: 1rem; background: none transparent;"><span cl=
ass=3D"token keyword" style=3D"color:rgb(204, 153, 205);">protect=
ed</span> <span class=3D"token keyword" style=3D"color:rgb(204, 1=
53, 205);">final</span> <span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">SourceClass</span> <span class=3D"toke=
n function" style=3D"color:rgb(240, 141, 73);">doProcessConfigura=
tionClass</span><span class=3D"token punctuation">(</span><span c=
lass=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Conf=
igurationClass</span> configClass<span class=3D"token punctuation=
">,</span> <span class=3D"token class-name" style=3D"color:rgb(24=
8, 197, 85);">SourceClass</span> sourceClass<span class=3D"token=20=
punctuation">)</span>=0A      <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">throws</span> <span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">IOException</span=
> <span class=3D"token punctuation">{</span>=0A    <span class=3D=
"token punctuation">.</span><span class=3D"token punctuation">.</=
span><span class=3D"token punctuation">.</span><span class=3D"tok=
en punctuation">.</span><span class=3D"token punctuation">.</span=
>=0A=0A   <span class=3D"token comment" style=3D"color:rgb(153, 1=
53, 153);">// Process any @ComponentScan annotations</span>=0A  =20=
<span class=3D"token class-name" style=3D"color:rgb(248, 197, 85)=
;">Set</span><span class=3D"token generics"><span class=3D"token=20=
punctuation">&lt;</span><span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">AnnotationAttributes</span><span class=
=3D"token punctuation">&gt;</span></span> componentScans <span cl=
ass=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D</s=
pan> <span class=3D"token class-name" style=3D"color:rgb(248, 197=
, 85);">AnnotationConfigUtils</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function" style=3D"color:rgb(24=
0, 141, 73);">attributesForRepeatable</span><span class=3D"token=20=
punctuation">(</span>=0A         sourceClass<span class=3D"token=20=
punctuation">.</span><span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">getMetadata</span><span class=3D"token punc=
tuation">(</span><span class=3D"token punctuation">)</span><span=20=
class=3D"token punctuation">,</span> <span class=3D"token class-n=
ame" style=3D"color:rgb(248, 197, 85);">ComponentScans</span><spa=
n class=3D"token punctuation">.</span><span class=3D"token keywor=
d" style=3D"color:rgb(204, 153, 205);">class</span><span class=3D=
"token punctuation">,</span> <span class=3D"token class-name" sty=
le=3D"color:rgb(248, 197, 85);">ComponentScan</span><span class=3D=
"token punctuation">.</span><span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">class</span><span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">;</span>=0A  =20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>if</span> <span class=3D"token punctuation">(</span><span class=3D=
"token operator" style=3D"color:rgb(103, 205, 204);">!</span>comp=
onentScans<span class=3D"token punctuation">.</span><span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">isEmpty</span=
><span class=3D"token punctuation">(</span><span class=3D"token p=
unctuation">)</span> <span class=3D"token operator" style=3D"colo=
r:rgb(103, 205, 204);">&amp;&amp;</span>=0A         <span class=3D=
"token operator" style=3D"color:rgb(103, 205, 204);">!</span><spa=
n class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">thi=
s</span><span class=3D"token punctuation">.</span>conditionEvalua=
tor<span class=3D"token punctuation">.</span><span class=3D"token=
 function" style=3D"color:rgb(240, 141, 73);">shouldSkip</span><s=
pan class=3D"token punctuation">(</span>sourceClass<span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">getMetadata</span><span class=3D"token=
 punctuation">(</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">,</span> <span class=3D"token cl=
ass-name" style=3D"color:rgb(248, 197, 85);">ConfigurationPhase</=
span><span class=3D"token punctuation">.</span>REGISTER_BEAN<span=
 class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">)</span> <span class=3D"token punctuation">{</span>=0A    =20=
 <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);=
">for</span> <span class=3D"token punctuation">(</span><span clas=
s=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Annotat=
ionAttributes</span> componentScan <span class=3D"token operator"=
 style=3D"color:rgb(103, 205, 204);">:</span> componentScans<span=
 class=3D"token punctuation">)</span> <span class=3D"token punctu=
ation">{</span>=0A         <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">// =BD=F8=C8=EB=D5=E2=B8=F6=B7=BD=B7=A8=
</span>=0A         <span class=3D"token class-name" style=3D"colo=
r:rgb(248, 197, 85);">Set</span><span class=3D"token generics"><s=
pan class=3D"token punctuation">&lt;</span><span class=3D"token c=
lass-name" style=3D"color:rgb(248, 197, 85);">BeanDefinitionHolde=
r</span><span class=3D"token punctuation">&gt;</span></span> scan=
nedBeanDefinitions <span class=3D"token operator" style=3D"color:=
rgb(103, 205, 204);">=3D</span>=0A               <span class=3D"t=
oken keyword" style=3D"color:rgb(204, 153, 205);">this</span><spa=
n class=3D"token punctuation">.</span>componentScanParser<span cl=
ass=3D"token punctuation">.</span><span class=3D"token function"=20=
style=3D"color:rgb(240, 141, 73);">parse</span><span class=3D"tok=
en punctuation">(</span>componentScan<span class=3D"token punctua=
tion">,</span> sourceClass<span class=3D"token punctuation">.</sp=
an><span class=3D"token function" style=3D"color:rgb(240, 141, 73=
);">getMetadata</span><span class=3D"token punctuation">(</span><=
span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">.</span><span class=3D"token function" style=3D"color:r=
gb(240, 141, 73);">getClassName</span><span class=3D"token punctu=
ation">(</span><span class=3D"token punctuation">)</span><span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuatio=
n">;</span>=0A         =0A      <span class=3D"token punctuation"=
>}</span>=0A   <span class=3D"token punctuation">}</span>=0A</cod=
e></pre></div><p>=D4=DA=D5=E2=B8=F6parse=B7=BD=B7=A8=B5=C4=D7=EE=BA=
=F3=A3=AC=BF=C9=D2=D4=BF=B4=B5=BDbasePackages.isEmpty()=B5=C4=C5=D0=
=B6=CF=A3=AC=B5=B1=C7=B0=D5=E2=B8=F6basePackages=BE=CD=CA=C7=BF=D5=
=B5=C4=A3=AC=D2=F2=CE=AA=C3=BB=D3=D0=C5=E4=D6=C3@ComponentScan=B5=
=C4=D5=E2=B8=F6=CA=F4=D0=D4=A3=AC=D5=E2=C0=EF=BE=CD=BB=E1=B8=F8ba=
sePackages=CC=ED=BC=D3=D5=E2=B8=F6=C6=F4=B6=AF=C0=E0=B5=C4=C3=FB=D7=
=D6=B5=C4=D7=EE=BA=F3=D2=BB=B8=F6=B5=E3=D6=AE=C7=B0=B5=C4=C2=B7=BE=
=B6=A3=AC=B1=C8=C8=E7=C6=F4=B6=AF=C0=E0=CA=C7A.B.C.D.class, =C4=C7=
=C3=B4=C2=B7=BE=B6=BE=CD=CA=C7A.B.C.D=A3=AC=BC=D3=C8=EB=CB=FC=CB=F9=
=D4=DA=B5=C4=B0=FC=C3=FB</p><div class=3D"_2Uzcx_"><pre class=3D"=
line-numbers  language-java" style=3D"font-size: 0.75rem; color:=20=
rgb(204, 204, 204); background: rgb(45, 45, 45);"><code class=3D"=
java  language-java" style=3D"font-size: 1rem; background: none t=
ransparent;"><span class=3D"token keyword" style=3D"color:rgb(204=
, 153, 205);">public</span> <span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">Set</span><span class=3D"token gen=
erics"><span class=3D"token punctuation">&lt;</span><span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">BeanDefinit=
ionHolder</span><span class=3D"token punctuation">&gt;</span></sp=
an> <span class=3D"token function" style=3D"color:rgb(240, 141, 7=
3);">parse</span><span class=3D"token punctuation">(</span><span=20=
class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Ann=
otationAttributes</span> componentScan<span class=3D"token punctu=
ation">,</span> <span class=3D"token keyword" style=3D"color:rgb(=
204, 153, 205);">final</span> <span class=3D"token class-name" st=
yle=3D"color:rgb(248, 197, 85);">String</span> declaringClass<spa=
n class=3D"token punctuation">)</span> <span class=3D"token punct=
uation">{</span>=0A   <span class=3D"token punctuation">.</span><=
span class=3D"token punctuation">.</span><span class=3D"token pun=
ctuation">.</span><span class=3D"token punctuation">.</span>=0A =20=
 <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);=
">if</span> <span class=3D"token punctuation">(</span>basePackage=
s<span class=3D"token punctuation">.</span><span class=3D"token f=
unction" style=3D"color:rgb(240, 141, 73);">isEmpty</span><span c=
lass=3D"token punctuation">(</span><span class=3D"token punctuati=
on">)</span><span class=3D"token punctuation">)</span> <span clas=
s=3D"token punctuation">{</span>=0A      basePackages<span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">add</span><span class=3D"token punctua=
tion">(</span><span class=3D"token class-name" style=3D"color:rgb=
(248, 197, 85);">ClassUtils</span><span class=3D"token punctuatio=
n">.</span><span class=3D"token function" style=3D"color:rgb(240,=
 141, 73);">getPackageName</span><span class=3D"token punctuation=
">(</span>declaringClass<span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">;</span>=0A   <span class=3D"token punctuation">}</sp=
an>=0A=0A   scanner<span class=3D"token punctuation">.</span><spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">add=
ExcludeFilter</span><span class=3D"token punctuation">(</span><sp=
an class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">ne=
w</span> <span class=3D"token class-name" style=3D"color:rgb(248,=
 197, 85);">AbstractTypeHierarchyTraversingFilter</span><span cla=
ss=3D"token punctuation">(</span><span class=3D"token boolean" st=
yle=3D"color:rgb(240, 141, 73);">false</span><span class=3D"token=
 punctuation">,</span> <span class=3D"token boolean" style=3D"col=
or:rgb(240, 141, 73);">false</span><span class=3D"token punctuati=
on">)</span> <span class=3D"token punctuation">{</span>=0A      <=
span class=3D"token annotation punctuation">@Override</span>=0A =20=
    <span class=3D"token keyword" style=3D"color:rgb(204, 153, 20=
5);">protected</span> <span class=3D"token keyword" style=3D"colo=
r:rgb(204, 153, 205);">boolean</span> <span class=3D"token functi=
on" style=3D"color:rgb(240, 141, 73);">matchClassName</span><span=
 class=3D"token punctuation">(</span><span class=3D"token class-n=
ame" style=3D"color:rgb(248, 197, 85);">String</span> className<s=
pan class=3D"token punctuation">)</span> <span class=3D"token pun=
ctuation">{</span>=0A         <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">return</span> declaringClass<span=20=
class=3D"token punctuation">.</span><span class=3D"token function=
" style=3D"color:rgb(240, 141, 73);">equals</span><span class=3D"=
token punctuation">(</span>className<span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">;</span>=0A      <=
span class=3D"token punctuation">}</span>=0A   <span class=3D"tok=
en punctuation">}</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">;</span>=0A   <span class=3D"t=
oken keyword" style=3D"color:rgb(204, 153, 205);">return</span> s=
canner<span class=3D"token punctuation">.</span><span class=3D"to=
ken function" style=3D"color:rgb(240, 141, 73);">doScan</span><sp=
an class=3D"token punctuation">(</span><span class=3D"token class=
-name" style=3D"color:rgb(248, 197, 85);">StringUtils</span><span=
 class=3D"token punctuation">.</span><span class=3D"token functio=
n" style=3D"color:rgb(240, 141, 73);">toStringArray</span><span c=
lass=3D"token punctuation">(</span>basePackages<span class=3D"tok=
en punctuation">)</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">;</span>=0A<span class=3D"toke=
n punctuation">}</span>=0A</code></pre></div><p>=D7=EE=BA=F3=BD=F8=
=C8=EBdoScan=B7=BD=B7=A8=A3=AC=D5=E2=C0=EF=D3=D0=B8=F6findCandida=
teComponents=B5=C4=B7=BD=B7=A8=A3=AC=B5=C3=B5=BD=D5=E2=D0=A9=BA=F2=
=D1=A1=B5=C4bean=BE=CD=BB=E1=D7=A2=B2=E1=B5=BDSpring=C8=DD=C6=F7=D6=
=D0=A1=A3</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  l=
anguage-java" style=3D"font-size: 0.75rem; color: rgb(204, 204, 2=
04); background: rgb(45, 45, 45);"><code class=3D"java  language-=
java" style=3D"font-size: 1rem; background: none transparent;"><s=
pan class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">p=
rotected</span> <span class=3D"token class-name" style=3D"color:r=
gb(248, 197, 85);">Set</span><span class=3D"token generics"><span=
 class=3D"token punctuation">&lt;</span><span class=3D"token clas=
s-name" style=3D"color:rgb(248, 197, 85);">BeanDefinitionHolder</=
span><span class=3D"token punctuation">&gt;</span></span> <span c=
lass=3D"token function" style=3D"color:rgb(240, 141, 73);">doScan=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken class-name" style=3D"color:rgb(248, 197, 85);">String</span>=
<span class=3D"token punctuation">.</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token punctuation">.</span> bas=
ePackages<span class=3D"token punctuation">)</span> <span class=3D=
"token punctuation">{</span>=0A   <span class=3D"token punctuatio=
n">.</span><span class=3D"token punctuation">.</span><span class=3D=
"token punctuation">.</span><span class=3D"token punctuation">.</=
span>=0A   <span class=3D"token keyword" style=3D"color:rgb(204,=20=
153, 205);">for</span> <span class=3D"token punctuation">(</span>=
<span class=3D"token class-name" style=3D"color:rgb(248, 197, 85)=
;">String</span> basePackage <span class=3D"token operator" style=
=3D"color:rgb(103, 205, 204);">:</span> basePackages<span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A       <span class=3D"token comment" style=3D"color:rgb(=
153, 153, 153);">//=D5=E2=B8=F6=B7=BD=B7=A8</span>=0A      <span=20=
class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Set=
</span><span class=3D"token generics"><span class=3D"token punctu=
ation">&lt;</span><span class=3D"token class-name" style=3D"color=
:rgb(248, 197, 85);">BeanDefinition</span><span class=3D"token pu=
nctuation">&gt;</span></span> candidates <span class=3D"token ope=
rator" style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=
=3D"token function" style=3D"color:rgb(240, 141, 73);">findCandid=
ateComponents</span><span class=3D"token punctuation">(</span>bas=
ePackage<span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">;</span>=0A      <span class=3D"token keyword"=
 style=3D"color:rgb(204, 153, 205);">for</span> <span class=3D"to=
ken punctuation">(</span><span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">BeanDefinition</span> candidate <span=20=
class=3D"token operator" style=3D"color:rgb(103, 205, 204);">:</s=
pan> candidates<span class=3D"token punctuation">)</span> <span c=
lass=3D"token punctuation">{</span>=0A         <span class=3D"tok=
en class-name" style=3D"color:rgb(248, 197, 85);">ScopeMetadata</=
span> scopeMetadata <span class=3D"token operator" style=3D"color=
:rgb(103, 205, 204);">=3D</span> <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">this</span><span class=3D"token=
 punctuation">.</span>scopeMetadataResolver<span class=3D"token p=
unctuation">.</span><span class=3D"token function" style=3D"color=
:rgb(240, 141, 73);">resolveScopeMetadata</span><span class=3D"to=
ken punctuation">(</span>candidate<span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">;</span>=0A        =20=
<span class=3D"token punctuation">.</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token punctuation">.</span><spa=
n class=3D"token punctuation">.</span>=0A   <span class=3D"token=20=
keyword" style=3D"color:rgb(204, 153, 205);">return</span> beanDe=
finitions<span class=3D"token punctuation">;</span>=0A<span class=
=3D"token punctuation">}</span>=0A</code></pre></div><p>=D7=EE=BA=
=F3=BD=F8=C8=EBscanCandidateComponents=B7=BD=B7=A8=A3=AC=D5=E2=C0=
=EFSpring=BB=E1=CD=A8=B9=FD=B4=AB=C8=EB=B5=C4=C2=B7=BE=B6=C0=B4=B1=
=E9=C0=FA=CF=C2=C3=E6=B5=C4=C3=BF=D2=BB=B8=F6class=A3=AC=D5=E2=B8=
=F6=B7=BD=B7=A8=CB=F9=D4=DA=C0=E0=CE=AAClassPathScanningCandidate=
ComponentProvider=A3=AC=B2=BB=B9=FD=CB=F9=D3=D0=B5=C4basePackage=C9=
=CF=C3=E6=C4=C7=B8=F6=B7=BD=B7=A8(=CB=F9=D4=DA=C0=E0ClassPathBean=
DefinitionScanner)=B4=F2=B6=CF=B5=E3=B2=E9=BF=B4=A1=A3</p><div cl=
ass=3D"_2Uzcx_"><pre class=3D"line-numbers  language-java" style=3D=
"font-size: 0.75rem; color: rgb(204, 204, 204); background: rgb(4=
5, 45, 45);"><code class=3D"java  language-java" style=3D"font-si=
ze: 1rem; background: none transparent;"><span class=3D"token key=
word" style=3D"color:rgb(204, 153, 205);">private</span> <span cl=
ass=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Set</=
span><span class=3D"token generics"><span class=3D"token punctuat=
ion">&lt;</span><span class=3D"token class-name" style=3D"color:r=
gb(248, 197, 85);">BeanDefinition</span><span class=3D"token punc=
tuation">&gt;</span></span> <span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">scanCandidateComponents</span><span cl=
ass=3D"token punctuation">(</span><span class=3D"token class-name=
" style=3D"color:rgb(248, 197, 85);">String</span> basePackage<sp=
an class=3D"token punctuation">)</span> <span class=3D"token punc=
tuation">{</span>=0A   <span class=3D"token class-name" style=3D"=
color:rgb(248, 197, 85);">Set</span><span class=3D"token generics=
"><span class=3D"token punctuation">&lt;</span><span class=3D"tok=
en class-name" style=3D"color:rgb(248, 197, 85);">BeanDefinition<=
/span><span class=3D"token punctuation">&gt;</span></span> candid=
ates <span class=3D"token operator" style=3D"color:rgb(103, 205,=20=
204);">=3D</span> <span class=3D"token keyword" style=3D"color:rg=
b(204, 153, 205);">new</span> <span class=3D"token class-name" st=
yle=3D"color:rgb(248, 197, 85);">LinkedHashSet</span><span class=3D=
"token generics"><span class=3D"token punctuation">&lt;</span><sp=
an class=3D"token punctuation">&gt;</span></span><span class=3D"t=
oken punctuation">(</span><span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">;</span>=0A   <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">try</span> <s=
pan class=3D"token punctuation">{</span>=0A      <span class=3D"t=
oken class-name" style=3D"color:rgb(248, 197, 85);">String</span>=
 packageSearchPath <span class=3D"token operator" style=3D"color:=
rgb(103, 205, 204);">=3D</span> <span class=3D"token class-name"=20=
style=3D"color:rgb(248, 197, 85);">ResourcePatternResolver</span>=
<span class=3D"token punctuation">.</span>CLASSPATH_ALL_URL_PREFI=
X <span class=3D"token operator" style=3D"color:rgb(103, 205, 204=
);">+</span>=0A            <span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">resolveBasePackage</span><span class=3D=
"token punctuation">(</span>basePackage<span class=3D"token punct=
uation">)</span> <span class=3D"token operator" style=3D"color:rg=
b(103, 205, 204);">+</span> <span class=3D"token string" style=3D=
"color:rgb(126, 198, 153);">'/'</span> <span class=3D"token opera=
tor" style=3D"color:rgb(103, 205, 204);">+</span> <span class=3D"=
token keyword" style=3D"color:rgb(204, 153, 205);">this</span><sp=
an class=3D"token punctuation">.</span>resourcePattern<span class=
=3D"token punctuation">;</span>=0A      <span class=3D"token clas=
s-name" style=3D"color:rgb(248, 197, 85);">Resource</span><span c=
lass=3D"token punctuation">[</span><span class=3D"token punctuati=
on">]</span> resources <span class=3D"token operator" style=3D"co=
lor:rgb(103, 205, 204);">=3D</span> <span class=3D"token function=
" style=3D"color:rgb(240, 141, 73);">getResourcePatternResolver</=
span><span class=3D"token punctuation">(</span><span class=3D"tok=
en punctuation">)</span><span class=3D"token punctuation">.</span=
><span class=3D"token function" style=3D"color:rgb(240, 141, 73);=
">getResources</span><span class=3D"token punctuation">(</span>pa=
ckageSearchPath<span class=3D"token punctuation">)</span><span cl=
ass=3D"token punctuation">;</span>=0A      <span class=3D"token k=
eyword" style=3D"color:rgb(204, 153, 205);">boolean</span> traceE=
nabled <span class=3D"token operator" style=3D"color:rgb(103, 205=
, 204);">=3D</span> logger<span class=3D"token punctuation">.</sp=
an><span class=3D"token function" style=3D"color:rgb(240, 141, 73=
);">isTraceEnabled</span><span class=3D"token punctuation">(</spa=
n><span class=3D"token punctuation">)</span><span class=3D"token=20=
punctuation">;</span>=0A      <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">boolean</span> debugEnabled <span=20=
class=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D<=
/span> logger<span class=3D"token punctuation">.</span><span clas=
s=3D"token function" style=3D"color:rgb(240, 141, 73);">isDebugEn=
abled</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">=
;</span>=0A      <span class=3D"token keyword" style=3D"color:rgb=
(204, 153, 205);">for</span> <span class=3D"token punctuation">(<=
/span><span class=3D"token class-name" style=3D"color:rgb(248, 19=
7, 85);">Resource</span> resource <span class=3D"token operator"=20=
style=3D"color:rgb(103, 205, 204);">:</span> resources<span class=
=3D"token punctuation">)</span> <span class=3D"token punctuation"=
>{</span>=0A         <span class=3D"token keyword" style=3D"color=
:rgb(204, 153, 205);">if</span> <span class=3D"token punctuation"=
>(</span>traceEnabled<span class=3D"token punctuation">)</span> <=
span class=3D"token punctuation">{</span>=0A            logger<sp=
an class=3D"token punctuation">.</span><span class=3D"token funct=
ion" style=3D"color:rgb(240, 141, 73);">trace</span><span class=3D=
"token punctuation">(</span><span class=3D"token string" style=3D=
"color:rgb(126, 198, 153);">"Scanning "</span> <span class=3D"tok=
en operator" style=3D"color:rgb(103, 205, 204);">+</span> resourc=
e<span class=3D"token punctuation">)</span><span class=3D"token p=
unctuation">;</span>=0A         <span class=3D"token punctuation"=
>}</span>=0A         <span class=3D"token keyword" style=3D"color=
:rgb(204, 153, 205);">if</span> <span class=3D"token punctuation"=
>(</span>resource<span class=3D"token punctuation">.</span><span=20=
class=3D"token function" style=3D"color:rgb(240, 141, 73);">isRea=
dable</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">=
)</span> <span class=3D"token punctuation">{</span>=0A          =20=
 <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);=
">try</span> <span class=3D"token punctuation">{</span>=0A      =20=
        <span class=3D"token class-name" style=3D"color:rgb(248,=20=
197, 85);">MetadataReader</span> metadataReader <span class=3D"to=
ken operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">get=
MetadataReaderFactory</span><span class=3D"token punctuation">(</=
span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">.</span><span class=3D"token function" style=3D"c=
olor:rgb(240, 141, 73);">getMetadataReader</span><span class=3D"t=
oken punctuation">(</span>resource<span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">;</span>=0A        =20=
       <span class=3D"token comment" style=3D"color:rgb(153, 153,=
 153);">//=D5=E2=C0=EF=C5=D0=B6=CF=C1=CB=CA=C7=B7=F1=CA=C7Compone=
nt.class</span>=0A               <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">if</span> <span class=3D"token=20=
punctuation">(</span><span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">isCandidateComponent</span><span class=3D"t=
oken punctuation">(</span>metadataReader<span class=3D"token punc=
tuation">)</span><span class=3D"token punctuation">)</span> <span=
 class=3D"token punctuation">{</span>=0A                  <span c=
lass=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Scan=
nedGenericBeanDefinition</span> sbd <span class=3D"token operator=
" style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D"t=
oken keyword" style=3D"color:rgb(204, 153, 205);">new</span> <spa=
n class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">S=
cannedGenericBeanDefinition</span><span class=3D"token punctuatio=
n">(</span>metadataReader<span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">;</span>=0A                 =20=
sbd<span class=3D"token punctuation">.</span><span class=3D"token=
 function" style=3D"color:rgb(240, 141, 73);">setResource</span><=
span class=3D"token punctuation">(</span>resource<span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">;</sp=
an>=0A                  sbd<span class=3D"token punctuation">.</s=
pan><span class=3D"token function" style=3D"color:rgb(240, 141, 7=
3);">setSource</span><span class=3D"token punctuation">(</span>re=
source<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">;</span>=0A                  <span class=3D"toke=
n keyword" style=3D"color:rgb(204, 153, 205);">if</span> <span cl=
ass=3D"token punctuation">(</span><span class=3D"token function"=20=
style=3D"color:rgb(240, 141, 73);">isCandidateComponent</span><sp=
an class=3D"token punctuation">(</span>sbd<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span> <sp=
an class=3D"token punctuation">{</span>=0A                     <s=
pan class=3D"token punctuation">.</span><span class=3D"token punc=
tuation">.</span><span class=3D"token punctuation">.</span><span=20=
class=3D"token punctuation">.</span><span class=3D"token punctuat=
ion">.</span>=0A         <span class=3D"token punctuation">}</spa=
n>=0A</code></pre></div><p>=D3=C9=D3=DA=C9=CF=C3=E6=CC=E1=B5=BD=B9=
=FD=B5=C4=C4=AC=C8=CF=B5=C4includeFilters=D6=D0=BC=D3=C8=EB=C1=CB=
Componet.class=A3=AC=CB=F9=D2=D4=D4=DA=C6=F4=B6=AF=C0=E0=B5=C4=CD=
=AC=BC=B6=C4=BF=C2=BC=CF=C2=A3=AC=CC=ED=BC=D3Component=D7=A2=BD=E2=
=BC=B0=C6=E4=D7=D3=D7=A2=BD=E2=B5=C4=C0=E0=BB=E1=B1=BB=BC=D3=C8=EB=
=B5=BDSpring=C8=DD=C6=F7=D6=D0=A1=A3</p><div class=3D"_2Uzcx_"><p=
re class=3D"line-numbers  language-java" style=3D"font-size: 0.75=
rem; color: rgb(204, 204, 204); background: rgb(45, 45, 45);"><co=
de class=3D"java  language-java" style=3D"font-size: 1rem; backgr=
ound: none transparent;"><span class=3D"token comment" style=3D"c=
olor:rgb(153, 153, 153);">/**=0A     * Determine whether the give=
n class does not match any exclude filter=0A     * and does match=
 at least one include filter.=0A     * @param metadataReader the=20=
ASM ClassReader for the class=0A     * @return whether the class=20=
qualifies as a candidate component=0A     */</span>=0A<span class=
=3D"token keyword" style=3D"color:rgb(204, 153, 205);">protected<=
/span> <span class=3D"token keyword" style=3D"color:rgb(204, 153,=
 205);">boolean</span> <span class=3D"token function" style=3D"co=
lor:rgb(240, 141, 73);">isCandidateComponent</span><span class=3D=
"token punctuation">(</span><span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">MetadataReader</span> metadataRead=
er<span class=3D"token punctuation">)</span> <span class=3D"token=
 keyword" style=3D"color:rgb(204, 153, 205);">throws</span> <span=
 class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">IO=
Exception</span> <span class=3D"token punctuation">{</span>=0A  =20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>for</span> <span class=3D"token punctuation">(</span><span class=
=3D"token class-name" style=3D"color:rgb(248, 197, 85);">TypeFilt=
er</span> tf <span class=3D"token operator" style=3D"color:rgb(10=
3, 205, 204);">:</span> <span class=3D"token keyword" style=3D"co=
lor:rgb(204, 153, 205);">this</span><span class=3D"token punctuat=
ion">.</span>excludeFilters<span class=3D"token punctuation">)</s=
pan> <span class=3D"token punctuation">{</span>=0A      <span cla=
ss=3D"token keyword" style=3D"color:rgb(204, 153, 205);">if</span=
> <span class=3D"token punctuation">(</span>tf<span class=3D"toke=
n punctuation">.</span><span class=3D"token function" style=3D"co=
lor:rgb(240, 141, 73);">match</span><span class=3D"token punctuat=
ion">(</span>metadataReader<span class=3D"token punctuation">,</s=
pan> <span class=3D"token function" style=3D"color:rgb(240, 141,=20=
73);">getMetadataReaderFactory</span><span class=3D"token punctua=
tion">(</span><span class=3D"token punctuation">)</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation=
">)</span> <span class=3D"token punctuation">{</span>=0A        =20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>return</span> <span class=3D"token boolean" style=3D"color:rgb(2=
40, 141, 73);">false</span><span class=3D"token punctuation">;</s=
pan>=0A      <span class=3D"token punctuation">}</span>=0A   <spa=
n class=3D"token punctuation">}</span>=0A   <span class=3D"token=20=
keyword" style=3D"color:rgb(204, 153, 205);">for</span> <span cla=
ss=3D"token punctuation">(</span><span class=3D"token class-name"=
 style=3D"color:rgb(248, 197, 85);">TypeFilter</span> tf <span cl=
ass=3D"token operator" style=3D"color:rgb(103, 205, 204);">:</spa=
n> <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205=
);">this</span><span class=3D"token punctuation">.</span>includeF=
ilters<span class=3D"token punctuation">)</span> <span class=3D"t=
oken punctuation">{</span>=0A      <span class=3D"token keyword"=20=
style=3D"color:rgb(204, 153, 205);">if</span> <span class=3D"toke=
n punctuation">(</span>tf<span class=3D"token punctuation">.</spa=
n><span class=3D"token function" style=3D"color:rgb(240, 141, 73)=
;">match</span><span class=3D"token punctuation">(</span>metadata=
Reader<span class=3D"token punctuation">,</span> <span class=3D"t=
oken function" style=3D"color:rgb(240, 141, 73);">getMetadataRead=
erFactory</span><span class=3D"token punctuation">(</span><span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuati=
on">)</span><span class=3D"token punctuation">)</span> <span clas=
s=3D"token punctuation">{</span>=0A         <span class=3D"token=20=
keyword" style=3D"color:rgb(204, 153, 205);">return</span> <span=20=
class=3D"token function" style=3D"color:rgb(240, 141, 73);">isCon=
ditionMatch</span><span class=3D"token punctuation">(</span>metad=
ataReader<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A      <span class=3D"token punctua=
tion">}</span>=0A   <span class=3D"token punctuation">}</span>=0A=
   <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205=
);">return</span> <span class=3D"token boolean" style=3D"color:rg=
b(240, 141, 73);">false</span><span class=3D"token punctuation">;=
</span>=0A<span class=3D"token punctuation">}</span>=0A</code></p=
re></div><h3 style=3D"font-size: 1.375rem;">=BD=E1=C2=DB</h3><p>=D7=
=EE=D6=D5=CA=B5=CF=D6=C0=E0=C2=B7=BE=B6=D7=E9=BC=FE=C9=A8=C3=E8=B5=
=C4=CA=C7ClassPathScanningCandidateComponentProvider=C0=E0=CF=C2=B5=
=C4scanCandidateComponents=B7=BD=B7=A8=A3=AC=B2=E9=BF=B4=C8=AB=B2=
=BF=C9=A8=C3=E8=B0=FC=BF=C9=D2=D4=D4=DA=CB=FC=B5=C4=C9=CF=BC=B6=B5=
=F7=D3=C3=B7=BD=B7=A8ClassPathBeanDefinitionScanner=C0=E0=B5=C4do=
Scan(String... basePackages)=B7=BD=B7=A8=B4=F2=B6=CF=B5=E3=B2=E9=BF=
=B4=A1=A3</p><br></article><div style=3D"color:gray"><small>=C0=B4=
=D4=B4=A3=BA&nbsp;<a href=3D"https://www.jianshu.com/p/260cca0ec7=
12">https://www.jianshu.com/p/260cca0ec712</a></small></div></bod=
y></html>=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000498218.595--

------=_Next_Part_0001494654.914
Content-Type: image/png;
	name="0.24956363980345886.png"
Content-Transfer-Encoding: base64
Content-ID: <0.24956363980345886.png>
Content-Location: 0.24956363980345886.png



------=_Next_Part_0001494654.914--

