From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?VHJvdWJsZXNob290aW5nIEhpZ2ggSS1PIFdhaXQgaW4gTGludXg=?=
Date: Date: Fri, 23 Jul 2021 05:50:56 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0000608718.651"

This is a multi-part message in MIME format.

------=_Next_Part_0000608718.651
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000202906.740"


------=_Next_Part_0000202906.740
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000202906.740
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!doctype html>=0A<html><head>=0D=0A<meta http-equiv=3D"Content-T=
ype" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A=0A=
=0A=0A=0A=0A=0A=0A=0A<meta http-equiv=3D"X-UA-Compatible" content=
=3D"IE=3D8"/>=0A=0A=0A<title>Troubleshooting High I-O Wait in Lin=
ux</title>=0A=0A=0A=0A<style type=3D"text/css" id=3D"wiz_custom_c=
ss">=0Abody=0A{=0A    font-family: Arial;=0A    font-size: 10.5pt=
;=0A    line-height: 1.5;=0A}=0Ahtml, body=0A{=0A    color: ;=0A=20=
   background-color: ;=0A}=0Ah1 {=0A    font-size:1.5em;=0A    fo=
nt-weight:bold;=0A}=0Ah2 {=0A    font-size:1.4em;=0A    font-weig=
ht:bold;=0A}=0Ah3 {=0A    font-size:1.3em;=0A    font-weight:bold=
;=0A}=0Ah4 {=0A    font-size:1.2em;=0A    font-weight:bold;=0A}=0A=
h5 {=0A    font-size:1.1em;=0A    font-weight:bold;=0A}=0Ah6 {=0A=
    font-size:1.0em;=0A    font-weight:bold;=0A}=0Aimg {=0A    bo=
rder:0;=0A    max-width: 100%;=0A    height: auto !important;=0A}=
=0Ablockquote {=0A    margin-top:0px;=0A    margin-bottom:0px;=0A=
}=0Atable {=0A    border-collapse:collapse;=0A    border:1px soli=
d #bbbbbb;=0A}=0Atd {=0A    border-collapse:collapse;=0A    borde=
r:1px solid #bbbbbb;=0A}=0A</style>=0A=0A<style type=3D"text/css"=
 id=3D"wiz_todo_style_id" wiz_link_version=3D"01.00.09">.wiz-todo=
, .wiz-todo-img {width: 16px; height: 16px; cursor: default; padd=
ing: 0 10px 0 2px; vertical-align: -10%;-webkit-user-select: none=
;} .wiz-todo-label { display: inline-block; padding-top: 7px; pad=
ding-bottom: 6px; line-height: 1.5;} .wiz-todo-label-checked {  c=
olor: #666;} .wiz-todo-label-unchecked {text-decoration: initial;=
} .wiz-todo-completed-info {padding-left: 44px; display: inline-b=
lock; } .wiz-todo-avatar { width:20px; height: 20px; vertical-ali=
gn: -20%; margin-right:10px; border-radius: 2px;} .wiz-todo-accou=
nt, .wiz-todo-dt { color: #666; }</style></head>=0A=0A<body style=
><header class=3D"intro-header" style=3D"box-sizing: border-box;=20=
background-image: url(&quot;&quot;); background-attachment: scrol=
l; -webkit-background-size: cover; background-size: cover; margin=
-bottom: 50px; color: rgb(64, 64, 64); font-family: Lora, 'Times=20=
New Roman', serif; font-size: 20px; line-height: 28px; background=
-position: 50% 50%; background-repeat: no-repeat no-repeat;"><div=
 class=3D"container" style=3D"box-sizing: border-box; padding-rig=
ht: 15px; padding-left: 15px; margin-right: auto; margin-left: au=
to; width: 1170px;"><div class=3D"row" style=3D"box-sizing: borde=
r-box; margin-right: -15px; margin-left: -15px;"><div class=3D"co=
l-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1" style=3D"box-si=
zing: border-box; position: relative; min-height: 1px; padding-ri=
ght: 15px; padding-left: 15px; float: left; width: 780px; margin-=
left: 195px;"><div class=3D"post-heading" style=3D"box-sizing: bo=
rder-box; padding: 150px 0px; color: rgb(255, 255, 255);"><h2 cla=
ss=3D"subheading" style=3D"box-sizing: border-box; font-family: '=
Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; line-=
height: 1.1; color: inherit; margin: 10px 0px 30px; font-size: 30=
px;">A walkthrough on how to find processes that are causing high=
 I/O Wait on Linux Systems</h2><span class=3D"meta" style=3D"box-=
sizing: border-box; line-height: 1.1; display: block; font-style:=
 italic;">Written by&nbsp;<a href=3D"https://twitter.com/madflojo=
" style=3D"box-sizing: border-box; color: rgb(255, 255, 255); tex=
t-decoration: none;">Benjamin Cane</a>&nbsp;on 2012-08-06 14:45:1=
3</span></div></div></div></div></header><article style=3D"box-si=
zing: border-box; color: rgb(64, 64, 64); font-family: Lora, 'Tim=
es New Roman', serif; font-size: 20px; line-height: 28px;"><div c=
lass=3D"container" style=3D"box-sizing: border-box; padding-right=
: 15px; padding-left: 15px; margin-right: auto; margin-left: auto=
; width: 1170px;">&lt;div class=3D"row" &lt;script=3D&quot;&quot;=
 async=3D&quot;&quot; src=3D&quot;//pagead2.googlesyndication.com=
/pagead/js/adsbygoogle.js&quot; style=3D&quot;box-sizing: border-=
box; margin-right: -15px; margin-left: -15px;&quot;&gt;<ins class=
=3D"adsbygoogle" data-ad-client=3D"ca-pub-0946238287085890" data-=
ad-slot=3D"6650633887" data-ad-format=3D"auto" style=3D"box-sizin=
g: border-box; display: block;"></ins></div><div class=3D"row" st=
yle=3D"box-sizing: border-box; margin-right: -15px; margin-left:=20=
-15px;"><div class=3D"col-lg-8 col-md-8 col-sm-12" style=3D"box-s=
izing: border-box; position: relative; min-height: 1px; padding-r=
ight: 15px; padding-left: 15px; float: left; width: 780px;"><p st=
yle=3D"box-sizing: border-box; margin: 30px 0px; line-height: 1.5=
;">Linux has many tools available for troubleshooting some are ea=
sy to use, some are more advanced.</p><p style=3D"box-sizing: bor=
der-box; margin: 30px 0px; line-height: 1.5;">I/O Wait is an issu=
e that requires use of some of the more advanced tools as well as=
 an advanced usage of some of the basic tools. The reason I/O Wai=
t is difficult to troubleshoot is due to the fact that by default=
 there are plenty of tools to tell you that your system is I/O bo=
und, but not as many that can narrow the problem to a specific pr=
ocess or processes.</p><h3 style=3D"box-sizing: border-box; font-=
family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-ser=
if; line-height: 1.1; color: inherit; margin-top: 20px; margin-bo=
ttom: 10px; font-size: 24px;">Answering whether or not I/O is cau=
sing system slowness</h3><p style=3D"box-sizing: border-box; marg=
in: 30px 0px; line-height: 1.5;">To identify whether I/O is causi=
ng system slowness you can use several commands but the easiest i=
s the unix command&nbsp;<code style=3D"box-sizing: border-box; fo=
nt-family: Menlo, Monaco, Consolas, 'Courier New', monospace; fon=
t-size: 18px; padding: 2px 4px; color: rgb(199, 37, 78); backgrou=
nd-color: rgb(249, 242, 244); border-top-left-radius: 4px; border=
-top-right-radius: 4px; border-bottom-right-radius: 4px; border-b=
ottom-left-radius: 4px;">top</code>.</p><pre style=3D"box-sizing:=
 border-box; overflow: auto; font-family: Menlo, Monaco, Consolas=
, 'Courier New', monospace; font-size: 13px; padding: 9.5px; marg=
in-top: 0px; margin-bottom: 10px; line-height: 1.42857143; color:=
 rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; b=
ackground-color: rgb(245, 245, 245); border: 1px solid rgb(204, 2=
04, 204); border-top-left-radius: 4px; border-top-right-radius: 4=
px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4=
px;"><code style=3D"box-sizing: border-box; font-family: Menlo, M=
onaco, Consolas, 'Courier New', monospace; font-size: inherit; pa=
dding: 0px; color: inherit; background-color: transparent; border=
-top-left-radius: 0px; border-top-right-radius: 0px; border-botto=
m-right-radius: 0px; border-bottom-left-radius: 0px; white-space:=
 pre-wrap;"> # top=0A top - 14:31:20 up 35 min, 4 users, load ave=
rage: 2.25, 1.74, 1.68=0A Tasks: 71 total, 1 running, 70 sleeping=
, 0 stopped, 0 zombie=0A Cpu(s): 2.3%us, 1.7%sy, 0.0%ni, 0.0%id,=20=
96.0%wa, 0.0%hi, 0.0%si, 0.0%st=0A Mem: 245440k total, 241004k us=
ed, 4436k free, 496k buffers=0A Swap: 409596k total, 5436k used,=20=
404160k free, 182812k cached=0A</code></pre><p style=3D"box-sizin=
g: border-box; margin: 30px 0px; line-height: 1.5;">From the CPU(=
s) line you can see the current percentage of CPU in I/O Wait; Th=
e higher the number the more cpu resources are waiting for I/O ac=
cess.</p><pre style=3D"box-sizing: border-box; overflow: auto; fo=
nt-family: Menlo, Monaco, Consolas, 'Courier New', monospace; fon=
t-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10p=
x; line-height: 1.42857143; color: rgb(51, 51, 51); word-break: b=
reak-all; word-wrap: break-word; background-color: rgb(245, 245,=20=
245); border: 1px solid rgb(204, 204, 204); border-top-left-radiu=
s: 4px; border-top-right-radius: 4px; border-bottom-right-radius:=
 4px; border-bottom-left-radius: 4px;"><code style=3D"box-sizing:=
 border-box; font-family: Menlo, Monaco, Consolas, 'Courier New',=
 monospace; font-size: inherit; padding: 0px; color: inherit; bac=
kground-color: transparent; border-top-left-radius: 0px; border-t=
op-right-radius: 0px; border-bottom-right-radius: 0px; border-bot=
tom-left-radius: 0px; white-space: pre-wrap;">wa -- iowait=0A Amo=
unt of time the CPU has been waiting for I/O to complete.=0A</cod=
e></pre><h3 style=3D"box-sizing: border-box; font-family: 'Open S=
ans', 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height=
: 1.1; color: inherit; margin-top: 20px; margin-bottom: 10px; fon=
t-size: 24px;">Finding which disk is being written to</h3><p styl=
e=3D"box-sizing: border-box; margin: 30px 0px; line-height: 1.5;"=
>The above top command shows I/O Wait from the system as a whole=20=
but it does not tell you what disk is being affected; for this we=
 will use the&nbsp;<code style=3D"box-sizing: border-box; font-fa=
mily: Menlo, Monaco, Consolas, 'Courier New', monospace; font-siz=
e: 18px; padding: 2px 4px; color: rgb(199, 37, 78); background-co=
lor: rgb(249, 242, 244); border-top-left-radius: 4px; border-top-=
right-radius: 4px; border-bottom-right-radius: 4px; border-bottom=
-left-radius: 4px;">iostat</code>command.</p><pre style=3D"box-si=
zing: border-box; overflow: auto; font-family: Menlo, Monaco, Con=
solas, 'Courier New', monospace; font-size: 13px; padding: 9.5px;=
 margin-top: 0px; margin-bottom: 10px; line-height: 1.42857143; c=
olor: rgb(51, 51, 51); word-break: break-all; word-wrap: break-wo=
rd; background-color: rgb(245, 245, 245); border: 1px solid rgb(2=
04, 204, 204); border-top-left-radius: 4px; border-top-right-radi=
us: 4px; border-bottom-right-radius: 4px; border-bottom-left-radi=
us: 4px;"><code style=3D"box-sizing: border-box; font-family: Men=
lo, Monaco, Consolas, 'Courier New', monospace; font-size: inheri=
t; padding: 0px; color: inherit; background-color: transparent; b=
order-top-left-radius: 0px; border-top-right-radius: 0px; border-=
bottom-right-radius: 0px; border-bottom-left-radius: 0px; white-s=
pace: pre-wrap;"> $ iostat -x 2 5=0A avg-cpu: %user %nice %system=
 %iowait %steal %idle=0A  3.66 0.00 47.64 48.69 0.00 0.00=0A=0A D=
evice: rrqm/s wrqm/s r/s w/s rkB/s wkB/s avgrq-sz avgqu-sz await=20=
r_await w_await svctm %util=0A sda 44.50 39.27 117.28 29.32 11220=
.94 13126.70 332.17 65.77 462.79 9.80 2274.71 7.60 111.41=0A dm-0=
 0.00 0.00 83.25 9.95 10515.18 4295.29 317.84 57.01 648.54 16.73=20=
5935.79 11.48 107.02=0A dm-1 0.00 0.00 57.07 40.84 228.27 163.35=20=
8.00 93.84 979.61 13.94 2329.08 10.93 107.02=0A</code></pre><p st=
yle=3D"box-sizing: border-box; margin: 30px 0px; line-height: 1.5=
;">The iostat command in the example will print a report every 2=20=
seconds for 5 intervals; the&nbsp;<code style=3D"box-sizing: bord=
er-box; font-family: Menlo, Monaco, Consolas, 'Courier New', mono=
space; font-size: 18px; padding: 2px 4px; color: rgb(199, 37, 78)=
; background-color: rgb(249, 242, 244); border-top-left-radius: 4=
px; border-top-right-radius: 4px; border-bottom-right-radius: 4px=
; border-bottom-left-radius: 4px;">-x</code>&nbsp;tells iostat to=
 print out an extended report.</p><p style=3D"box-sizing: border-=
box; margin: 30px 0px; line-height: 1.5;">The 1st report from ios=
tat will print statistics based on the last time the system was b=
ooted;&nbsp;<strong style=3D"box-sizing: border-box;">for this re=
ason in most circumstances the first report from iostat should be=
 ignored.</strong>&nbsp;Every sub-sequential report printed will=20=
be based on the time since the previous interval. For example in=20=
our command we will print a report 5 times, the 2nd report are di=
sk statistics gathered since the 1st run of the report, the 3rd i=
s based from the 2nd and so on.</p><p style=3D"box-sizing: border=
-box; margin: 30px 0px; line-height: 1.5;">In the above example t=
he %utilized for sda is 111.41% this is a good indicator that our=
 problem lies with processes writing to sda. While the test syste=
m in my example only has 1 disk this type of information is extre=
mely helpful when the server has multiple disks as this can narro=
w down the search for which process is utilizing I/O.</p><p style=
=3D"box-sizing: border-box; margin: 30px 0px; line-height: 1.5;">=
Aside from %utilized there is a wealth of information in the outp=
ut of iostat; items such as read and write requests per milliseco=
nd(rrqm/s &amp; wrqm/s), reads and writes per second (r/s &amp; w=
/s) and plenty more. In our example our program seems to be read=20=
and write heavy this information will be helpful when trying to i=
dentify the offending process.</p><h3 style=3D"box-sizing: border=
-box; font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Aria=
l, sans-serif; line-height: 1.1; color: inherit; margin-top: 20px=
; margin-bottom: 10px; font-size: 24px;">Finding the processes th=
at are causing high I/O</h3><h4 style=3D"box-sizing: border-box;=20=
font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, san=
s-serif; line-height: 1.1; color: inherit; margin-top: 10px; marg=
in-bottom: 10px; font-size: 18px;">iotop</h4><pre style=3D"box-si=
zing: border-box; overflow: auto; font-family: Menlo, Monaco, Con=
solas, 'Courier New', monospace; font-size: 13px; padding: 9.5px;=
 margin-top: 0px; margin-bottom: 10px; line-height: 1.42857143; c=
olor: rgb(51, 51, 51); word-break: break-all; word-wrap: break-wo=
rd; background-color: rgb(245, 245, 245); border: 1px solid rgb(2=
04, 204, 204); border-top-left-radius: 4px; border-top-right-radi=
us: 4px; border-bottom-right-radius: 4px; border-bottom-left-radi=
us: 4px;"><code style=3D"box-sizing: border-box; font-family: Men=
lo, Monaco, Consolas, 'Courier New', monospace; font-size: inheri=
t; padding: 0px; color: inherit; background-color: transparent; b=
order-top-left-radius: 0px; border-top-right-radius: 0px; border-=
bottom-right-radius: 0px; border-bottom-left-radius: 0px; white-s=
pace: pre-wrap;"> # iotop=0A Total DISK READ: 8.00 M/s | Total DI=
SK WRITE: 20.36 M/s=0A  TID PRIO USER DISK READ DISK WRITE SWAPIN=
 IO&gt; COMMAND=0A 15758 be/4 root 7.99 M/s 8.01 M/s 0.00 % 61.97=
 % bonnie++ -n 0 -u 0 -r 239 -s 478 -f -b -d /tmp=0A</code></pre>=
<p style=3D"box-sizing: border-box; margin: 30px 0px; line-height=
: 1.5;">The simplest method of finding which process is utilizing=
 storage the most is to use the command iotop. After looking at t=
he statistics it is easy to identify bonnie++ as the process caus=
ing the most I/O utilization on this machine.</p><p style=3D"box-=
sizing: border-box; margin: 30px 0px; line-height: 1.5;">While io=
top is a great command and easy to use, it is not installed on al=
l (or the main) Linux distributions by default; and I personally=20=
prefer not to rely on commands that are not installed by default.=
 A systems administrator may find themselves on a system where th=
ey simply cannot install the non-defualt packages until a schedul=
ed time which may be far too late depending on the issue.</p><p s=
tyle=3D"box-sizing: border-box; margin: 30px 0px; line-height: 1.=
5;">If iotop is not available the below steps will also allow you=
 to narrow down the offending process/processes.</p><h4 style=3D"=
box-sizing: border-box; font-family: 'Open Sans', 'Helvetica Neue=
', Helvetica, Arial, sans-serif; line-height: 1.1; color: inherit=
; margin-top: 10px; margin-bottom: 10px; font-size: 18px;">Proces=
s list "state"</h4><p style=3D"box-sizing: border-box; margin: 30=
px 0px; line-height: 1.5;">The ps command has statistics for memo=
ry and cpu but it does not have a statistic for disk I/O. While i=
t may not have a statistic for I/O it does show the processes sta=
te which can be used to indicate whether or not a process is wait=
ing for I/O.</p><p style=3D"box-sizing: border-box; margin: 30px=20=
0px; line-height: 1.5;">The ps state field provides the processes=
 current state; below is a list of states from the man page.</p><=
pre style=3D"box-sizing: border-box; overflow: auto; font-family:=
 Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13=
px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-he=
ight: 1.42857143; color: rgb(51, 51, 51); word-break: break-all;=20=
word-wrap: break-word; background-color: rgb(245, 245, 245); bord=
er: 1px solid rgb(204, 204, 204); border-top-left-radius: 4px; bo=
rder-top-right-radius: 4px; border-bottom-right-radius: 4px; bord=
er-bottom-left-radius: 4px;"><code style=3D"box-sizing: border-bo=
x; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace=
; font-size: inherit; padding: 0px; color: inherit; background-co=
lor: transparent; border-top-left-radius: 0px; border-top-right-r=
adius: 0px; border-bottom-right-radius: 0px; border-bottom-left-r=
adius: 0px; white-space: pre-wrap;">PROCESS STATE CODES=0A D unin=
terruptible sleep (usually IO)=0A R running or runnable (on run q=
ueue)=0A S interruptible sleep (waiting for an event to complete)=
=0A T stopped, either by a job control signal or because it is be=
ing traced.=0A W paging (not valid since the 2.6.xx kernel)=0A X=20=
dead (should never be seen)=0A Z defunct ("zombie") process, term=
inated but not reaped by its parent.=0A</code></pre><p style=3D"b=
ox-sizing: border-box; margin: 30px 0px; line-height: 1.5;">Proce=
sses that are waiting for I/O are commonly in an "uninterruptible=
 sleep" state or "D"; given this information we can simply find t=
he processes that are constantly in a wait state.</p><p style=3D"=
box-sizing: border-box; margin: 30px 0px; line-height: 1.5;"><str=
ong style=3D"box-sizing: border-box;">Example:</strong></p><pre s=
tyle=3D"box-sizing: border-box; overflow: auto; font-family: Menl=
o, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; p=
adding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height:=
 1.42857143; color: rgb(51, 51, 51); word-break: break-all; word-=
wrap: break-word; background-color: rgb(245, 245, 245); border: 1=
px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-=
top-right-radius: 4px; border-bottom-right-radius: 4px; border-bo=
ttom-left-radius: 4px;"><code style=3D"box-sizing: border-box; fo=
nt-family: Menlo, Monaco, Consolas, 'Courier New', monospace; fon=
t-size: inherit; padding: 0px; color: inherit; background-color:=20=
transparent; border-top-left-radius: 0px; border-top-right-radius=
: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius=
: 0px; white-space: pre-wrap;"> # for x in `seq 1 1 10`; do ps -e=
o state,pid,cmd | grep "^D"; echo "----"; sleep 5; done=0A D 248=20=
[jbd2/dm-0-8]=0A D 16528 bonnie++ -n 0 -u 0 -r 239 -s 478 -f -b -=
d /tmp=0A ----=0A D 22 [kswapd0]=0A D 16528 bonnie++ -n 0 -u 0 -r=
 239 -s 478 -f -b -d /tmp=0A ----=0A D 22 [kswapd0]=0A D 16528 bo=
nnie++ -n 0 -u 0 -r 239 -s 478 -f -b -d /tmp=0A ----=0A D 22 [ksw=
apd0]=0A D 16528 bonnie++ -n 0 -u 0 -r 239 -s 478 -f -b -d /tmp=0A=
 ----=0A D 16528 bonnie++ -n 0 -u 0 -r 239 -s 478 -f -b -d /tmp=0A=
 ----=0A</code></pre><p style=3D"box-sizing: border-box; margin:=20=
30px 0px; line-height: 1.5;">The above for loop will print the pr=
ocesses in a "D" state every 5 seconds for 10 intervals.</p><p st=
yle=3D"box-sizing: border-box; margin: 30px 0px; line-height: 1.5=
;">From the output above the bonnie++ process with a pid of 16528=
 is waiting for I/O more often than any other process. At this po=
int the bonnie++ seems likely to be causing the I/O Wait, but jus=
t because the process is in an uninterruptible sleep state does n=
ot necessarily prove that it is the cause of I/O wait.</p><p styl=
e=3D"box-sizing: border-box; margin: 30px 0px; line-height: 1.5;"=
>To help confirm our suspicions we can use the&nbsp;<code style=3D=
"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'C=
ourier New', monospace; font-size: 18px; padding: 2px 4px; color:=
 rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-t=
op-left-radius: 4px; border-top-right-radius: 4px; border-bottom-=
right-radius: 4px; border-bottom-left-radius: 4px;">/proc</code>&=
nbsp;file system. Within each processes directory there is a file=
 called "io" which holds the same I/O statistics that iotop is ut=
ilizing.</p><pre style=3D"box-sizing: border-box; overflow: auto;=
 font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;=20=
font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom:=20=
10px; line-height: 1.42857143; color: rgb(51, 51, 51); word-break=
: break-all; word-wrap: break-word; background-color: rgb(245, 24=
5, 245); border: 1px solid rgb(204, 204, 204); border-top-left-ra=
dius: 4px; border-top-right-radius: 4px; border-bottom-right-radi=
us: 4px; border-bottom-left-radius: 4px;"><code style=3D"box-sizi=
ng: border-box; font-family: Menlo, Monaco, Consolas, 'Courier Ne=
w', monospace; font-size: inherit; padding: 0px; color: inherit;=20=
background-color: transparent; border-top-left-radius: 0px; borde=
r-top-right-radius: 0px; border-bottom-right-radius: 0px; border-=
bottom-left-radius: 0px; white-space: pre-wrap;"> # cat /proc/165=
28/io=0A rchar: 48752567=0A wchar: 549961789=0A syscr: 5967=0A sy=
scw: 67138=0A read_bytes: 49020928=0A write_bytes: 549961728=0A c=
ancelled_write_bytes: 0=0A</code></pre><p style=3D"box-sizing: bo=
rder-box; margin: 30px 0px; line-height: 1.5;">The&nbsp;<code sty=
le=3D"box-sizing: border-box; font-family: Menlo, Monaco, Consola=
s, 'Courier New', monospace; font-size: 18px; padding: 2px 4px; c=
olor: rgb(199, 37, 78); background-color: rgb(249, 242, 244); bor=
der-top-left-radius: 4px; border-top-right-radius: 4px; border-bo=
ttom-right-radius: 4px; border-bottom-left-radius: 4px;">read_byt=
es</code>&nbsp;and&nbsp;<code style=3D"box-sizing: border-box; fo=
nt-family: Menlo, Monaco, Consolas, 'Courier New', monospace; fon=
t-size: 18px; padding: 2px 4px; color: rgb(199, 37, 78); backgrou=
nd-color: rgb(249, 242, 244); border-top-left-radius: 4px; border=
-top-right-radius: 4px; border-bottom-right-radius: 4px; border-b=
ottom-left-radius: 4px;">write_bytes</code>&nbsp;are the number o=
f bytes that this specific process has written and read from the=20=
storage layer. In this case the bonnie++ process has read 46 MB a=
nd written 524 MB to disk. While for some processes this may not=20=
be a lot, in our example this is enough write and reads to cause=20=
the high i/o wait that this system is seeing.</p><h4 style=3D"box=
-sizing: border-box; font-family: 'Open Sans', 'Helvetica Neue',=20=
Helvetica, Arial, sans-serif; line-height: 1.1; color: inherit; m=
argin-top: 10px; margin-bottom: 10px; font-size: 18px;">Finding w=
hat files are being written too heavily</h4><p style=3D"box-sizin=
g: border-box; margin: 30px 0px; line-height: 1.5;">The lsof comm=
and will show you all of the files open by a specific process or=20=
all processes depending on the options provided. From this list o=
ne can make an educated guess as to what files are likely being w=
ritten to often based on the size of the file and the amounts pre=
sent in the "io" file within /proc.</p><p style=3D"box-sizing: bo=
rder-box; margin: 30px 0px; line-height: 1.5;">To narrow down the=
 output we will use the&nbsp;<code style=3D"box-sizing: border-bo=
x; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace=
; font-size: 18px; padding: 2px 4px; color: rgb(199, 37, 78); bac=
kground-color: rgb(249, 242, 244); border-top-left-radius: 4px; b=
order-top-right-radius: 4px; border-bottom-right-radius: 4px; bor=
der-bottom-left-radius: 4px;">-p &lt;pid&gt;</code>&nbsp;options=20=
to print only files open by the specific process id.</p><pre styl=
e=3D"box-sizing: border-box; overflow: auto; font-family: Menlo,=20=
Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padd=
ing: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.=
42857143; color: rgb(51, 51, 51); word-break: break-all; word-wra=
p: break-word; background-color: rgb(245, 245, 245); border: 1px=20=
solid rgb(204, 204, 204); border-top-left-radius: 4px; border-top=
-right-radius: 4px; border-bottom-right-radius: 4px; border-botto=
m-left-radius: 4px;"><code style=3D"box-sizing: border-box; font-=
family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-s=
ize: inherit; padding: 0px; color: inherit; background-color: tra=
nsparent; border-top-left-radius: 0px; border-top-right-radius: 0=
px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0=
px; white-space: pre-wrap;"> # lsof -p 16528=0A COMMAND PID USER=20=
FD TYPE DEVICE SIZE/OFF NODE NAME=0A bonnie++ 16528 root cwd DIR=20=
252,0 4096 130597 /tmp=0A &lt;truncated&gt;=0A bonnie++ 16528 roo=
t 8u REG 252,0 501219328 131869 /tmp/Bonnie.16528=0A bonnie++ 165=
28 root 9u REG 252,0 501219328 131869 /tmp/Bonnie.16528=0A bonnie=
++ 16528 root 10u REG 252,0 501219328 131869 /tmp/Bonnie.16528=0A=
 bonnie++ 16528 root 11u REG 252,0 501219328 131869 /tmp/Bonnie.1=
6528=0A bonnie++ 16528 root 12u REG 252,0 501219328 131869 &lt;st=
rong&gt;/tmp/Bonnie.16528&lt;/strong&gt;=0A</code></pre><p style=3D=
"box-sizing: border-box; margin: 30px 0px; line-height: 1.5;">To=20=
even further confirm that these files are being written to the he=
avily we can see if the /tmp filesystem is part of sda.</p><pre s=
tyle=3D"box-sizing: border-box; overflow: auto; font-family: Menl=
o, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; p=
adding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height:=
 1.42857143; color: rgb(51, 51, 51); word-break: break-all; word-=
wrap: break-word; background-color: rgb(245, 245, 245); border: 1=
px solid rgb(204, 204, 204); border-top-left-radius: 4px; border-=
top-right-radius: 4px; border-bottom-right-radius: 4px; border-bo=
ttom-left-radius: 4px;"><code style=3D"box-sizing: border-box; fo=
nt-family: Menlo, Monaco, Consolas, 'Courier New', monospace; fon=
t-size: inherit; padding: 0px; color: inherit; background-color:=20=
transparent; border-top-left-radius: 0px; border-top-right-radius=
: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius=
: 0px; white-space: pre-wrap;"> # df /tmp=0A Filesystem 1K-blocks=
 Used Available Use% Mounted on=0A /dev/mapper/workstation-root 7=
667140 2628608 4653920 37% /=0A</code></pre><p style=3D"box-sizin=
g: border-box; margin: 30px 0px; line-height: 1.5;">From the outp=
ut of df we can determine that /tmp is part of the root logical v=
olume in the workstation volume group.</p><pre style=3D"box-sizin=
g: border-box; overflow: auto; font-family: Menlo, Monaco, Consol=
as, 'Courier New', monospace; font-size: 13px; padding: 9.5px; ma=
rgin-top: 0px; margin-bottom: 10px; line-height: 1.42857143; colo=
r: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word;=
 background-color: rgb(245, 245, 245); border: 1px solid rgb(204,=
 204, 204); border-top-left-radius: 4px; border-top-right-radius:=
 4px; border-bottom-right-radius: 4px; border-bottom-left-radius:=
 4px;"><code style=3D"box-sizing: border-box; font-family: Menlo,=
 Monaco, Consolas, 'Courier New', monospace; font-size: inherit;=20=
padding: 0px; color: inherit; background-color: transparent; bord=
er-top-left-radius: 0px; border-top-right-radius: 0px; border-bot=
tom-right-radius: 0px; border-bottom-left-radius: 0px; white-spac=
e: pre-wrap;"> # pvdisplay=0A  --- Physical volume ---=0A  PV Nam=
e /dev/sda5=0A  VG Name workstation=0A  PV Size 7.76 GiB / not us=
able 2.00 MiB=0A  Allocatable yes=0A  PE Size 4.00 MiB=0A  Total=20=
PE 1986=0A  Free PE 8=0A  Allocated PE 1978=0A  PV UUID CLbABb-Gc=
LB-l5z3-TCj3-IOK3-SQ2p-RDPW5S=0A</code></pre><p style=3D"box-sizi=
ng: border-box; margin: 30px 0px; line-height: 1.5;">Using&nbsp;<=
code style=3D"box-sizing: border-box; font-family: Menlo, Monaco,=
 Consolas, 'Courier New', monospace; font-size: 18px; padding: 2p=
x 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 2=
44); border-top-left-radius: 4px; border-top-right-radius: 4px; b=
order-bottom-right-radius: 4px; border-bottom-left-radius: 4px;">=
pvdisplay</code>&nbsp;we can see that the&nbsp;<code style=3D"box=
-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Couri=
er New', monospace; font-size: 18px; padding: 2px 4px; color: rgb=
(199, 37, 78); background-color: rgb(249, 242, 244); border-top-l=
eft-radius: 4px; border-top-right-radius: 4px; border-bottom-righ=
t-radius: 4px; border-bottom-left-radius: 4px;">/dev/sda5</code>&=
nbsp;partition part of the sda disk is the partition that the wor=
kstation volume group is using and in turn is where<code style=3D=
"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'C=
ourier New', monospace; font-size: 18px; padding: 2px 4px; color:=
 rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-t=
op-left-radius: 4px; border-top-right-radius: 4px; border-bottom-=
right-radius: 4px; border-bottom-left-radius: 4px;">/tmp</code>&n=
bsp;exists. Given this information it is safe to say that the lar=
ge files listed in the&nbsp;<code style=3D"box-sizing: border-box=
; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;=
 font-size: 18px; padding: 2px 4px; color: rgb(199, 37, 78); back=
ground-color: rgb(249, 242, 244); border-top-left-radius: 4px; bo=
rder-top-right-radius: 4px; border-bottom-right-radius: 4px; bord=
er-bottom-left-radius: 4px;">lsof</code>&nbsp;above are likely th=
e files being read &amp; written to frequently.</p><br><div style=
=3D"color:gray"><small>=C0=B4=D4=B4=A3=BA&nbsp;&lt;<a href=3D"htt=
p://bencane.com/2012/08/06/troubleshooting-high-io-wait-in-linux/=
">http://bencane.com/2012/08/06/troubleshooting-high-io-wait-in-l=
inux/</a><small>&gt;</small></small></div><small><small>&nbsp;</s=
mall></small></div></div></div></article></body></html>=0A=0A=0A=0A=
=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=0A=
=0A=0A

------=_Next_Part_0000202906.740--

------=_Next_Part_0000608718.651--

