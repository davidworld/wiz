From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?RWxhc3RpY1NlYXJjaCBNYXN0ZXLRob7ZoaLX1LavQ2x1c3Rlcreiz9Y=?=
Date: Date: Fri, 23 Jul 2021 05:55:32 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001436484.998"

This is a multi-part message in MIME format.

------=_Next_Part_0001436484.998
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000478828.086"


------=_Next_Part_0000478828.086
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000478828.086
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A<titl=
e>ElasticSearch Master=D1=A1=BE=D9=A1=A2=D7=D4=B6=AFCluster=B7=A2=
=CF=D6</title>=0A    =0A<style id=3D"wiz_custom_css">html, .wiz-e=
ditor-body {font-size: 12pt;}.wiz-editor-body {font-family: Helve=
tica, 'Hiragino Sans GB', '=E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91',=
 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-hei=
ght: 1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;=
}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz=
-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:2=
0px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold=
;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-edi=
tor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3=
 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-siz=
e:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;fon=
t-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;c=
olor: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-bo=
dy p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,=
.wiz-editor-body li {margin:8px 0;}.wiz-editor-body blockquote,.w=
iz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code {=
margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-ed=
itor-body ul,.wiz-editor-body ol {padding-left:32px;padding-left:=
2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:d=
ecimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type=
:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-styl=
e-type:lower-roman;}.wiz-editor-body blockquote {padding: 0 12px;=
}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz-e=
ditor-body blockquote > :last-child {margin-bottom:0;}.wiz-editor=
-body img {border:0;max-width:100%;height:auto !important;margin:=
2px 0;}.wiz-editor-body table {border-collapse:collapse;border:1p=
x solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {padding=
:4px 8px;border-collapse:collapse;border:1px solid #bbbbbb;min-he=
ight:28px;word-break:break-word;box-sizing: border-box;}.wiz-hide=
 {display:none !important;}</style></head>=0A=0A<body class=3D"wi=
z-editor-body"  spellcheck=3D"false"><div></div><h1 class=3D"_1Ru=
Rku" style=3D"color: rgb(64, 64, 64); font-size: 1.875rem;">Elast=
icSearch Master=D1=A1=BE=D9=A1=A2=D7=D4=B6=AFCluster=B7=A2=CF=D6<=
/h1><div class=3D"_2mYfmT" style=3D"font-size:0.813rem;color:rgb(=
64, 64, 64)"><a class=3D"_1OhGeD" href=3D"https://www.jianshu.com=
/u/de53e987d230" target=3D"_blank" style=3D"text-decoration:none;=
"><img class=3D"_13D2Eh" src=3D"0.060541115717954064.png" alt=3D"=
"></a></div><div class=3D"_3U4Smb" style=3D"font-size:0.813rem;co=
lor:rgb(64, 64, 64)"><span class=3D"FxYr8x" style=3D"font-size:1r=
em;"><a class=3D"_1OhGeD" href=3D"https://www.jianshu.com/u/de53e=
987d230" target=3D"_blank" style=3D"text-decoration:none;">persis=
ting_</a></span><button data-locale=3D"zh-CN" type=3D"button" cla=
ss=3D"_3kba3h _1OyPqC _3Mi9q9 _34692-" style=3D"color: rgb(236, 1=
14, 89); font-size: 0.75rem; background-image: none;"><span>=B9=D8=
=D7=A2</span></button></div><div class=3D"s-dsoj" style=3D"font-s=
ize:0.813rem;color:rgb(150, 150, 150)"><time datetime=3D"2018-12-=
10T16:15:31.000Z" style=3D"">2018.12.11 00:15:31</time><span>=D7=D6=
=CA=FD 1,413</span><span>=D4=C4=B6=C1 2,436</span></div><article=20=
class=3D"_2rhmJa" style=3D"color: rgb(64, 64, 64);"><h1 style=3D"=
font-size: 1.625rem;">1 =B8=C5=CA=F6</h1><p>ElasticSearch=D6=D0<c=
ode style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); backgro=
und-color: rgb(242, 242, 242);">Discovery</code>=B8=BA=D4=F0Mater=
=D1=A1=BE=D9=A1=A2Cluster=B7=A2=CF=D6=A1=A2=CF=F2Cluster=D6=D0=B5=
=C4node=B7=A2=B2=BC=D7=B4=CC=AC=B5=C8=A1=A3<br>=C6=E4=D4=B4=C2=EB=
=D7=A2=CA=CD=C8=E7=CF=C2=A3=BA</p><blockquote style=3D"background=
-color: rgb(250, 250, 250);"><p>A pluggable module allowing to im=
plement discovery of other nodes, publishing of the cluster state=
 to all nodes, electing a master of the cluster that raises clust=
er state change events.</p></blockquote><p><code style=3D"font-si=
ze: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242,=20=
242, 242);">Discovery</code>=D4=DAElasticSearch=D6=D0=D3=D0=C1=BD=
=B8=F6=CA=B5=CF=D6:</p><ol class=3D"wiz-list-level1"><li><code st=
yle=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-co=
lor: rgb(242, 242, 242);">SingleNodeDiscovery</code>: =D6=BB=D3=D0=
=D2=BB=B8=F6=BD=DA=B5=E3=B5=C4=BC=AF=C8=BA=A1=A3</li><li><code st=
yle=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-co=
lor: rgb(242, 242, 242);">ZenDiscovery</code>: =D3=D0=B6=E0=B8=F6=
=BD=DA=B5=E3=B5=C4=BC=AF=C8=BA=A1=A3</li></ol><p>=B1=BE=CE=C4=B5=C4=
=D6=D8=B5=E3=D4=DA=D3=DA=BD=E9=C9=DC<code style=3D"font-size: 0.7=
5rem; color: rgb(199, 37, 78); background-color: rgb(242, 242, 24=
2);">ZenDiscovery</code>,=BD=E9=C9=DCMaster=D1=A1=BE=D9=A1=A2Clus=
ter=B7=A2=CF=D6=B5=C8=CF=E0=B9=D8=CA=B5=CF=D6=A1=A3</p><h1 style=3D=
"font-size: 1.625rem;">2<span>&nbsp;</span><code style=3D"font-si=
ze: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242,=20=
242, 242);">ZenDiscovery</code>=CA=B5=C0=FD=BB=AF=BA=CD=C6=F4=B6=AF=
</h1><p><code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78=
); background-color: rgb(242, 242, 242);">ZenDiscovery</code>=D4=DA=
<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); backg=
round-color: rgb(242, 242, 242);">DiscoveryModule</code>=D6=D0=BB=
=F1=C8=A1=B2=A2=B3=F5=CA=BC=BB=AF=A3=AC<code style=3D"font-size:=20=
0.75rem; color: rgb(199, 37, 78); background-color: rgb(242, 242,=
 242);">DiscoveryModule</code>=D4=DA<code style=3D"font-size: 0.7=
5rem; color: rgb(199, 37, 78); background-color: rgb(242, 242, 24=
2);">Node</code>=C0=E0=B5=C4=B9=B9=D4=EC=BA=AF=CA=FD=D6=D0=B3=F5=CA=
=BC=BB=AF=A1=A3</p><p><code style=3D"font-size: 0.75rem; color: r=
gb(199, 37, 78); background-color: rgb(242, 242, 242);">Node.star=
t</code>=BA=AF=CA=FD=BB=E1=B4=A5=B7=A2<code style=3D"font-size: 0=
.75rem; color: rgb(199, 37, 78); background-color: rgb(242, 242,=20=
242);">ZenDiscovery.doStart</code>=BA=AF=CA=FD=B5=C4=B5=F7=D3=C3=A3=
=BA</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  languag=
e-java" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204); b=
ackground: rgb(45, 45, 45);"><code class=3D"java  language-java"=20=
style=3D"font-size: 1rem; background: none transparent;"><span cl=
ass=3D"token comment" style=3D"color:rgb(153, 153, 153);">//ZenDi=
scovery</span>=0A<span class=3D"token annotation punctuation">@Ov=
erride</span>=0A<span class=3D"token keyword" style=3D"color:rgb(=
204, 153, 205);">protected</span> <span class=3D"token keyword" s=
tyle=3D"color:rgb(204, 153, 205);">void</span> <span class=3D"tok=
en function" style=3D"color:rgb(240, 141, 73);">doStart</span><sp=
an class=3D"token punctuation">(</span><span class=3D"token punct=
uation">)</span> <span class=3D"token punctuation">{</span>=0A  =20=
 <span class=3D"token class-name" style=3D"color:rgb(248, 197, 85=
);">DiscoveryNode</span> localNode <span class=3D"token operator"=
 style=3D"color:rgb(103, 205, 204);">=3D</span> transportService<=
span class=3D"token punctuation">.</span><span class=3D"token fun=
ction" style=3D"color:rgb(240, 141, 73);">getLocalNode</span><spa=
n class=3D"token punctuation">(</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">;</span>=0A    <=
span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">=
assert</span> localNode <span class=3D"token operator" style=3D"c=
olor:rgb(103, 205, 204);">!=3D</span> <span class=3D"token keywor=
d" style=3D"color:rgb(204, 153, 205);">null</span><span class=3D"=
token punctuation">;</span>=0A    <span class=3D"token keyword" s=
tyle=3D"color:rgb(204, 153, 205);">synchronized</span> <span clas=
s=3D"token punctuation">(</span>stateMutex<span class=3D"token pu=
nctuation">)</span> <span class=3D"token punctuation">{</span>=0A=
        <span class=3D"token comment" style=3D"color:rgb(153, 153=
, 153);">// set initial state</span>=0A        <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">assert</span> com=
mittedState<span class=3D"token punctuation">.</span><span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">get</span><sp=
an class=3D"token punctuation">(</span><span class=3D"token punct=
uation">)</span> <span class=3D"token operator" style=3D"color:rg=
b(103, 205, 204);">=3D=3D</span> <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">null</span><span class=3D"token=
 punctuation">;</span>=0A        <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">assert</span> localNode <span c=
lass=3D"token operator" style=3D"color:rgb(103, 205, 204);">!=3D<=
/span> <span class=3D"token keyword" style=3D"color:rgb(204, 153,=
 205);">null</span><span class=3D"token punctuation">;</span>=0A=20=
       <span class=3D"token class-name" style=3D"color:rgb(248, 1=
97, 85);">ClusterState</span><span class=3D"token punctuation">.<=
/span><span class=3D"token class-name" style=3D"color:rgb(248, 19=
7, 85);">Builder</span> builder <span class=3D"token operator" st=
yle=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">ClusterState</spa=
n><span class=3D"token punctuation">.</span><span class=3D"token=20=
function" style=3D"color:rgb(240, 141, 73);">builder</span><span=20=
class=3D"token punctuation">(</span><span class=3D"token class-na=
me" style=3D"color:rgb(248, 197, 85);">ClusterName</span><span cl=
ass=3D"token punctuation">.</span>CLUSTER_NAME_SETTING<span class=
=3D"token punctuation">.</span><span class=3D"token function" sty=
le=3D"color:rgb(240, 141, 73);">get</span><span class=3D"token pu=
nctuation">(</span>settings<span class=3D"token punctuation">)</s=
pan><span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">;</span>=0A        <span class=3D"token class-name=
" style=3D"color:rgb(248, 197, 85);">ClusterState</span> initialS=
tate <span class=3D"token operator" style=3D"color:rgb(103, 205,=20=
204);">=3D</span> builder=0A            <span class=3D"token punc=
tuation">.</span><span class=3D"token function" style=3D"color:rg=
b(240, 141, 73);">blocks</span><span class=3D"token punctuation">=
(</span><span class=3D"token class-name" style=3D"color:rgb(248,=20=
197, 85);">ClusterBlocks</span><span class=3D"token punctuation">=
.</span><span class=3D"token function" style=3D"color:rgb(240, 14=
1, 73);">builder</span><span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span>=0A                <spa=
n class=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=D5=
=E2=C0=EF=C6=E4=CA=B5=D3=D0=B8=F6=D0=E8=D2=AA=D7=A2=D2=E2=B5=C4=B5=
=D8=B7=BD=A3=ACSTATE_NOT_RECOVERED_BLOCK</span>=0A              =20=
 <span class=3D"token comment" style=3D"color:rgb(153, 153, 153);=
">//=B1=ED=CA=BE=BD=DA=B5=E3=B8=D5=C6=F4=B6=AF=C3=BB=D3=D0=BD=F8=D0=
=D0=BC=AF=C8=BA=A1=A2=CB=F7=D2=FD=D4=AA=CA=FD=BE=DD=B5=C8=B5=C4=D1=
=A1=BE=D9=A1=A2=BB=D6=B8=B4</span>=0A                <span class=3D=
"token comment" style=3D"color:rgb(153, 153, 153);">//=B5=C8=A3=AC=
=D6=F7=BD=DA=B5=E3=D4=DA=B6=D4=D0=C2ClusterState=CF=EC=D3=A6=CA=B1=
=BB=E1=B4=A5=B7=A2=BC=AF=C8=BA=A1=A2=CB=F7=D2=FD</span>=0A      =20=
         <span class=3D"token comment" style=3D"color:rgb(153, 15=
3, 153);">//=D4=AA=CA=FD=BE=DD=D1=A1=BE=D9=A3=AC=CD=EA=B3=C9=BA=F3=
=D2=C6=B3=FDSTATE_NOT_RECOVERED_BLOCK</span>=0A                <s=
pan class=3D"token comment" style=3D"color:rgb(153, 153, 153);">/=
/=BE=DF=CC=E5=B9=FD=B3=CC=BA=F3=D0=F8=CE=C4=D5=C2=BB=E1=D3=D0=BD=E9=
=C9=DC</span>=0A                <span class=3D"token punctuation"=
>.</span><span class=3D"token function" style=3D"color:rgb(240, 1=
41, 73);">addGlobalBlock</span><span class=3D"token punctuation">=
(</span>STATE_NOT_RECOVERED_BLOCK<span class=3D"token punctuation=
">)</span>=0A                <span class=3D"token punctuation">.<=
/span><span class=3D"token function" style=3D"color:rgb(240, 141,=
 73);">addGlobalBlock</span><span class=3D"token punctuation">(</=
span>discoverySettings<span class=3D"token punctuation">.</span><=
span class=3D"token function" style=3D"color:rgb(240, 141, 73);">=
getNoMasterBlock</span><span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span>=0A=20=
           <span class=3D"token punctuation">.</span><span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">nodes</span><=
span class=3D"token punctuation">(</span><span class=3D"token cla=
ss-name" style=3D"color:rgb(248, 197, 85);">DiscoveryNodes</span>=
<span class=3D"token punctuation">.</span><span class=3D"token fu=
nction" style=3D"color:rgb(240, 141, 73);">builder</span><span cl=
ass=3D"token punctuation">(</span><span class=3D"token punctuatio=
n">)</span><span class=3D"token punctuation">.</span><span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">add</span><sp=
an class=3D"token punctuation">(</span>localNode<span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">.</spa=
n><span class=3D"token function" style=3D"color:rgb(240, 141, 73)=
;">localNodeId</span><span class=3D"token punctuation">(</span>lo=
calNode<span class=3D"token punctuation">.</span><span class=3D"t=
oken function" style=3D"color:rgb(240, 141, 73);">getId</span><sp=
an class=3D"token punctuation">(</span><span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">)</span><span c=
lass=3D"token punctuation">)</span>=0A            <span class=3D"=
token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">build</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">)</span><span c=
lass=3D"token punctuation">;</span>=0A        committedState<span=
 class=3D"token punctuation">.</span><span class=3D"token functio=
n" style=3D"color:rgb(240, 141, 73);">set</span><span class=3D"to=
ken punctuation">(</span>initialState<span class=3D"token punctua=
tion">)</span><span class=3D"token punctuation">;</span>=0A     =20=
  clusterApplier<span class=3D"token punctuation">.</span><span c=
lass=3D"token function" style=3D"color:rgb(240, 141, 73);">setIni=
tialState</span><span class=3D"token punctuation">(</span>initial=
State<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">;</span>=0A        <span class=3D"token comment"=20=
style=3D"color:rgb(153, 153, 153);">//nodesFD=D6=F7=D2=AA=CA=C7=D6=
=F7=BD=DA=B5=E3=B6=A8=CA=B1ping=BC=AF=C8=BA=C4=DA=C6=E4=CB=FB=B7=C7=
=D6=F7=BD=DA=B5=E3=B2=A2=B7=A2=CF=D6=BD=DA=B5=E3=B9=CA=D5=CF=A3=A8=
=CF=C2=CF=DF=A3=A9=B5=C4=B9=A4=BE=DF=C0=E0</span>=0A        nodes=
FD<span class=3D"token punctuation">.</span><span class=3D"token=20=
function" style=3D"color:rgb(240, 141, 73);">setLocalNode</span><=
span class=3D"token punctuation">(</span>localNode<span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">;</s=
pan>=0A        <span class=3D"token comment" style=3D"color:rgb(1=
53, 153, 153);">//=BC=D3=C8=EBCluster=B5=C4=B9=A4=BE=DF=C0=E0=A3=AC=
=BA=F3=CE=C4=BE=DF=CC=E5=BD=E9=C9=DC</span>=0A        joinThreadC=
ontrol<span class=3D"token punctuation">.</span><span class=3D"to=
ken function" style=3D"color:rgb(240, 141, 73);">start</span><spa=
n class=3D"token punctuation">(</span><span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">;</span>=0A    <=
span class=3D"token punctuation">}</span>=0A    <span class=3D"to=
ken comment" style=3D"color:rgb(153, 153, 153);">//zenPing=D6=F7=D2=
=AA=D3=C3=D3=DA=D6=F7=BD=DA=B5=E3=D1=A1=BE=D9=CA=B1ping=A3=AC=D2=D4=
=B4=CB=C6=E4=CB=FB=BD=DA=B5=E3=BB=F1=C8=A1=C6=E4=CB=FB=BD=DA=B5=E3=
=D7=B4=CC=AC</span>=0A    zenPing<span class=3D"token punctuation=
">.</span><span class=3D"token function" style=3D"color:rgb(240,=20=
141, 73);">start</span><span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">;</span>=0A<span class=3D"token punctuation">}</span>=0A=
</code></pre></div><h1 style=3D"font-size: 1.625rem;">3 =BC=AF=C8=
=BA=C6=F4=B6=AF=CA=B1=B5=C4=B3=F5=CA=BCjoin</h1><p>=C3=BF=B8=F6=BD=
=DA=B5=E3=B5=C4<code style=3D"font-size: 0.75rem; color: rgb(199,=
 37, 78); background-color: rgb(242, 242, 242);">Node.start</code=
>=BA=AF=CA=FD=D6=D0=BB=E1=B5=F7=D3=C3<code style=3D"font-size: 0.=
75rem; color: rgb(199, 37, 78); background-color: rgb(242, 242, 2=
42);">ZenDiscovery.startInitialJoin</code>=BD=F8=D0=D0=B5=DA=D2=BB=
=B4=CEjoin=B2=D9=D7=F7=A1=A3</p><p>[pic-startInitialJoin=B5=F7=D3=
=C3=B9=EC=BC=A3]</p><p>=C9=CF=C3=E6=C1=D0=B3=F6=B5=C4=B4=FA=C2=EB=
=D3=D0=D2=BB=D0=D0=CE=AA<code style=3D"font-size: 0.75rem; color:=
 rgb(199, 37, 78); background-color: rgb(242, 242, 242);">joinThr=
eadControl.start()</code>=A3=AC=D5=E2=C0=EF=CE=D2=C3=C7=CF=C8=BF=B4=
=CF=C2=BE=DF=CC=E5=CA=B5=CF=D6=A3=BA</p><div class=3D"_2Uzcx_"><p=
re class=3D"line-numbers  language-java" style=3D"font-size: 0.75=
rem; color: rgb(204, 204, 204); background: rgb(45, 45, 45);"><co=
de class=3D"java  language-java" style=3D"font-size: 1rem; backgr=
ound: none transparent;"><span class=3D"token comment" style=3D"c=
olor:rgb(153, 153, 153);">//ZenDiscovery.JoinThreadControl</span>=
=0A<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205=
);">public</span> <span class=3D"token keyword" style=3D"color:rg=
b(204, 153, 205);">void</span> <span class=3D"token function" sty=
le=3D"color:rgb(240, 141, 73);">start</span><span class=3D"token=20=
punctuation">(</span><span class=3D"token punctuation">)</span> <=
span class=3D"token punctuation">{</span>=0A    <span class=3D"to=
ken comment" style=3D"color:rgb(153, 153, 153);">//=C9=E8=D6=C3ru=
nning=3Dtrue=A3=AC=B1=EA=CA=B6=D2=D1=C6=F4=B6=AF=A3=AC=BA=F3=D0=F8=
=CA=B9=D3=C3JoinThreadControl=BD=F8=D0=D0Master=D1=A1=BE=D9=B5=C8=
=B6=BC=BB=E1=C5=D0=B6=CF=B8=C3=B1=EA=D6=BE=CE=BB=A1=A3</span>=0A=20=
   running<span class=3D"token punctuation">.</span><span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">set</span><sp=
an class=3D"token punctuation">(</span><span class=3D"token boole=
an" style=3D"color:rgb(240, 141, 73);">true</span><span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">;</s=
pan>=0A<span class=3D"token punctuation">}</span>=0A</code></pre>=
</div><p>=CF=C2=C3=E6=BF=B4<code style=3D"font-size: 0.75rem; col=
or: rgb(199, 37, 78); background-color: rgb(242, 242, 242);">ZenD=
iscovery.startInitialJoin</code>=B5=C4=BE=DF=CC=E5=CA=B5=CF=D6</p=
><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  language-java=
" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204); backgro=
und: rgb(45, 45, 45);"><code class=3D"java  language-java" style=3D=
"font-size: 1rem; background: none transparent;"><span class=3D"t=
oken comment" style=3D"color:rgb(153, 153, 153);">//ZenDiscovery.=
startInitialJoin</span>=0A<span class=3D"token annotation punctua=
tion">@Override</span>=0A<span class=3D"token keyword" style=3D"c=
olor:rgb(204, 153, 205);">public</span> <span class=3D"token keyw=
ord" style=3D"color:rgb(204, 153, 205);">void</span> <span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">startInitialJ=
oin</span><span class=3D"token punctuation">(</span><span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A    <span class=3D"token comment" style=3D"color:rgb(153=
, 153, 153);">// start the join thread from a cluster state updat=
e. See {@link JoinThreadControl} for details.</span>=0A    <span=20=
class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">synch=
ronized</span> <span class=3D"token punctuation">(</span>stateMut=
ex<span class=3D"token punctuation">)</span> <span class=3D"token=
 punctuation">{</span>=0A        <span class=3D"token comment" st=
yle=3D"color:rgb(153, 153, 153);">// do the join on a different t=
hread, the caller of this method waits for 30s anyhow till it is=20=
discovered</span>=0A        joinThreadControl<span class=3D"token=
 punctuation">.</span><span class=3D"token function" style=3D"col=
or:rgb(240, 141, 73);">startNewThreadIfNotRunning</span><span cla=
ss=3D"token punctuation">(</span><span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span>=0A    <span=20=
class=3D"token punctuation">}</span>=0A<span class=3D"token punct=
uation">}</span>=0A</code></pre></div><p>=C9=CF=C3=E6=CA=C7=B3=F5=
=CA=BCjoin=B5=C4=CA=B5=CF=D6=A3=AC=D7=EE=D6=D5=B6=BC=CA=C7=B5=F7=D3=
=C3<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); ba=
ckground-color: rgb(242, 242, 242);">joinThreadControl.startNewTh=
readIfNotRunning();</code>=CA=B5=CF=D6=D1=A1=D6=F7=A3=AC=BA=F3=D0=
=F8=C8=E7=B9=FB=D6=F7=BD=DA=B5=E3=B7=A2=C9=FA=B9=CA=D5=CF=B5=C8=D2=
=B2=CA=C7=CA=B9=D3=C3=CD=AC=D1=F9=B5=C4=C2=DF=BC=AD=A1=A3=CF=C2=C3=
=E6=BE=DF=CC=E5=CC=D6=C2=DB<code style=3D"font-size: 0.75rem; col=
or: rgb(199, 37, 78); background-color: rgb(242, 242, 242);">join=
ThreadControl.startNewThreadIfNotRunning()</code>=CA=B5=CF=D6=A1=A3=
</p><h1 style=3D"font-size: 1.625rem;">3.1 Master=D1=A1=BE=D9=D2=D4=
=BC=B0=BC=D3=C8=EB=BC=AF=C8=BA=B4=F3=D6=C2=C1=F7=B3=CC</h1><div c=
lass=3D"_2Uzcx_"><pre class=3D"line-numbers  language-java" style=
=3D"font-size: 0.75rem; color: rgb(204, 204, 204); background: rg=
b(45, 45, 45);"><code class=3D"java  language-java" style=3D"font=
-size: 1rem; background: none transparent;"><span class=3D"token=20=
comment" style=3D"color:rgb(153, 153, 153);">//ZenDiscovery.JoinT=
hreadControl</span>=0A<span class=3D"token comment" style=3D"colo=
r:rgb(153, 153, 153);">/** starts a new joining thread if there i=
s no currently active one and join thread controlling is started=20=
*/</span>=0A<span class=3D"token keyword" style=3D"color:rgb(204,=
 153, 205);">public</span> <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">void</span> <span class=3D"token func=
tion" style=3D"color:rgb(240, 141, 73);">startNewThreadIfNotRunni=
ng</span><span class=3D"token punctuation">(</span><span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A    <span class=3D"token keyword" style=3D"color:rgb(204=
, 153, 205);">assert</span> <span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">Thread</span><span class=3D"token=20=
punctuation">.</span><span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">holdsLock</span><span class=3D"token punctu=
ation">(</span>stateMutex<span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">;</span>=0A    <span class=3D=
"token comment" style=3D"color:rgb(153, 153, 153);">//=C5=D0=B6=CF=
=CA=C7=B7=F1=B1=BE=BD=DA=B5=E3=CA=C7=B7=F1=D2=D1=BE=AD=D3=D0=C6=E4=
=CB=FB=CF=DF=B3=CC=C6=F4=B6=AF=C1=CBjoin=B2=D9=D7=F7=A3=AC=C8=E7=B9=
=FB=CA=C7=B5=C4=BB=B0=D4=F2=D6=B1=BD=D3=B7=B5=BB=D8</span>=0A   =20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>if</span> <span class=3D"token punctuation">(</span><span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">joinThreadAct=
ive</span><span class=3D"token punctuation">(</span><span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">)</=
span> <span class=3D"token punctuation">{</span>=0A        <span=20=
class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">retur=
n</span><span class=3D"token punctuation">;</span>=0A    <span cl=
ass=3D"token punctuation">}</span>=0A    <span class=3D"token com=
ment" style=3D"color:rgb(153, 153, 153);">//=BC=D3=C8=EBjoin=C8=CE=
=CE=F1</span>=0A    threadPool<span class=3D"token punctuation">.=
</span><span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">generic</span><span class=3D"token punctuation">(</span><=
span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">.</span><span class=3D"token function" style=3D"color:r=
gb(240, 141, 73);">execute</span><span class=3D"token punctuation=
">(</span><span class=3D"token keyword" style=3D"color:rgb(204, 1=
53, 205);">new</span> <span class=3D"token class-name" style=3D"c=
olor:rgb(248, 197, 85);">Runnable</span><span class=3D"token punc=
tuation">(</span><span class=3D"token punctuation">)</span> <span=
 class=3D"token punctuation">{</span>=0A        <span class=3D"to=
ken annotation punctuation">@Override</span>=0A        <span clas=
s=3D"token keyword" style=3D"color:rgb(204, 153, 205);">public</s=
pan> <span class=3D"token keyword" style=3D"color:rgb(204, 153, 2=
05);">void</span> <span class=3D"token function" style=3D"color:r=
gb(240, 141, 73);">run</span><span class=3D"token punctuation">(<=
/span><span class=3D"token punctuation">)</span> <span class=3D"t=
oken punctuation">{</span>=0A            <span class=3D"token cla=
ss-name" style=3D"color:rgb(248, 197, 85);">Thread</span> current=
Thread <span class=3D"token operator" style=3D"color:rgb(103, 205=
, 204);">=3D</span> <span class=3D"token class-name" style=3D"col=
or:rgb(248, 197, 85);">Thread</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token function" style=3D"color:rgb(24=
0, 141, 73);">currentThread</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A            <span class=3D"token c=
omment" style=3D"color:rgb(153, 153, 153);">//CAS=C9=E8=D6=C3=B5=B1=
=C7=B0=CF=DF=B3=CC=CE=AA=B5=B1=C7=B0join=CF=DF=B3=CC=A3=AC=C8=E7=B9=
=FB=B3=C9=B9=A6=D4=F2=BC=CC=D0=F8=BA=F3=D0=F8=B2=D9=D7=F7=A3=AC</=
span>=0A            <span class=3D"token comment" style=3D"color:=
rgb(153, 153, 153);">//=C8=E7=B9=FB=CA=A7=B0=DC=A3=AC=D4=F2=B1=ED=
=CA=BE=D2=D1=BE=AD=D3=D0=C6=E4=CB=FB=CF=DF=B3=CC=C7=C0=CF=C8jion=B2=
=D9=D7=F7=C1=CB=A3=AC=B4=CB=CA=B1=D4=F2=D6=B1=BD=D3=B7=B5=BB=D8</=
span>=0A            <span class=3D"token keyword" style=3D"color:=
rgb(204, 153, 205);">if</span> <span class=3D"token punctuation">=
(</span><span class=3D"token operator" style=3D"color:rgb(103, 20=
5, 204);">!</span>currentJoinThread<span class=3D"token punctuati=
on">.</span><span class=3D"token function" style=3D"color:rgb(240=
, 141, 73);">compareAndSet</span><span class=3D"token punctuation=
">(</span><span class=3D"token keyword" style=3D"color:rgb(204, 1=
53, 205);">null</span><span class=3D"token punctuation">,</span>=20=
currentThread<span class=3D"token punctuation">)</span><span clas=
s=3D"token punctuation">)</span> <span class=3D"token punctuation=
">{</span>=0A                <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">return</span><span class=3D"token pun=
ctuation">;</span>=0A            <span class=3D"token punctuation=
">}</span>=0A            <span class=3D"token comment" style=3D"c=
olor:rgb(153, 153, 153);">//=D5=E2=C0=EFwhile=BD=F8=D0=D0=D1=AD=BB=
=B7=A3=AC=D6=B1=B5=BD=BC=D3=C8=EB=B3=C9=B9=A6=CE=AA=D6=B9=A3=AC=BA=
=F3=C3=E6=BF=C9=C4=DC=D2=F2=CE=AA=B5=B1=C7=B0=B5=B1=D1=A1=CE=AA</=
span>=0A<span class=3D"token comment" style=3D"color:rgb(153, 153=
, 153);">//=D6=F7=BD=DA=B5=E3=B5=C8=B4=FD=CD=B6=C6=B1=B3=AC=CA=B1=
=A1=A2=BF=C9=D1=A1=D6=F7=BD=DA=B5=E3=B8=F6=CA=FD=B2=BB=D7=E3=B5=C8=
=CA=A7=B0=DC</span>=0A            <span class=3D"token keyword" s=
tyle=3D"color:rgb(204, 153, 205);">while</span> <span class=3D"to=
ken punctuation">(</span>running<span class=3D"token punctuation"=
>.</span><span class=3D"token function" style=3D"color:rgb(240, 1=
41, 73);">get</span><span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span> <span class=3D"token oper=
ator" style=3D"color:rgb(103, 205, 204);">&amp;&amp;</span> <span=
 class=3D"token function" style=3D"color:rgb(240, 141, 73);">join=
ThreadActive</span><span class=3D"token punctuation">(</span>curr=
entThread<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A                <span class=3D"token keyword" style=3D"c=
olor:rgb(204, 153, 205);">try</span> <span class=3D"token punctua=
tion">{</span>=0A                    <span class=3D"token comment=
" style=3D"color:rgb(153, 153, 153);">//=BE=DF=CC=E5=BC=D3=C8=EB=BC=
=AF=C8=BA=BA=CDMaster=D1=A1=BE=D9=BA=AF=CA=FD</span>=0A         =20=
          <span class=3D"token function" style=3D"color:rgb(240,=20=
141, 73);">innerJoinCluster</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A                    <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">return</span>=
<span class=3D"token punctuation">;</span>=0A                <spa=
n class=3D"token punctuation">}</span> <span class=3D"token keywo=
rd" style=3D"color:rgb(204, 153, 205);">catch</span> <span class=3D=
"token punctuation">(</span><span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">Exception</span> e<span class=3D"t=
oken punctuation">)</span> <span class=3D"token punctuation">{</s=
pan>=0A                    <span class=3D"token punctuation">.</s=
pan><span class=3D"token punctuation">.</span><span class=3D"toke=
n punctuation">.</span>=0A                <span class=3D"token pu=
nctuation">}</span>=0A            <span class=3D"token punctuatio=
n">}</span>=0A            <span class=3D"token comment" style=3D"=
color:rgb(153, 153, 153);">// cleaning the current thread from cu=
rrentJoinThread is done by explicit calls.</span>=0A        <span=
 class=3D"token punctuation">}</span>=0A    <span class=3D"token=20=
punctuation">}</span><span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">;</span>=0A<span class=3D"token p=
unctuation">}</span>=0A</code></pre></div><p><code style=3D"font-=
size: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242=
, 242, 242);">JoinThreadControl</code>=CA=C7<code style=3D"font-s=
ize: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242,=
 242, 242);">ZenDiscovery</code>=C4=DA=B2=BF=C0=E0=A3=AC<code sty=
le=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-col=
or: rgb(242, 242, 242);">innerJoinCluster</code>=CA=C7<code style=
=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-color=
: rgb(242, 242, 242);">ZenDiscovery</code>=B7=BD=B7=A8=A3=ACMaste=
r=D1=A1=BE=D9=B5=C4=BE=DF=CC=E5=CA=B5=CF=D6=BE=CD=D4=DA<code styl=
e=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-colo=
r: rgb(242, 242, 242);">innerJoinCluster</code>=D6=D0=A3=BA</p><d=
iv class=3D"_2Uzcx_"><pre class=3D"line-numbers  language-java" s=
tyle=3D"font-size: 0.75rem; color: rgb(204, 204, 204); background=
: rgb(45, 45, 45);"><code class=3D"java  language-java" style=3D"=
font-size: 1rem; background: none transparent;"><span class=3D"to=
ken comment" style=3D"color:rgb(153, 153, 153);">//ZenDiscovery</=
span>=0A<span class=3D"token keyword" style=3D"color:rgb(204, 153=
, 205);">private</span> <span class=3D"token keyword" style=3D"co=
lor:rgb(204, 153, 205);">void</span> <span class=3D"token functio=
n" style=3D"color:rgb(240, 141, 73);">innerJoinCluster</span><spa=
n class=3D"token punctuation">(</span><span class=3D"token punctu=
ation">)</span> <span class=3D"token punctuation">{</span>=0A   =20=
<span class=3D"token class-name" style=3D"color:rgb(248, 197, 85)=
;">DiscoveryNode</span> masterNode <span class=3D"token operator"=
 style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D"to=
ken keyword" style=3D"color:rgb(204, 153, 205);">null</span><span=
 class=3D"token punctuation">;</span>=0A    <span class=3D"token=20=
keyword" style=3D"color:rgb(204, 153, 205);">final</span> <span c=
lass=3D"token class-name" style=3D"color:rgb(248, 197, 85);">Thre=
ad</span> currentThread <span class=3D"token operator" style=3D"c=
olor:rgb(103, 205, 204);">=3D</span> <span class=3D"token class-n=
ame" style=3D"color:rgb(248, 197, 85);">Thread</span><span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">currentThread</span><span class=3D"tok=
en punctuation">(</span><span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">;</span>=0A  <span class=3D"to=
ken comment" style=3D"color:rgb(153, 153, 153);">//nodeJoinContro=
ller=CA=C7=B8=BA=D4=F0=B4=A6=C0=ED=C6=E4=CB=FB=BD=DA=B5=E3=BC=D3=C8=
=EB=B5=B1=C7=B0=B5=B1=D1=A1=B5=C4=D6=F7=BD=DA=B5=E3=A3=AC=C6=E4=CB=
=FB=BD=DA=B5=E3</span>=0A<span class=3D"token comment" style=3D"c=
olor:rgb(153, 153, 153);">//=BC=D3=C8=EB=D6=F7=BB=FA=B5=E3=D6=AE=BA=
=F3=BB=E1=B4=A5=B7=A2reroute=A3=AC=BD=F8=D0=D0shard=B7=D6=C5=E4</=
span>=0A    nodeJoinController<span class=3D"token punctuation">.=
</span><span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">startElectionContext</span><span class=3D"token punctuati=
on">(</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">;</span>=0A    <span class=3D"token keywor=
d" style=3D"color:rgb(204, 153, 205);">while</span> <span class=3D=
"token punctuation">(</span>masterNode <span class=3D"token opera=
tor" style=3D"color:rgb(103, 205, 204);">=3D=3D</span> <span clas=
s=3D"token keyword" style=3D"color:rgb(204, 153, 205);">null</spa=
n> <span class=3D"token operator" style=3D"color:rgb(103, 205, 20=
4);">&amp;&amp;</span> joinThreadControl<span class=3D"token punc=
tuation">.</span><span class=3D"token function" style=3D"color:rg=
b(240, 141, 73);">joinThreadActive</span><span class=3D"token pun=
ctuation">(</span>currentThread<span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">)</span> <span class=3D=
"token punctuation">{</span>=0A        <span class=3D"token comme=
nt" style=3D"color:rgb(153, 153, 153);">//=D1=A1=BE=D9master=BD=DA=
=B5=E3=B5=C4=CA=B5=CF=D6=CB=F9=D4=DA</span>=0A        masterNode=20=
<span class=3D"token operator" style=3D"color:rgb(103, 205, 204);=
">=3D</span> <span class=3D"token function" style=3D"color:rgb(24=
0, 141, 73);">findMaster</span><span class=3D"token punctuation">=
(</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">;</span>=0A    <span class=3D"token punctuatio=
n">}</span>=0A=0A    <span class=3D"token keyword" style=3D"color=
:rgb(204, 153, 205);">if</span> <span class=3D"token punctuation"=
>(</span><span class=3D"token operator" style=3D"color:rgb(103, 2=
05, 204);">!</span>joinThreadControl<span class=3D"token punctuat=
ion">.</span><span class=3D"token function" style=3D"color:rgb(24=
0, 141, 73);">joinThreadActive</span><span class=3D"token punctua=
tion">(</span>currentThread<span class=3D"token punctuation">)</s=
pan><span class=3D"token punctuation">)</span> <span class=3D"tok=
en punctuation">{</span>=0A        logger<span class=3D"token pun=
ctuation">.</span><span class=3D"token function" style=3D"color:r=
gb(240, 141, 73);">trace</span><span class=3D"token punctuation">=
(</span><span class=3D"token string" style=3D"color:rgb(126, 198,=
 153);">"thread is no longer in currentJoinThread. Stopping."</sp=
an><span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">;</span>=0A        <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">return</span><span class=3D"tok=
en punctuation">;</span>=0A    <span class=3D"token punctuation">=
}</span>=0A    <span class=3D"token comment" style=3D"color:rgb(1=
53, 153, 153);">//=C8=E7=B9=FB=B5=B1=C7=B0=BD=DA=B5=E3=BE=CD=CA=C7=
=B4=CB=B4=CE=D1=A1=BE=D9=B3=F6=B5=C4Master=BD=DA=B5=E3=A3=AC=D4=F2=
=B5=C8=B4=FD=C6=E4=CB=FB=BD=DA=B5=E3=B6=D4=C6=E4=D1=A1=BE=D9=BD=E1=
=B9=FB</span>=0A    <span class=3D"token comment" style=3D"color:=
rgb(153, 153, 153);">//=BD=F8=D0=D0=C8=B7=C8=CF=A3=AC=BC=B4=B5=C8=
=B4=FD=C6=E4=CB=FB=BD=DA=B5=E3=BC=D3=C8=EB=B8=C3=BD=DA=B5=E3=A1=A3=
=D5=E2=C0=EF=D2=B2=CA=F4=D3=DA=D2=BB=B8=F6=CD=B6=C6=B1=B9=FD=B3=CC=
</span>=0A    <span class=3D"token keyword" style=3D"color:rgb(20=
4, 153, 205);">if</span> <span class=3D"token punctuation">(</spa=
n>transportService<span class=3D"token punctuation">.</span><span=
 class=3D"token function" style=3D"color:rgb(240, 141, 73);">getL=
ocalNode</span><span class=3D"token punctuation">(</span><span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuatio=
n">.</span><span class=3D"token function" style=3D"color:rgb(240,=
 141, 73);">equals</span><span class=3D"token punctuation">(</spa=
n>masterNode<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">)</span> <span class=3D"token punctuation"=
>{</span>=0A        <span class=3D"token comment" style=3D"color:=
rgb(153, 153, 153);">//=B8=F9=BE=DD=C5=E4=D6=C3=BB=F1=C8=A1=D1=A1=
=BE=D9=B3=C9=B9=A6=B5=C4=D7=EE=C9=D9=B2=CE=D3=EB=BD=DA=B5=E3=CA=FD=
=A3=AC=B5=B1=BC=D3=C8=EB=B5=B1=C7=B0=BD=DA=B5=E3=B5=C4=C6=E4</spa=
n>=0A        <span class=3D"token comment" style=3D"color:rgb(153=
, 153, 153);">//=CB=FB=BD=DA=B5=E3=CA=FD=C4=BF=B4=F3=D3=DA=B5=C8=D3=
=DA=B4=CB=D6=B5=CA=B1=D4=F2=B4=CB=BD=DA=B5=E3=B2=C5=BB=E1=D5=E6=D5=
=FD=B5=B1=D1=A1master=B3=C9=B9=A6</span>=0A        <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">final</span>=20=
<span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);"=
>int</span> requiredJoins <span class=3D"token operator" style=3D=
"color:rgb(103, 205, 204);">=3D</span> <span class=3D"token class=
-name" style=3D"color:rgb(248, 197, 85);">Math</span><span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">max</span><span class=3D"token punctua=
tion">(</span><span class=3D"token number" style=3D"color:rgb(240=
, 141, 73);">0</span><span class=3D"token punctuation">,</span> e=
lectMaster<span class=3D"token punctuation">.</span><span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">minimumMaster=
Nodes</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span> <span class=3D"token operator" st=
yle=3D"color:rgb(103, 205, 204);">-</span> <span class=3D"token n=
umber" style=3D"color:rgb(240, 141, 73);">1</span><span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">;</s=
pan> <span class=3D"token comment" style=3D"color:rgb(153, 153, 1=
53);">// we count as one</span>=0A        logger<span class=3D"to=
ken punctuation">.</span><span class=3D"token function" style=3D"=
color:rgb(240, 141, 73);">debug</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string" style=3D"color:rgb(12=
6, 198, 153);">"elected as master, waiting for incoming joins ([{=
}] needed)"</span><span class=3D"token punctuation">,</span> requ=
iredJoins<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A        <span class=3D"token comme=
nt" style=3D"color:rgb(153, 153, 153);">//=B5=C8=B4=FD=C6=E4=CB=FB=
=BD=DA=B5=E3=BC=D3=C8=EB=B4=CB=BD=DA=B5=E3</span>=0A        nodeJ=
oinController<span class=3D"token punctuation">.</span><span clas=
s=3D"token function" style=3D"color:rgb(240, 141, 73);">waitToBeE=
lectedAsMaster</span><span class=3D"token punctuation">(</span>re=
quiredJoins<span class=3D"token punctuation">,</span> masterElect=
ionWaitForJoinsTimeout<span class=3D"token punctuation">,</span>=0A=
                <span class=3D"token keyword" style=3D"color:rgb(=
204, 153, 205);">new</span> <span class=3D"token class-name" styl=
e=3D"color:rgb(248, 197, 85);">NodeJoinController</span><span cla=
ss=3D"token punctuation">.</span><span class=3D"token class-name"=
 style=3D"color:rgb(248, 197, 85);">ElectionCallback</span><span=20=
class=3D"token punctuation">(</span><span class=3D"token punctuat=
ion">)</span> <span class=3D"token punctuation">{</span>=0A     =20=
              <span class=3D"token annotation punctuation">@Overr=
ide</span>=0A                    <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">public</span> <span class=3D"to=
ken keyword" style=3D"color:rgb(204, 153, 205);">void</span> <spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">onE=
lectedAsMaster</span><span class=3D"token punctuation">(</span><s=
pan class=3D"token class-name" style=3D"color:rgb(248, 197, 85);"=
>ClusterState</span> state<span class=3D"token punctuation">)</sp=
an> <span class=3D"token punctuation">{</span>=0A               =20=
        <span class=3D"token comment" style=3D"color:rgb(153, 153=
, 153);">//=B3=C9=B9=A6=B5=B1=D1=A1=CE=AAmaster=BD=DA=B5=E3=A3=AC=
=B1=EA=CA=B6=C1=F7=B3=CC=B3=C9=B9=A6=BD=E1=CA=F8</span>=0A      =20=
                 <span class=3D"token comment" style=3D"color:rgb=
(153, 153, 153);">//markThreadAsDone=BB=E1=C7=E5=BF=D5joinThreadC=
ontrol=D6=D0=BC=C7=C2=BC=B5=C4=D1=A1=BE=D9=CF=DF=B3=CC=A3=AC</spa=
n>=0A                        <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">//=D2=D4=BA=F3=D0=F8=D3=D0=D0=E8=D2=AA=
=CA=B1rejoin</span>=0A                        <span class=3D"toke=
n keyword" style=3D"color:rgb(204, 153, 205);">synchronized</span=
> <span class=3D"token punctuation">(</span>stateMutex<span class=
=3D"token punctuation">)</span> <span class=3D"token punctuation"=
>{</span>=0A                            joinThreadControl<span cl=
ass=3D"token punctuation">.</span><span class=3D"token function"=20=
style=3D"color:rgb(240, 141, 73);">markThreadAsDone</span><span c=
lass=3D"token punctuation">(</span>currentThread<span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">;</spa=
n>=0A                        <span class=3D"token punctuation">}<=
/span>=0A                    <span class=3D"token punctuation">}<=
/span>=0A=0A                    <span class=3D"token annotation p=
unctuation">@Override</span>=0A                    <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">public</span>=
 <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205);=
">void</span> <span class=3D"token function" style=3D"color:rgb(2=
40, 141, 73);">onFailure</span><span class=3D"token punctuation">=
(</span><span class=3D"token class-name" style=3D"color:rgb(248,=20=
197, 85);">Throwable</span> t<span class=3D"token punctuation">)<=
/span> <span class=3D"token punctuation">{</span>=0A            =20=
           logger<span class=3D"token punctuation">.</span><span=20=
class=3D"token function" style=3D"color:rgb(240, 141, 73);">trace=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken string" style=3D"color:rgb(126, 198, 153);">"failed while wa=
iting for nodes to join, rejoining"</span><span class=3D"token pu=
nctuation">,</span> t<span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">;</span>=0A                     =20=
  <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205)=
;">synchronized</span> <span class=3D"token punctuation">(</span>=
stateMutex<span class=3D"token punctuation">)</span> <span class=3D=
"token punctuation">{</span>=0A                            <span=20=
class=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=B5=
=C8=B4=FD=CD=B6=C6=B1=CA=A7=B0=DC=A3=AC=D6=D8=D0=C2=C6=F4=B6=AF=D5=
=FB=B8=F6join=C2=DF=BC=AD</span>=0A                            jo=
inThreadControl<span class=3D"token punctuation">.</span><span cl=
ass=3D"token function" style=3D"color:rgb(240, 141, 73);">markThr=
eadAsDoneAndStartNew</span><span class=3D"token punctuation">(</s=
pan>currentThread<span class=3D"token punctuation">)</span><span=20=
class=3D"token punctuation">;</span>=0A                        <s=
pan class=3D"token punctuation">}</span>=0A                    <s=
pan class=3D"token punctuation">}</span>=0A                <span=20=
class=3D"token punctuation">}</span>=0A=0A        <span class=3D"=
token punctuation">)</span><span class=3D"token punctuation">;</s=
pan>=0A    <span class=3D"token punctuation">}</span> <span class=
=3D"token keyword" style=3D"color:rgb(204, 153, 205);">else</span=
> <span class=3D"token punctuation">{</span>=0A        <span clas=
s=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=C8=E7=B9=
=FB=B5=B1=C7=B0=BD=DA=B5=E3=B2=BB=CA=C7=B4=CB=B4=CE=D1=A1=BE=D9=D6=
=D0=B1=BB=D1=A1=D6=D0=B5=C4=D6=F7=BD=DA=B5=E3=A3=AC=D4=F2</span>=0A=
        <span class=3D"token comment" style=3D"color:rgb(153, 153=
, 153);">//=CD=A3=D6=B9=D1=A1=BE=D9=C1=F7=B3=CC=A3=AC=BF=AA=CA=BC=
=BC=D3=C8=EB=B8=D5=D1=A1=BE=D9=B3=F6=B5=C4=D6=F7=BD=DA=B5=E3=A3=A8=
=BC=B4=CD=B6=C6=B1=B9=FD=B3=CC=A3=A9</span>=0A        <span class=
=3D"token comment" style=3D"color:rgb(153, 153, 153);">// process=
 any incoming joins (they will fail because we are not the master=
)</span>=0A        <span class=3D"token comment" style=3D"color:r=
gb(153, 153, 153);">//=CD=A3=D6=B9=D1=A1=BE=D9=B9=FD=B3=CC</span>=
=0A        nodeJoinController<span class=3D"token punctuation">.<=
/span><span class=3D"token function" style=3D"color:rgb(240, 141,=
 73);">stopElectionContext</span><span class=3D"token punctuation=
">(</span>masterNode <span class=3D"token operator" style=3D"colo=
r:rgb(103, 205, 204);">+</span> <span class=3D"token string" styl=
e=3D"color:rgb(126, 198, 153);">" elected"</span><span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">;</sp=
an>=0A=0A        <span class=3D"token comment" style=3D"color:rgb=
(153, 153, 153);">// send join request</span>=0A        <span cla=
ss=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=CF=F2=
=B4=CB=B4=CE=D1=A1=BE=D9=B3=F6=B5=C4master=BD=DA=B5=E3=B7=A2=C6=F0=
join=C7=EB=C7=F3=A3=AC=BC=B4=B3=D0=C8=CF=C6=E4master=C9=ED=B7=DD<=
/span>=0A        <span class=3D"token keyword" style=3D"color:rgb=
(204, 153, 205);">final</span> <span class=3D"token keyword" styl=
e=3D"color:rgb(204, 153, 205);">boolean</span> success <span clas=
s=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D</spa=
n> <span class=3D"token function" style=3D"color:rgb(240, 141, 73=
);">joinElectedMaster</span><span class=3D"token punctuation">(</=
span>masterNode<span class=3D"token punctuation">)</span><span cl=
ass=3D"token punctuation">;</span>=0A=0A        <span class=3D"to=
ken keyword" style=3D"color:rgb(204, 153, 205);">synchronized</sp=
an> <span class=3D"token punctuation">(</span>stateMutex<span cla=
ss=3D"token punctuation">)</span> <span class=3D"token punctuatio=
n">{</span>=0A            <span class=3D"token comment" style=3D"=
color:rgb(153, 153, 153);">//=B3=C9=B9=A6=BC=D3=C8=EB=B8=D5=D1=A1=
=BE=D9=B3=F6=B5=C4master=BD=DA=B5=E3</span>=0A            <span c=
lass=3D"token keyword" style=3D"color:rgb(204, 153, 205);">if</sp=
an> <span class=3D"token punctuation">(</span>success<span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A                <span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">DiscoveryNode</span> currentMasterNode=
 <span class=3D"token operator" style=3D"color:rgb(103, 205, 204)=
;">=3D</span> <span class=3D"token keyword" style=3D"color:rgb(20=
4, 153, 205);">this</span><span class=3D"token punctuation">.</sp=
an><span class=3D"token function" style=3D"color:rgb(240, 141, 73=
);">clusterState</span><span class=3D"token punctuation">(</span>=
<span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token function" style=3D"color:=
rgb(240, 141, 73);">getNodes</span><span class=3D"token punctuati=
on">(</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token function" sty=
le=3D"color:rgb(240, 141, 73);">getMasterNode</span><span class=3D=
"token punctuation">(</span><span class=3D"token punctuation">)</=
span><span class=3D"token punctuation">;</span>=0A              =20=
 <span class=3D"token comment" style=3D"color:rgb(153, 153, 153);=
">//=C3=BB=D3=D0=D6=F7=BD=DA=B5=E3=D2=EC=B3=A3</span>=0A        =20=
       <span class=3D"token keyword" style=3D"color:rgb(204, 153,=
 205);">if</span> <span class=3D"token punctuation">(</span>curre=
ntMasterNode <span class=3D"token operator" style=3D"color:rgb(10=
3, 205, 204);">=3D=3D</span> <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">null</span><span class=3D"token punct=
uation">)</span> <span class=3D"token punctuation">{</span>=0A  =20=
                 <span class=3D"token comment" style=3D"color:rgb=
(153, 153, 153);">// Post 1.3.0, the master should publish a new=20=
cluster state before acking our join request. we now should have<=
/span>=0A                    <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">// a valid master.</span>=0A        =20=
           logger<span class=3D"token punctuation">.</span><span=20=
class=3D"token function" style=3D"color:rgb(240, 141, 73);">debug=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken string" style=3D"color:rgb(126, 198, 153);">"no master node=20=
is set, despite of join request completing. retrying pings."</spa=
n><span class=3D"token punctuation">)</span><span class=3D"token=20=
punctuation">;</span>=0A                    joinThreadControl<spa=
n class=3D"token punctuation">.</span><span class=3D"token functi=
on" style=3D"color:rgb(240, 141, 73);">markThreadAsDoneAndStartNe=
w</span><span class=3D"token punctuation">(</span>currentThread<s=
pan class=3D"token punctuation">)</span><span class=3D"token punc=
tuation">;</span>=0A                <span class=3D"token punctuat=
ion">}</span> <span class=3D"token keyword" style=3D"color:rgb(20=
4, 153, 205);">else</span> <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">if</span> <span class=3D"token punctu=
ation">(</span>currentMasterNode<span class=3D"token punctuation"=
>.</span><span class=3D"token function" style=3D"color:rgb(240, 1=
41, 73);">equals</span><span class=3D"token punctuation">(</span>=
masterNode<span class=3D"token punctuation">)</span> <span class=3D=
"token operator" style=3D"color:rgb(103, 205, 204);">=3D=3D</span=
> <span class=3D"token boolean" style=3D"color:rgb(240, 141, 73);=
">false</span><span class=3D"token punctuation">)</span> <span cl=
ass=3D"token punctuation">{</span>=0A                    <span cl=
ass=3D"token comment" style=3D"color:rgb(153, 153, 153);">// upda=
te cluster state</span>=0A                    joinThreadControl<s=
pan class=3D"token punctuation">.</span><span class=3D"token func=
tion" style=3D"color:rgb(240, 141, 73);">stopRunningThreadAndRejo=
in</span><span class=3D"token punctuation">(</span><span class=3D=
"token string" style=3D"color:rgb(126, 198, 153);">"master_switch=
ed_while_finalizing_join"</span><span class=3D"token punctuation"=
>)</span><span class=3D"token punctuation">;</span>=0A          =20=
     <span class=3D"token punctuation">}</span>=0A              =20=
 <span class=3D"token comment" style=3D"color:rgb(153, 153, 153);=
">//=B1=EA=CA=B6=BC=D3=C8=EB=B3=C9=B9=A6</span>=0A              =20=
 joinThreadControl<span class=3D"token punctuation">.</span><span=
 class=3D"token function" style=3D"color:rgb(240, 141, 73);">mark=
ThreadAsDone</span><span class=3D"token punctuation">(</span>curr=
entThread<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A            <span class=3D"token p=
unctuation">}</span> <span class=3D"token keyword" style=3D"color=
:rgb(204, 153, 205);">else</span> <span class=3D"token punctuatio=
n">{</span>=0A                <span class=3D"token comment" style=
=3D"color:rgb(153, 153, 153);">// failed to join. Try again...</s=
pan>=0A                <span class=3D"token comment" style=3D"col=
or:rgb(153, 153, 153);">//=BC=D3=C8=EB=B5=B1=D1=A1=B5=C4=D6=F7=BD=
=DA=B5=E3=CA=A7=B0=DC=D4=F2=D6=D8=D0=C2=C6=F4=B6=AFjoin=B9=FD=B3=CC=
</span>=0A                joinThreadControl<span class=3D"token p=
unctuation">.</span><span class=3D"token function" style=3D"color=
:rgb(240, 141, 73);">markThreadAsDoneAndStartNew</span><span clas=
s=3D"token punctuation">(</span>currentThread<span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span>=0A=
            <span class=3D"token punctuation">}</span>=0A       =20=
<span class=3D"token punctuation">}</span>=0A    <span class=3D"t=
oken punctuation">}</span>=0A<span class=3D"token punctuation">}<=
/span>=0A</code></pre></div><h3 style=3D"font-size: 1.375rem;">3.=
1.2 Master=D1=A1=BE=D9=CA=B5=CF=D6=A3=BA=D1=A1=BE=D9=CB=E3=B7=A8<=
/h3><p>Master=D1=A1=BE=D9=D6=F7=D2=AA=C2=DF=BC=AD=D4=DA<code styl=
e=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-colo=
r: rgb(242, 242, 242);">ZenDiscovery.findMaster</code>=D6=D0=A3=BA=
</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  language-j=
ava" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204); back=
ground: rgb(45, 45, 45);"><code class=3D"java  language-java" sty=
le=3D"font-size: 1rem; background: none transparent;"><span class=
=3D"token comment" style=3D"color:rgb(153, 153, 153);">//ZenDisco=
very</span>=0A<span class=3D"token keyword" style=3D"color:rgb(20=
4, 153, 205);">private</span> <span class=3D"token class-name" st=
yle=3D"color:rgb(248, 197, 85);">DiscoveryNode</span> <span class=
=3D"token function" style=3D"color:rgb(240, 141, 73);">findMaster=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken punctuation">)</span> <span class=3D"token punctuation">{</s=
pan>=0A    logger<span class=3D"token punctuation">.</span><span=20=
class=3D"token function" style=3D"color:rgb(240, 141, 73);">trace=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken string" style=3D"color:rgb(126, 198, 153);">"starting to pin=
g"</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A    <span class=3D"token comment"=20=
style=3D"color:rgb(153, 153, 153);">//pingAndWait=D3=C3=D3=DA=BB=F1=
=C8=A1=C6=E4=CB=FB=BD=DA=B5=E3=B5=C4=D7=B4=CC=AC=A3=AC=D5=E2=C0=EF=
=D6=BB=BD=E9=C9=DC=CF=C2=B4=F3=D6=C2=CA=B5=CF=D6=A3=AC=B2=BB=D4=D9=
=D5=B9=BF=AA=BE=DF=CC=E5=D4=B4=C2=EB=A3=BA</span>=0A    <span cla=
ss=3D"token comment" style=3D"color:rgb(153, 153, 153);">//pingAn=
dWait=D6=F7=D2=AA=CA=C7=CA=B9=D3=C3=C9=CF=C3=E6=BD=E9=C9=DC=B5=C4=
ZenPing=C8=A5ping=C5=E4=D6=C3=D6=D0=B5=C4=CB=F9=D3=D0host=A3=AC=BE=
=DF=CC=E5=CA=B5=CF=D6=C2=DF=BC=AD=BF=C9=D2=D4</span>=0A    <span=20=
class=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=B2=
=CE=BF=BCZenPing=B5=C4=C4=AC=C8=CF=CA=B5=CF=D6UnicastZenPing=A1=A3=
</span>=0A    <span class=3D"token comment" style=3D"color:rgb(15=
3, 153, 153);">//=CD=A8=B9=FD=BA=AF=CA=FD=C3=FB=B3=C6=BF=C9=D2=D4=
=D6=AA=B5=C0=D5=E2=CA=C7=B8=F6=CD=AC=B2=BD=B5=F7=D3=C3=A3=AC=CD=AC=
=B2=BD=B5=C4=BE=DF=CC=E5=CA=B5=CF=D6=BA=CDElasticSearch=B4=F3=B2=BF=
=B7=D6=D0=E8=D2=AA=B5=C8=B4=FD</span>=0A    <span class=3D"token=20=
comment" style=3D"color:rgb(153, 153, 153);">//=D4=B6=B3=CC=CD=A8=
=D0=C5=B7=B5=BB=D8=B5=C4=D0=D0=CE=AA=C0=E0=CB=C6=A3=AC=B2=C9=D3=C3=
=BC=C6=CA=FD=C6=F7=BC=C7=C2=BC=B7=A2=CB=CD=B5=C4=C7=EB=C7=F3=B8=F6=
=CA=FD=A3=AC=C3=BF=B4=CE=D3=D0=C7=EB=C7=F3=CF=EC=D3=A6=CA=B1=B5=DD=
=BC=F5=BC=C6=CA=FD=C6=F7=A3=AC</span>=0A    <span class=3D"token=20=
comment" style=3D"color:rgb(153, 153, 153);">//=B5=B1=BC=C6=CA=FD=
=C6=F7=B5=DD=BC=F5=CE=AA0=CA=B1=B1=ED=CA=BE=CB=F9=D3=D0=C7=EB=C7=F3=
=B6=BC=B5=C3=B5=BD=C1=CB=CF=EC=D3=A6=A1=A3</span>=0A    <span cla=
ss=3D"token class-name" style=3D"color:rgb(248, 197, 85);">List</=
span><span class=3D"token generics"><span class=3D"token punctuat=
ion">&lt;</span><span class=3D"token class-name" style=3D"color:r=
gb(248, 197, 85);">ZenPing</span><span class=3D"token punctuation=
">.</span><span class=3D"token class-name" style=3D"color:rgb(248=
, 197, 85);">PingResponse</span><span class=3D"token punctuation"=
>&gt;</span></span> fullPingResponses <span class=3D"token operat=
or" style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D=
"token function" style=3D"color:rgb(240, 141, 73);">pingAndWait</=
span><span class=3D"token punctuation">(</span>pingTimeout<span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuati=
on">.</span><span class=3D"token function" style=3D"color:rgb(240=
, 141, 73);">toList</span><span class=3D"token punctuation">(</sp=
an><span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">;</span>=0A    <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">if</span> <span class=3D"token punctu=
ation">(</span>fullPingResponses <span class=3D"token operator" s=
tyle=3D"color:rgb(103, 205, 204);">=3D=3D</span> <span class=3D"t=
oken keyword" style=3D"color:rgb(204, 153, 205);">null</span><spa=
n class=3D"token punctuation">)</span> <span class=3D"token punct=
uation">{</span>=0A        logger<span class=3D"token punctuation=
">.</span><span class=3D"token function" style=3D"color:rgb(240,=20=
141, 73);">trace</span><span class=3D"token punctuation">(</span>=
<span class=3D"token string" style=3D"color:rgb(126, 198, 153);">=
"No full ping responses"</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">;</span>=0A        <spa=
n class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">ret=
urn</span> <span class=3D"token keyword" style=3D"color:rgb(204,=20=
153, 205);">null</span><span class=3D"token punctuation">;</span>=
=0A    <span class=3D"token punctuation">}</span>=0A    <span cla=
ss=3D"token keyword" style=3D"color:rgb(204, 153, 205);">if</span=
> <span class=3D"token punctuation">(</span>logger<span class=3D"=
token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">isTraceEnabled</span><span class=3D"to=
ken punctuation">(</span><span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">)</span> <span class=3D"token=
 punctuation">{</span>=0A        <span class=3D"token class-name"=
 style=3D"color:rgb(248, 197, 85);">StringBuilder</span> sb <span=
 class=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D=
</span> <span class=3D"token keyword" style=3D"color:rgb(204, 153=
, 205);">new</span> <span class=3D"token class-name" style=3D"col=
or:rgb(248, 197, 85);">StringBuilder</span><span class=3D"token p=
unctuation">(</span><span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">;</span>=0A        <span class=3D"=
token keyword" style=3D"color:rgb(204, 153, 205);">if</span> <spa=
n class=3D"token punctuation">(</span>fullPingResponses<span clas=
s=3D"token punctuation">.</span><span class=3D"token function" st=
yle=3D"color:rgb(240, 141, 73);">size</span><span class=3D"token=20=
punctuation">(</span><span class=3D"token punctuation">)</span> <=
span class=3D"token operator" style=3D"color:rgb(103, 205, 204);"=
>=3D=3D</span> <span class=3D"token number" style=3D"color:rgb(24=
0, 141, 73);">0</span><span class=3D"token punctuation">)</span>=20=
<span class=3D"token punctuation">{</span>=0A            sb<span=20=
class=3D"token punctuation">.</span><span class=3D"token function=
" style=3D"color:rgb(240, 141, 73);">append</span><span class=3D"=
token punctuation">(</span><span class=3D"token string" style=3D"=
color:rgb(126, 198, 153);">" {none}"</span><span class=3D"token p=
unctuation">)</span><span class=3D"token punctuation">;</span>=0A=
        <span class=3D"token punctuation">}</span> <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">else</span> <=
span class=3D"token punctuation">{</span>=0A            <span cla=
ss=3D"token keyword" style=3D"color:rgb(204, 153, 205);">for</spa=
n> <span class=3D"token punctuation">(</span><span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">ZenPing</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token class=
-name" style=3D"color:rgb(248, 197, 85);">PingResponse</span> pin=
gResponse <span class=3D"token operator" style=3D"color:rgb(103,=20=
205, 204);">:</span> fullPingResponses<span class=3D"token punctu=
ation">)</span> <span class=3D"token punctuation">{</span>=0A   =20=
            sb<span class=3D"token punctuation">.</span><span cla=
ss=3D"token function" style=3D"color:rgb(240, 141, 73);">append</=
span><span class=3D"token punctuation">(</span><span class=3D"tok=
en string" style=3D"color:rgb(126, 198, 153);">"\n\t--&gt; "</spa=
n><span class=3D"token punctuation">)</span><span class=3D"token=20=
punctuation">.</span><span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">append</span><span class=3D"token punctuati=
on">(</span>pingResponse<span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">;</span>=0A            <span c=
lass=3D"token punctuation">}</span>=0A        <span class=3D"toke=
n punctuation">}</span>=0A        logger<span class=3D"token punc=
tuation">.</span><span class=3D"token function" style=3D"color:rg=
b(240, 141, 73);">trace</span><span class=3D"token punctuation">(=
</span><span class=3D"token string" style=3D"color:rgb(126, 198,=20=
153);">"full ping responses:{}"</span><span class=3D"token punctu=
ation">,</span> sb<span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">;</span>=0A    <span class=3D"token=20=
punctuation">}</span>=0A=0A    <span class=3D"token keyword" styl=
e=3D"color:rgb(204, 153, 205);">final</span> <span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">DiscoveryNode</sp=
an> localNode <span class=3D"token operator" style=3D"color:rgb(1=
03, 205, 204);">=3D</span> transportService<span class=3D"token p=
unctuation">.</span><span class=3D"token function" style=3D"color=
:rgb(240, 141, 73);">getLocalNode</span><span class=3D"token punc=
tuation">(</span><span class=3D"token punctuation">)</span><span=20=
class=3D"token punctuation">;</span>=0A=0A    <span class=3D"toke=
n comment" style=3D"color:rgb(153, 153, 153);">// add our selves<=
/span>=0A    <span class=3D"token comment" style=3D"color:rgb(153=
, 153, 153);">//=D4=DA=BB=F1=C8=A1=B5=C4=D7=B0=CC=EE=BC=AF=D6=D0=BC=
=D3=C8=EB=B5=B1=C7=B0=BD=DA=B5=E3=D7=D4=BC=BA=B5=C4=D7=B4=CC=AC=A3=
=AC=D2=F2=CE=AA=D7=D4=BC=BA=D2=B2=D0=E8=D2=AA=BC=D3=C8=EB=D1=A1=BE=
=D9=A3=AC=D2=B2=BF=C9=C4=DC=B1=BB=D1=A1=BE=D9=CE=AA=D6=F7=BD=DA=B5=
=E3</span>=0A    <span class=3D"token keyword" style=3D"color:rgb=
(204, 153, 205);">assert</span> fullPingResponses<span class=3D"t=
oken punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">stream</span><span class=3D"token punc=
tuation">(</span><span class=3D"token punctuation">)</span><span=20=
class=3D"token punctuation">.</span><span class=3D"token function=
" style=3D"color:rgb(240, 141, 73);">map</span><span class=3D"tok=
en punctuation">(</span><span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">ZenPing</span><span class=3D"token pun=
ctuation">.</span><span class=3D"token class-name" style=3D"color=
:rgb(248, 197, 85);">PingResponse</span><span class=3D"token oper=
ator" style=3D"color:rgb(103, 205, 204);">:</span><span class=3D"=
token operator" style=3D"color:rgb(103, 205, 204);">:</span><span=
 class=3D"token function" style=3D"color:rgb(240, 141, 73);">node=
</span><span class=3D"token punctuation">)</span>=0A        <span=
 class=3D"token punctuation">.</span><span class=3D"token functio=
n" style=3D"color:rgb(240, 141, 73);">filter</span><span class=3D=
"token punctuation">(</span>n <span class=3D"token operator" styl=
e=3D"color:rgb(103, 205, 204);">-&gt;</span> n<span class=3D"toke=
n punctuation">.</span><span class=3D"token function" style=3D"co=
lor:rgb(240, 141, 73);">equals</span><span class=3D"token punctua=
tion">(</span>localNode<span class=3D"token punctuation">)</span>=
<span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">.</span><span class=3D"token function" style=3D"color:=
rgb(240, 141, 73);">findAny</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">isPresent</span><span class=3D"token p=
unctuation">(</span><span class=3D"token punctuation">)</span> <s=
pan class=3D"token operator" style=3D"color:rgb(103, 205, 204);">=
=3D=3D</span> <span class=3D"token boolean" style=3D"color:rgb(24=
0, 141, 73);">false</span><span class=3D"token punctuation">;</sp=
an>=0A=0A    fullPingResponses<span class=3D"token punctuation">.=
</span><span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">add</span><span class=3D"token punctuation">(</span><span=
 class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">new<=
/span> <span class=3D"token class-name" style=3D"color:rgb(248, 1=
97, 85);">ZenPing</span><span class=3D"token punctuation">.</span=
><span class=3D"token class-name" style=3D"color:rgb(248, 197, 85=
);">PingResponse</span><span class=3D"token punctuation">(</span>=
localNode<span class=3D"token punctuation">,</span> <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">null</span><s=
pan class=3D"token punctuation">,</span> <span class=3D"token key=
word" style=3D"color:rgb(204, 153, 205);">this</span><span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">clusterState</span><span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span>=
<span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">;</span>=0A=0A=
    <span class=3D"token comment" style=3D"color:rgb(153, 153, 15=
3);">// filter responses</span>=0A    <span class=3D"token keywor=
d" style=3D"color:rgb(204, 153, 205);">final</span> <span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">List</span>=
<span class=3D"token generics"><span class=3D"token punctuation">=
&lt;</span><span class=3D"token class-name" style=3D"color:rgb(24=
8, 197, 85);">ZenPing</span><span class=3D"token punctuation">.</=
span><span class=3D"token class-name" style=3D"color:rgb(248, 197=
, 85);">PingResponse</span><span class=3D"token punctuation">&gt;=
</span></span> pingResponses <span class=3D"token operator" style=
=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D"token fu=
nction" style=3D"color:rgb(240, 141, 73);">filterPingResponses</s=
pan><span class=3D"token punctuation">(</span>fullPingResponses<s=
pan class=3D"token punctuation">,</span> masterElectionIgnoreNonM=
asters<span class=3D"token punctuation">,</span> logger<span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation"=
>;</span>=0A    <span class=3D"token comment" style=3D"color:rgb(=
153, 153, 153);">//activeMasters=D3=C3=C0=B4=BC=C7=C2=BC=B5=B1=C7=
=B0=D2=D1=BE=AD=B4=E6=D4=DA=B5=C4=D6=F7=BD=DA=B5=E3</span>=0A   =20=
<span class=3D"token class-name" style=3D"color:rgb(248, 197, 85)=
;">List</span><span class=3D"token generics"><span class=3D"token=
 punctuation">&lt;</span><span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">DiscoveryNode</span><span class=3D"tok=
en punctuation">&gt;</span></span> activeMasters <span class=3D"t=
oken operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <sp=
an class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">ne=
w</span> <span class=3D"token class-name" style=3D"color:rgb(248,=
 197, 85);">ArrayList</span><span class=3D"token generics"><span=20=
class=3D"token punctuation">&lt;</span><span class=3D"token punct=
uation">&gt;</span></span><span class=3D"token punctuation">(</sp=
an><span class=3D"token punctuation">)</span><span class=3D"token=
 punctuation">;</span>=0A    <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">for</span> <span class=3D"token punct=
uation">(</span><span class=3D"token class-name" style=3D"color:r=
gb(248, 197, 85);">ZenPing</span><span class=3D"token punctuation=
">.</span><span class=3D"token class-name" style=3D"color:rgb(248=
, 197, 85);">PingResponse</span> pingResponse <span class=3D"toke=
n operator" style=3D"color:rgb(103, 205, 204);">:</span> pingResp=
onses<span class=3D"token punctuation">)</span> <span class=3D"to=
ken punctuation">{</span>=0A        <span class=3D"token comment"=
 style=3D"color:rgb(153, 153, 153);">// We can't include the loca=
l node in pingMasters list, otherwise we may up electing ourselve=
s without</span>=0A        <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">// any check / verifications from oth=
er nodes in ZenDiscover#innerJoinCluster()</span>=0A        <span=
 class=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=C8=
=E7=B9=FB=B7=B5=BB=D8=B5=C4=BD=DA=B5=E3=B1=ED=C3=F7=D7=D4=BC=BA=B5=
=B1=C7=B0=D2=D1=BE=AD=CA=C7=D6=F7=BD=DA=B5=E3=A3=A8=D5=E2=C0=EF=BF=
=C9=D2=D4=BF=B4=C9=CF=C3=E6=B5=C4=D2=F2=CE=AA=D7=A2=CA=CD=A3=AC=B1=
=DC=C3=E2=C1=CB=D7=D4=BC=BA=D1=A1=D7=D4=BC=BA=B5=C4=C7=E9=BF=F6=A3=
=A9</span>=0A        <span class=3D"token keyword" style=3D"color=
:rgb(204, 153, 205);">if</span> <span class=3D"token punctuation"=
>(</span>pingResponse<span class=3D"token punctuation">.</span><s=
pan class=3D"token function" style=3D"color:rgb(240, 141, 73);">m=
aster</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span> <span class=3D"token operator" st=
yle=3D"color:rgb(103, 205, 204);">!=3D</span> <span class=3D"toke=
n keyword" style=3D"color:rgb(204, 153, 205);">null</span> <span=20=
class=3D"token operator" style=3D"color:rgb(103, 205, 204);">&amp=
;&amp;</span> <span class=3D"token operator" style=3D"color:rgb(1=
03, 205, 204);">!</span>localNode<span class=3D"token punctuation=
">.</span><span class=3D"token function" style=3D"color:rgb(240,=20=
141, 73);">equals</span><span class=3D"token punctuation">(</span=
>pingResponse<span class=3D"token punctuation">.</span><span clas=
s=3D"token function" style=3D"color:rgb(240, 141, 73);">master</s=
pan><span class=3D"token punctuation">(</span><span class=3D"toke=
n punctuation">)</span><span class=3D"token punctuation">)</span>=
<span class=3D"token punctuation">)</span> <span class=3D"token p=
unctuation">{</span>=0A            activeMasters<span class=3D"to=
ken punctuation">.</span><span class=3D"token function" style=3D"=
color:rgb(240, 141, 73);">add</span><span class=3D"token punctuat=
ion">(</span>pingResponse<span class=3D"token punctuation">.</spa=
n><span class=3D"token function" style=3D"color:rgb(240, 141, 73)=
;">master</span><span class=3D"token punctuation">(</span><span c=
lass=3D"token punctuation">)</span><span class=3D"token punctuati=
on">)</span><span class=3D"token punctuation">;</span>=0A       =20=
<span class=3D"token punctuation">}</span>=0A    <span class=3D"t=
oken punctuation">}</span>=0A=0A    <span class=3D"token comment"=
 style=3D"color:rgb(153, 153, 153);">// nodes discovered during p=
inging</span>=0A    <span class=3D"token comment" style=3D"color:=
rgb(153, 153, 153);">//masterCandidates=D3=C3=C0=B4=BC=C7=C2=BC=C5=
=E4=D6=C3=CE=AA=BF=C9=D2=D4=B3=C9=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=BA=
=F2=D1=A1=BD=DA=B5=E3</span>=0A    <span class=3D"token class-nam=
e" style=3D"color:rgb(248, 197, 85);">List</span><span class=3D"t=
oken generics"><span class=3D"token punctuation">&lt;</span><span=
 class=3D"token class-name" style=3D"color:rgb(248, 197, 85);">El=
ectMasterService</span><span class=3D"token punctuation">.</span>=
<span class=3D"token class-name" style=3D"color:rgb(248, 197, 85)=
;">MasterCandidate</span><span class=3D"token punctuation">&gt;</=
span></span> masterCandidates <span class=3D"token operator" styl=
e=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D"token k=
eyword" style=3D"color:rgb(204, 153, 205);">new</span> <span clas=
s=3D"token class-name" style=3D"color:rgb(248, 197, 85);">ArrayLi=
st</span><span class=3D"token generics"><span class=3D"token punc=
tuation">&lt;</span><span class=3D"token punctuation">&gt;</span>=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">;</sp=
an>=0A    <span class=3D"token comment" style=3D"color:rgb(153, 1=
53, 153);">//=D5=E2=C0=EF=BD=AB=B7=B5=BB=D8=BD=DA=B5=E3=D6=D0=C5=E4=
=D6=C3=CE=AA=BF=C9=D2=D4=D7=F7=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=BD=DA=
=B5=E3=BC=D3=C8=EB=BA=F2=D1=A1=BD=DA=B5=E3=D6=D0</span>=0A    <sp=
an class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">fo=
r</span> <span class=3D"token punctuation">(</span><span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">ZenPing</sp=
an><span class=3D"token punctuation">.</span><span class=3D"token=
 class-name" style=3D"color:rgb(248, 197, 85);">PingResponse</spa=
n> pingResponse <span class=3D"token operator" style=3D"color:rgb=
(103, 205, 204);">:</span> pingResponses<span class=3D"token punc=
tuation">)</span> <span class=3D"token punctuation">{</span>=0A =20=
      <span class=3D"token comment" style=3D"color:rgb(153, 153,=20=
153);">//=D5=E2=C0=EF=D2=AA=D7=A2=D2=E2isMasterNode=B2=A2=B2=BB=CA=
=C7=CB=B5=C3=F7=B8=C3=BD=DA=B5=E3=CA=C7=B2=BB=CA=C7=D6=F7=BD=DA=B5=
=E3=A3=AC=B6=F8=CA=C7=B1=ED=C3=F7=B8=C3=BD=DA=B5=E3=C4=DC=B2=BB=C4=
=DC=B3=C9=CE=AA=D6=F7=BD=DA=B5=E3</span>=0A        <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">if</span> <sp=
an class=3D"token punctuation">(</span>pingResponse<span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">node</span><span class=3D"token punctu=
ation">(</span><span class=3D"token punctuation">)</span><span cl=
ass=3D"token punctuation">.</span><span class=3D"token function"=20=
style=3D"color:rgb(240, 141, 73);">isMasterNode</span><span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">)</span> <span class=3D=
"token punctuation">{</span>=0A            masterCandidates<span=20=
class=3D"token punctuation">.</span><span class=3D"token function=
" style=3D"color:rgb(240, 141, 73);">add</span><span class=3D"tok=
en punctuation">(</span><span class=3D"token keyword" style=3D"co=
lor:rgb(204, 153, 205);">new</span> <span class=3D"token class-na=
me" style=3D"color:rgb(248, 197, 85);">ElectMasterService</span><=
span class=3D"token punctuation">.</span><span class=3D"token cla=
ss-name" style=3D"color:rgb(248, 197, 85);">MasterCandidate</span=
><span class=3D"token punctuation">(</span>pingResponse<span clas=
s=3D"token punctuation">.</span><span class=3D"token function" st=
yle=3D"color:rgb(240, 141, 73);">node</span><span class=3D"token=20=
punctuation">(</span><span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">,</span> pingResponse<span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">getClusterStateVersion</span><span cla=
ss=3D"token punctuation">(</span><span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">;</=
span>=0A        <span class=3D"token punctuation">}</span>=0A   =20=
<span class=3D"token punctuation">}</span>=0A    <span class=3D"t=
oken comment" style=3D"color:rgb(153, 153, 153);">//=C8=E7=B9=FB=B5=
=B1=C7=B0=B4=E6=D4=DA=B5=C4=D6=F7=BD=DA=B5=E3=C1=D0=B1=EDactiveMa=
sters=CE=AA=BF=D5=A3=AC=D4=F2=B4=D3=BA=F2=D1=A1=BD=DA=B5=E3=C1=D0=
=B1=EDmasterCandidates=D6=D0=D1=A1=C8=A1=D6=F7=BD=DA=B5=E3</span>=
=0A    <span class=3D"token keyword" style=3D"color:rgb(204, 153,=
 205);">if</span> <span class=3D"token punctuation">(</span>activ=
eMasters<span class=3D"token punctuation">.</span><span class=3D"=
token function" style=3D"color:rgb(240, 141, 73);">isEmpty</span>=
<span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span> <sp=
an class=3D"token punctuation">{</span>=0A        <span class=3D"=
token comment" style=3D"color:rgb(153, 153, 153);">//=C5=D0=B6=CF=
=CA=C7=B7=F1=D3=D0=D7=E3=B9=BB=B5=C4=BA=F2=D1=A1=BD=DA=B5=E3</spa=
n>=0A        <span class=3D"token keyword" style=3D"color:rgb(204=
, 153, 205);">if</span> <span class=3D"token punctuation">(</span=
>electMaster<span class=3D"token punctuation">.</span><span class=
=3D"token function" style=3D"color:rgb(240, 141, 73);">hasEnoughC=
andidates</span><span class=3D"token punctuation">(</span>masterC=
andidates<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A            <span class=3D"token comment" style=3D"color=
:rgb(153, 153, 153);">//=BD=F8=D0=D0=BD=DA=B5=E3=D1=A1=BE=D9</spa=
n>=0A            <span class=3D"token keyword" style=3D"color:rgb=
(204, 153, 205);">final</span> <span class=3D"token class-name" s=
tyle=3D"color:rgb(248, 197, 85);">ElectMasterService</span><span=20=
class=3D"token punctuation">.</span><span class=3D"token class-na=
me" style=3D"color:rgb(248, 197, 85);">MasterCandidate</span> win=
ner <span class=3D"token operator" style=3D"color:rgb(103, 205, 2=
04);">=3D</span> =0A            electMaster<span class=3D"token p=
unctuation">.</span><span class=3D"token function" style=3D"color=
:rgb(240, 141, 73);">electMaster</span><span class=3D"token punct=
uation">(</span>masterCandidates<span class=3D"token punctuation"=
>)</span><span class=3D"token punctuation">;</span>=0A          =20=
 logger<span class=3D"token punctuation">.</span><span class=3D"t=
oken function" style=3D"color:rgb(240, 141, 73);">trace</span><sp=
an class=3D"token punctuation">(</span><span class=3D"token strin=
g" style=3D"color:rgb(126, 198, 153);">"candidate {} won election=
"</span><span class=3D"token punctuation">,</span> winner<span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuatio=
n">;</span>=0A            <span class=3D"token keyword" style=3D"=
color:rgb(204, 153, 205);">return</span> winner<span class=3D"tok=
en punctuation">.</span><span class=3D"token function" style=3D"c=
olor:rgb(240, 141, 73);">getNode</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">)</span><span c=
lass=3D"token punctuation">;</span>=0A        <span class=3D"toke=
n punctuation">}</span> <span class=3D"token keyword" style=3D"co=
lor:rgb(204, 153, 205);">else</span> <span class=3D"token punctua=
tion">{</span>=0A            <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">// if we don't have enough master nod=
es, we bail, because there are not enough master to elect from</s=
pan>=0A            logger<span class=3D"token punctuation">.</spa=
n><span class=3D"token function" style=3D"color:rgb(240, 141, 73)=
;">warn</span><span class=3D"token punctuation">(</span><span cla=
ss=3D"token string" style=3D"color:rgb(126, 198, 153);">"not enou=
gh master nodes discovered during pinging (found [{}], but needed=
 [{}]), pinging again"</span><span class=3D"token punctuation">,<=
/span>=0A                        masterCandidates<span class=3D"t=
oken punctuation">,</span> electMaster<span class=3D"token punctu=
ation">.</span><span class=3D"token function" style=3D"color:rgb(=
240, 141, 73);">minimumMasterNodes</span><span class=3D"token pun=
ctuation">(</span><span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">;</span>=0A            <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">return</span> <span class=3D"token ke=
yword" style=3D"color:rgb(204, 153, 205);">null</span><span class=
=3D"token punctuation">;</span>=0A        <span class=3D"token pu=
nctuation">}</span>=0A    <span class=3D"token punctuation">}</sp=
an> <span class=3D"token keyword" style=3D"color:rgb(204, 153, 20=
5);">else</span> <span class=3D"token punctuation">{</span>=0A  =20=
     <span class=3D"token comment" style=3D"color:rgb(153, 153, 1=
53);">//=C8=E7=B9=FB=B5=B1=C7=B0=B4=E6=D4=DA=B5=C4=D6=F7=BD=DA=B5=
=E3=C1=D0=B1=EDactiveMasters=B2=BB=CE=AA=BF=D5=A3=AC=D4=F2=B4=D3=D6=
=D0=D1=A1=C8=A1=D6=F7=BD=DA=B5=E3</span>=0A        <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">assert</span>=
 <span class=3D"token operator" style=3D"color:rgb(103, 205, 204)=
;">!</span>activeMasters<span class=3D"token punctuation">.</span=
><span class=3D"token function" style=3D"color:rgb(240, 141, 73);=
">contains</span><span class=3D"token punctuation">(</span>localN=
ode<span class=3D"token punctuation">)</span> <span class=3D"toke=
n operator" style=3D"color:rgb(103, 205, 204);">:</span> <span cl=
ass=3D"token string" style=3D"color:rgb(126, 198, 153);">"local n=
ode should never be elected as master when other nodes indicate a=
n active master"</span><span class=3D"token punctuation">;</span>=
=0A        <span class=3D"token comment" style=3D"color:rgb(153,=20=
153, 153);">// lets tie break between discovered nodes</span>=0A=20=
       <span class=3D"token keyword" style=3D"color:rgb(204, 153,=
 205);">return</span> electMaster<span class=3D"token punctuation=
">.</span><span class=3D"token function" style=3D"color:rgb(240,=20=
141, 73);">tieBreakActiveMasters</span><span class=3D"token punct=
uation">(</span>activeMasters<span class=3D"token punctuation">)<=
/span><span class=3D"token punctuation">;</span>=0A    <span clas=
s=3D"token punctuation">}</span>=0A<span class=3D"token punctuati=
on">}</span>=0A</code></pre></div><p>=B8=F9=BE=DD=C9=CF=CA=F6=B4=FA=
=C2=EB=BF=C9=D6=AA=A3=ACElasticSearch=D4=DA=D1=A1=C8=A1=D6=F7=BD=DA=
=B5=E3=CA=B1=A3=AC=CA=D7=CF=C8=CA=B9=D3=C3<code style=3D"font-siz=
e: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242, 2=
42, 242);">electMaster.tieBreakActiveMasters</code>=D4=DA=B5=B1=C7=
=B0=D2=D1=BE=AD=CA=C7=D6=F7=BD=DA=B5=E3=B5=C4=C1=D0=B1=ED=D6=D0=D1=
=A1=C8=A1=A3=AC=C8=E7=B9=FB=B8=C3=C1=D0=B1=ED=CE=AA=BF=D5=D4=F2=D4=
=D9=CA=B9=D3=C3<code style=3D"font-size: 0.75rem; color: rgb(199,=
 37, 78); background-color: rgb(242, 242, 242);">electMaster.elec=
tMaster</code>=D4=DA=BA=F2=D1=A1=C1=D0=B1=ED=D6=D0=D1=A1=C8=A1=A1=
=A3</p><p><code style=3D"font-size: 0.75rem; color: rgb(199, 37,=20=
78); background-color: rgb(242, 242, 242);">electMaster.electMast=
er</code>=BA=CD<code style=3D"font-size: 0.75rem; color: rgb(199,=
 37, 78); background-color: rgb(242, 242, 242);">electMaster.tieB=
reakActiveMasters</code>=CA=C7=D1=A1=BE=D9=B5=C4=C2=DF=BC=AD=CB=F9=
=D4=DA=A3=AC=B5=AB=CA=C7=B1=C8=BD=CF=BC=F2=B5=A5=A3=AC=D5=B9=BF=AA=
=D4=B4=C2=EB=BF=C9=D2=D4=B7=A2=CF=D6=D7=EE=D6=D5=D1=A1=BE=D9=B9=FD=
=B3=CC=CA=C7=CA=D7=CF=C8=B6=D4=C1=D0=B1=ED=D6=D0=B5=C4=BD=DA=B5=E3=
=D7=F6=D2=BB=B8=F6=BB=F9=CA=FD=C5=C5=D0=F2=A3=AC=C5=C5=D0=F2=D4=AD=
=D4=F2=D3=D0=C1=BD=B8=F6</p><ol class=3D"wiz-list-level1"><li>=CF=
=C8=C5=D0=B6=CF=B6=D4=B1=C8=B5=C4=C1=BD=B8=F6=BD=DA=B5=E3=CA=C7=B7=
=F1=C5=E4=D6=C3=CE=AA=BF=C9=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=A3=
=AC=C5=E4=D6=C3=BF=C9=D2=D4=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=B5=
=C4=BB=F1=CA=A4=A1=A3</li><li>=C8=E7=B9=FB=C9=CF=CA=F6=B2=BB=C4=DC=
=C7=F8=B7=D6=C1=BD=B8=F6=BD=DA=B5=E3=B5=C4=CB=B3=D0=F2=A3=AC=D4=F2=
=D4=D9=B8=F9=BE=DD=BD=DA=B5=E3ID=BD=F8=D0=D0=C5=C5=D0=F2=A3=ACID=D0=
=A1=B5=C4=BB=F1=CA=A4=A1=A3</li></ol><p>=C9=CF=CA=F6=CB=B5=C3=F7=C1=
=CB<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); ba=
ckground-color: rgb(242, 242, 242);">ZenDiscovery.innerJoinCluste=
r</code>=B6=A8=D2=E5=C1=CB=D1=A1=BE=D9=BA=CD=BC=D3=C8=EB=BC=AF=C8=
=BA=B5=C4=C2=DF=BC=AD=A3=AC=D4=DA<code style=3D"font-size: 0.75re=
m; color: rgb(199, 37, 78); background-color: rgb(242, 242, 242);=
">findMaster</code>=D1=A1=BE=D9=B3=F6=D6=F7=BD=DA=B5=E3=BA=F3=A3=AC=
=D6=F7=BD=DA=B5=E3=D4=F2=B5=C8=B4=FD=C6=E4=CB=FB=BD=DA=B5=E3=BC=D3=
=C8=EB=D7=D4=BC=BA=A3=BB=C6=E4=CB=FB=BD=DA=B5=E3=B7=A2=CF=D6=D7=D4=
=BC=BA=B2=BB=CA=C7=B4=CB=B4=CE=D1=A1=BE=D9=B3=F6=B5=C4=D6=F7=BD=DA=
=B5=E3=A3=AC=D4=F2=CF=F2=B4=CB=B4=CE=D1=A1=BE=D9=B3=F6=B5=C4=D6=F7=
=BD=DA=B5=E3=B7=A2=CB=CDjoin=C7=EB=C7=F3=A3=AC=BC=D3=C8=EB=B8=C3=BD=
=DA=B5=E3=A1=A3</p><p><code style=3D"font-size: 0.75rem; color: r=
gb(199, 37, 78); background-color: rgb(242, 242, 242);">electMast=
er.electMaster</code>=BA=CD<code style=3D"font-size: 0.75rem; col=
or: rgb(199, 37, 78); background-color: rgb(242, 242, 242);">elec=
tMaster.tieBreakActiveMasters</code>=D7=EE=D6=D5=B6=BC=CA=C7=CD=A8=
=B9=FD=B5=F7=D3=C3=C8=E7=CF=C2=BA=AF=CA=FD=B6=D4=C1=D0=B1=ED=D6=D0=
=B5=C4=BD=DA=B5=E3=BD=F8=D0=D0=C5=C5=D0=F2=A3=AC=C8=BB=BA=F3=C8=A1=
=B5=DA=D2=BB=B8=F6=BD=DA=B5=E3=D7=F6=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=
=A3=BA</p><div class=3D"_2Uzcx_"><pre class=3D"line-numbers  lang=
uage-java" style=3D"font-size: 0.75rem; color: rgb(204, 204, 204)=
; background: rgb(45, 45, 45);"><code class=3D"java  language-jav=
a" style=3D"font-size: 1rem; background: none transparent;"><span=
 class=3D"token comment" style=3D"color:rgb(153, 153, 153);">/**=20=
master nodes go before other nodes, with a secondary sort by id *=
*/</span>=0A<span class=3D"token comment" style=3D"color:rgb(153,=
 153, 153);">//ElectMasterService</span>=0A<span class=3D"token k=
eyword" style=3D"color:rgb(204, 153, 205);">private</span> <span=20=
class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">stati=
c</span> <span class=3D"token keyword" style=3D"color:rgb(204, 15=
3, 205);">int</span> <span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">compareNodes</span><span class=3D"token pun=
ctuation">(</span><span class=3D"token class-name" style=3D"color=
:rgb(248, 197, 85);">DiscoveryNode</span> o1<span class=3D"token=20=
punctuation">,</span> <span class=3D"token class-name" style=3D"c=
olor:rgb(248, 197, 85);">DiscoveryNode</span> o2<span class=3D"to=
ken punctuation">)</span> <span class=3D"token punctuation">{</sp=
an>=0A    <span class=3D"token comment" style=3D"color:rgb(153, 1=
53, 153);">//=CA=D7=D1=A1=C5=D0=B6=CF=B8=C3=BD=DA=B5=E3=CA=C7=B7=F1=
=C5=E4=D6=C3=CE=AA=BF=C9=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3</spa=
n>=0A    <span class=3D"token keyword" style=3D"color:rgb(204, 15=
3, 205);">if</span> <span class=3D"token punctuation">(</span>o1<=
span class=3D"token punctuation">.</span><span class=3D"token fun=
ction" style=3D"color:rgb(240, 141, 73);">isMasterNode</span><spa=
n class=3D"token punctuation">(</span><span class=3D"token punctu=
ation">)</span> <span class=3D"token operator" style=3D"color:rgb=
(103, 205, 204);">&amp;&amp;</span> <span class=3D"token operator=
" style=3D"color:rgb(103, 205, 204);">!</span>o2<span class=3D"to=
ken punctuation">.</span><span class=3D"token function" style=3D"=
color:rgb(240, 141, 73);">isMasterNode</span><span class=3D"token=
 punctuation">(</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">)</span> <span class=3D"token pu=
nctuation">{</span>=0A        <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">return</span> <span class=3D"token=
 operator" style=3D"color:rgb(103, 205, 204);">-</span><span clas=
s=3D"token number" style=3D"color:rgb(240, 141, 73);">1</span><sp=
an class=3D"token punctuation">;</span>=0A    <span class=3D"toke=
n punctuation">}</span>=0A    <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">if</span> <span class=3D"token pun=
ctuation">(</span><span class=3D"token operator" style=3D"color:r=
gb(103, 205, 204);">!</span>o1<span class=3D"token punctuation">.=
</span><span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">isMasterNode</span><span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span> <span class=3D"tok=
en operator" style=3D"color:rgb(103, 205, 204);">&amp;&amp;</span=
> o2<span class=3D"token punctuation">.</span><span class=3D"toke=
n function" style=3D"color:rgb(240, 141, 73);">isMasterNode</span=
><span class=3D"token punctuation">(</span><span class=3D"token p=
unctuation">)</span><span class=3D"token punctuation">)</span> <s=
pan class=3D"token punctuation">{</span>=0A        <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">return</span>=
 <span class=3D"token number" style=3D"color:rgb(240, 141, 73);">=
1</span><span class=3D"token punctuation">;</span>=0A    <span cl=
ass=3D"token punctuation">}</span>=0A    <span class=3D"token com=
ment" style=3D"color:rgb(153, 153, 153);">//=D4=DA=B1=C8=BD=CF=BD=
=DA=B5=E3ID</span>=0A    <span class=3D"token keyword" style=3D"c=
olor:rgb(204, 153, 205);">return</span> o1<span class=3D"token pu=
nctuation">.</span><span class=3D"token function" style=3D"color:=
rgb(240, 141, 73);">getId</span><span class=3D"token punctuation"=
>(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">compareTo</span><span class=3D"token p=
unctuation">(</span>o2<span class=3D"token punctuation">.</span><=
span class=3D"token function" style=3D"color:rgb(240, 141, 73);">=
getId</span><span class=3D"token punctuation">(</span><span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">;</span>=0A<span class=3D=
"token punctuation">}</span>=0A</code></pre></div><h3 style=3D"fo=
nt-size: 1.375rem;">3.1.3 Master=D1=A1=BE=D9=CA=B5=CF=D6=A3=BA=B5=
=C8=B4=FD=C6=E4=CB=FB=BD=DA=B5=E3=BC=D3=C8=EB=D7=D4=BC=BA</h3><p>=
=B5=B1=D2=BB=B8=F6=BD=DA=B5=E3=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=
=CA=B1=A3=AC=CD=A8=B9=FD=C9=CF=C3=E6=B5=C4<code style=3D"font-siz=
e: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242, 2=
42, 242);">ZenDiscovery.innerJoinCluster</code>=BF=C9=D6=AA=A3=AC=
=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=BD=DA=B5=E3=BA=CD=C2=E4=
=D1=A1=B5=C4=BD=DA=B5=E3=BB=E1=D6=B4=D0=D0=B2=BB=CD=AC=B5=C4=B2=D9=
=D7=F7=A3=AC=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=BD=DA=B5=E3=
=BB=E1=B5=C8=B4=FD=D7=E3=B9=BB=CA=FD=C1=BF=B5=C4=C6=E4=CB=FB=BD=DA=
=B5=E3=BD=DA=B5=E3=BC=D3=C8=EB=D7=D4=BC=BA=A3=AC=B6=F8=C2=E4=D1=A1=
=B5=C4=BD=DA=B5=E3=D4=F2=CF=F2=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=
=B5=C4=BD=DA=B5=E3=B7=A2=CB=CDDISCOVERY_JOIN_ACTION_NAM=C7=EB=C7=F3=
=BC=D3=C8=EB=D6=F7=BD=DA=B5=E3=A3=AC=CF=C2=C3=E6=CE=D2=C3=C7=B7=D6=
=B1=F0=BF=B4=D2=BB=CF=C2=CF=E0=B9=D8=CA=B5=CF=D6=A3=BA</p><h4 sty=
le=3D"font-size: 1.25rem;">3.1.3.1 =B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=
=B5=E3=B5=C8=B4=FD=C6=E4=CB=FB=BD=DA=B5=E3=BC=D3=C8=EB</h4><p>=B5=
=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=BD=DA=B5=E3=B5=C8=B4=FD=C6=
=E4=CB=FB=BD=DA=B5=E3=BC=D3=C8=EB=A3=AC=C6=E4=CA=B5=BE=CD=CA=C7=D2=
=BB=B8=F6=CD=B6=C6=B1=B9=FD=B3=CC=A3=AC=CF=C8=D4=D9=B4=CE=BF=B4=D2=
=BB=CF=C2<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 7=
8); background-color: rgb(242, 242, 242);">ZenDiscovery.innerJoin=
Cluster</code>=CA=B5=CF=D6=A3=BA</p><div class=3D"_2Uzcx_"><pre c=
lass=3D"line-numbers  language-java" style=3D"font-size: 0.75rem;=
 color: rgb(204, 204, 204); background: rgb(45, 45, 45);"><code c=
lass=3D"java  language-java" style=3D"font-size: 1rem; background=
: none transparent;"><span class=3D"token comment" style=3D"color=
:rgb(153, 153, 153);">//ZenDiscovery</span>=0A <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">private</span> <s=
pan class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">v=
oid</span> <span class=3D"token function" style=3D"color:rgb(240,=
 141, 73);">innerJoinCluster</span><span class=3D"token punctuati=
on">(</span><span class=3D"token punctuation">)</span> <span clas=
s=3D"token punctuation">{</span>=0A    <span class=3D"token punct=
uation">.</span><span class=3D"token punctuation">.</span><span c=
lass=3D"token punctuation">.</span>=0A    =CA=B9=D3=C3findMaster=D1=
=A1=BE=D9=D6=F7=BD=DA=B5=E3=0A    <span class=3D"token comment" s=
tyle=3D"color:rgb(153, 153, 153);">//=C8=E7=B9=FB=D7=D4=BC=BA=B5=B1=
=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3</span>=0A    <span class=3D"token=20=
keyword" style=3D"color:rgb(204, 153, 205);">if</span> <span clas=
s=3D"token punctuation">(</span>transportService<span class=3D"to=
ken punctuation">.</span><span class=3D"token function" style=3D"=
color:rgb(240, 141, 73);">getLocalNode</span><span class=3D"token=
 punctuation">(</span><span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">.</span><span class=3D"token fun=
ction" style=3D"color:rgb(240, 141, 73);">equals</span><span clas=
s=3D"token punctuation">(</span>masterNode<span class=3D"token pu=
nctuation">)</span><span class=3D"token punctuation">)</span> <sp=
an class=3D"token punctuation">{</span>=0A        <span class=3D"=
token comment" style=3D"color:rgb(153, 153, 153);">//=C5=E4=D6=C3=
discovery.zen.minimum_master_nodes=D2=AA=C7=F3=B5=C4=D7=EE=C9=D9=BC=
=D3=C8=EB=D7=D4=BC=BA=B5=C4=BD=DA=B5=E3=CA=FD</span>=0A        <s=
pan class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">f=
inal</span> <span class=3D"token keyword" style=3D"color:rgb(204,=
 153, 205);">int</span> requiredJoins <span class=3D"token operat=
or" style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">Math</span>=
<span class=3D"token punctuation">.</span><span class=3D"token fu=
nction" style=3D"color:rgb(240, 141, 73);">max</span><span class=3D=
"token punctuation">(</span><span class=3D"token number" style=3D=
"color:rgb(240, 141, 73);">0</span><span class=3D"token punctuati=
on">,</span> electMaster<span class=3D"token punctuation">.</span=
><span class=3D"token function" style=3D"color:rgb(240, 141, 73);=
">minimumMasterNodes</span><span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span> <span class=3D"tok=
en operator" style=3D"color:rgb(103, 205, 204);">-</span> <span c=
lass=3D"token number" style=3D"color:rgb(240, 141, 73);">1</span>=
<span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">;</span> <span class=3D"token comment" style=3D"color:=
rgb(153, 153, 153);">// we count as one</span>=0A        <span cl=
ass=3D"token punctuation">.</span><span class=3D"token punctuatio=
n">.</span><span class=3D"token punctuation">.</span>=0A        n=
odeJoinController<span class=3D"token punctuation">.</span><span=20=
class=3D"token function" style=3D"color:rgb(240, 141, 73);">waitT=
oBeElectedAsMaster</span><span class=3D"token punctuation">(</spa=
n>requiredJoins<span class=3D"token punctuation">,</span> masterE=
lectionWaitForJoinsTimeout<span class=3D"token punctuation">,</sp=
an>=0A                <span class=3D"token keyword" style=3D"colo=
r:rgb(204, 153, 205);">new</span> <span class=3D"token class-name=
" style=3D"color:rgb(248, 197, 85);">NodeJoinController</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token class=
-name" style=3D"color:rgb(248, 197, 85);">ElectionCallback</span>=
<span class=3D"token punctuation">(</span><span class=3D"token pu=
nctuation">)</span> <span class=3D"token punctuation">{</span>=0A=
                    <span class=3D"token comment" style=3D"color:=
rgb(153, 153, 153);">//=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=A3=AC=
=C7=E5=BF=D5=D7=B4=CC=AC=A3=AC=D2=D4=B1=B8=CF=C2=D2=BB=B4=CE=D1=A1=
=BE=D9</span>=0A                    <span class=3D"token annotati=
on punctuation">@Override</span>=0A                    <span clas=
s=3D"token keyword" style=3D"color:rgb(204, 153, 205);">public</s=
pan> <span class=3D"token keyword" style=3D"color:rgb(204, 153, 2=
05);">void</span> <span class=3D"token function" style=3D"color:r=
gb(240, 141, 73);">onElectedAsMaster</span><span class=3D"token p=
unctuation">(</span><span class=3D"token class-name" style=3D"col=
or:rgb(248, 197, 85);">ClusterState</span> state<span class=3D"to=
ken punctuation">)</span> <span class=3D"token punctuation">{</sp=
an>=0A                        <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">synchronized</span> <span class=3D=
"token punctuation">(</span>stateMutex<span class=3D"token punctu=
ation">)</span> <span class=3D"token punctuation">{</span>=0A   =20=
                        joinThreadControl<span class=3D"token pun=
ctuation">.</span><span class=3D"token function" style=3D"color:r=
gb(240, 141, 73);">markThreadAsDone</span><span class=3D"token pu=
nctuation">(</span>currentThread<span class=3D"token punctuation"=
>)</span><span class=3D"token punctuation">;</span>=0A          =20=
             <span class=3D"token punctuation">}</span>=0A      =20=
             <span class=3D"token punctuation">}</span>=0A      =20=
             <span class=3D"token comment" style=3D"color:rgb(153=
, 153, 153);">//=B4=CB=B4=CE=D1=A1=BE=D9=CA=A7=B0=DC=A3=AC=D6=D8=D0=
=C2=BF=AA=C6=F4=CF=C2=D2=BB=C2=D6=D1=A1=BE=D9</span>=0A         =20=
          <span class=3D"token annotation punctuation">@Override<=
/span>=0A                    <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">public</span> <span class=3D"token ke=
yword" style=3D"color:rgb(204, 153, 205);">void</span> <span clas=
s=3D"token function" style=3D"color:rgb(240, 141, 73);">onFailure=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken class-name" style=3D"color:rgb(248, 197, 85);">Throwable</sp=
an> t<span class=3D"token punctuation">)</span> <span class=3D"to=
ken punctuation">{</span>=0A                        logger<span c=
lass=3D"token punctuation">.</span><span class=3D"token function"=
 style=3D"color:rgb(240, 141, 73);">trace</span><span class=3D"to=
ken punctuation">(</span><span class=3D"token string" style=3D"co=
lor:rgb(126, 198, 153);">"failed while waiting for nodes to join,=
 rejoining"</span><span class=3D"token punctuation">,</span> t<sp=
an class=3D"token punctuation">)</span><span class=3D"token punct=
uation">;</span>=0A                        <span class=3D"token k=
eyword" style=3D"color:rgb(204, 153, 205);">synchronized</span> <=
span class=3D"token punctuation">(</span>stateMutex<span class=3D=
"token punctuation">)</span> <span class=3D"token punctuation">{<=
/span>=0A                            joinThreadControl<span class=
=3D"token punctuation">.</span><span class=3D"token function" sty=
le=3D"color:rgb(240, 141, 73);">markThreadAsDoneAndStartNew</span=
><span class=3D"token punctuation">(</span>currentThread<span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation=
">;</span>=0A                        <span class=3D"token punctua=
tion">}</span>=0A                    <span class=3D"token punctua=
tion">}</span>=0A                <span class=3D"token punctuation=
">}</span>=0A=0A        <span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">;</span>=0A    <span class=3D"=
token punctuation">}</span> <span class=3D"token keyword" style=3D=
"color:rgb(204, 153, 205);">else</span> <span class=3D"token punc=
tuation">{</span>=0A        <span class=3D"token comment" style=3D=
"color:rgb(153, 153, 153);">//=B1=BE=B4=CE=D1=A1=BE=D9=C2=E4=D1=A1=
=B5=C4=BD=DA=B5=E3=A3=AC=CA=D7=CF=C8=CD=A3=D6=B9=D1=A1=BE=D9=B2=D9=
=D7=F7</span>=0A        <span class=3D"token comment" style=3D"co=
lor:rgb(153, 153, 153);">// process any incoming joins (they will=
 fail because we are not the master)</span>=0A        nodeJoinCon=
troller<span class=3D"token punctuation">.</span><span class=3D"t=
oken function" style=3D"color:rgb(240, 141, 73);">stopElectionCon=
text</span><span class=3D"token punctuation">(</span>masterNode <=
span class=3D"token operator" style=3D"color:rgb(103, 205, 204);"=
>+</span> <span class=3D"token string" style=3D"color:rgb(126, 19=
8, 153);">" elected"</span><span class=3D"token punctuation">)</s=
pan><span class=3D"token punctuation">;</span>=0A        <span cl=
ass=3D"token comment" style=3D"color:rgb(153, 153, 153);">//=CF=F2=
=B1=BE=B4=CE=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=BD=DA=B5=E3=
=B7=A2=CB=CDjoin=C7=EB=C7=F3</span>=0A        <span class=3D"toke=
n comment" style=3D"color:rgb(153, 153, 153);">// send join reque=
st</span>=0A        <span class=3D"token keyword" style=3D"color:=
rgb(204, 153, 205);">final</span> <span class=3D"token keyword" s=
tyle=3D"color:rgb(204, 153, 205);">boolean</span> success <span c=
lass=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D</=
span> <span class=3D"token function" style=3D"color:rgb(240, 141,=
 73);">joinElectedMaster</span><span class=3D"token punctuation">=
(</span>masterNode<span class=3D"token punctuation">)</span><span=
 class=3D"token punctuation">;</span>=0A=0A        <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">synchronized<=
/span> <span class=3D"token punctuation">(</span>stateMutex<span=20=
class=3D"token punctuation">)</span> <span class=3D"token punctua=
tion">{</span>=0A            <span class=3D"token punctuation">.<=
/span><span class=3D"token punctuation">.</span><span class=3D"to=
ken punctuation">.</span>=D2=BB=D0=A9=D2=EC=B3=A3=B4=A6=C0=ED=0A=20=
       <span class=3D"token punctuation">}</span>=0A    <span cla=
ss=3D"token punctuation">}</span>=0A<span class=3D"token punctuat=
ion">}</span>=0A</code></pre></div><p>=B5=B1=D1=A1=CE=AA=D6=F7=BD=
=DA=B5=E3=B5=C4=BD=DA=B5=E3=BB=E1=B5=F7=D3=C3<code style=3D"font-=
size: 0.75rem; color: rgb(199, 37, 78); background-color: rgb(242=
, 242, 242);">nodeJoinController.waitToBeElectedAsMaster</code>=B5=
=C8=B4=FD=C6=E4=CB=FB=BD=DA=B5=E3=BC=D3=C8=EB=D7=D4=BC=BA=A3=A8=CD=
=B6=C6=B1=A3=A9=A1=A3=D5=E2=C0=EF=B2=BB=D4=D9=D5=B9=BF=AA=C6=E4=CA=
=B5=CF=D6=D4=AD=C0=ED=A3=AC=BA=CD=C6=E4=CB=FB=CD=AC=B2=BD=B2=D9=D7=
=F7=D2=BB=D1=F9=A3=AC=B2=C9=D3=C3=BC=C6=CA=FD=C6=F7=BC=C7=C2=BC=D2=
=AA=C7=F3=BC=D3=C8=EB=D7=D4=BC=BA=B5=C4=BD=DA=B5=E3=B8=F6=CA=FD=A3=
=AC=B5=C8=B4=FD=C6=E4=CB=FB=BD=DA=B5=E3=B7=A2=CB=CDDISCOVERY_JOIN=
_ACTION_NAME=C7=EB=C7=F3=BC=D3=C8=EB=D7=D4=BC=BA=A3=AC=C3=BF=B3=C9=
=B9=A6=CA=D5=B5=BD=D2=BB=B8=F6=C7=EB=C7=F3=BC=B4=B5=DD=BC=F5=BC=C6=
=CA=FD=C6=F7=A3=AC=BC=C6=CB=E3=C6=F7=B5=C8=D3=DA0=CA=B1=B1=ED=CA=BE=
=C2=FA=D7=E3=CB=F9=D0=E8=B5=C4=D7=EE=C9=D9=C6=B1=CA=FD=A3=AC=B4=CB=
=CA=B1=B2=C5=B1=ED=CA=BE=D7=D4=BC=BA=D5=E6=D5=FD=B3=C9=CE=AA=D6=F7=
=BD=DA=B5=E3=A1=A3</p><h4 style=3D"font-size: 1.25rem;">3.1.3.2 =C2=
=E4=D1=A1=BD=DA=B5=E3=BC=D3=C8=EB=D6=F7=BD=DA=B5=E3</h4><p>=D5=E2=
=C0=EF=C6=E4=CA=B5=BE=CD=CA=C7=D2=BB=B8=F6=CD=B6=C6=B1=B9=FD=B3=CC=
=A3=AC=C2=E4=D1=A1=BD=DA=B5=E3=CD=A8=B9=FD=B5=F7=D3=C3<code style=
=3D"font-size: 0.75rem; color: rgb(199, 37, 78); background-color=
: rgb(242, 242, 242);">joinElectedMaster</code>=BC=D3=C8=EB=D6=F7=
=BD=DA=B5=E3=A3=BA</p><div class=3D"_2Uzcx_"><pre class=3D"line-n=
umbers  language-java" style=3D"font-size: 0.75rem; color: rgb(20=
4, 204, 204); background: rgb(45, 45, 45);"><code class=3D"java =20=
language-java" style=3D"font-size: 1rem; background: none transpa=
rent;"> <span class=3D"token keyword" style=3D"color:rgb(204, 153=
, 205);">private</span> <span class=3D"token keyword" style=3D"co=
lor:rgb(204, 153, 205);">boolean</span> <span class=3D"token func=
tion" style=3D"color:rgb(240, 141, 73);">joinElectedMaster</span>=
<span class=3D"token punctuation">(</span><span class=3D"token cl=
ass-name" style=3D"color:rgb(248, 197, 85);">DiscoveryNode</span>=
 masterNode<span class=3D"token punctuation">)</span> <span class=
=3D"token punctuation">{</span>=0A    <span class=3D"token keywor=
d" style=3D"color:rgb(204, 153, 205);">try</span> <span class=3D"=
token punctuation">{</span>=0A        <span class=3D"token commen=
t" style=3D"color:rgb(153, 153, 153);">// first, make sure we can=
 connect to the master</span>=0A        <span class=3D"token comm=
ent" style=3D"color:rgb(153, 153, 153);">//=CF=C8=B3=A2=CA=D4=CA=C7=
=B7=F1=C4=DC=B9=BB=C1=AC=BD=D3=B4=CE=C2=D6=D1=A1=BE=D9=D6=D0=B5=B1=
=D1=A1=B5=C4=D6=F7=BD=DA=B5=E3</span>=0A        transportService<=
span class=3D"token punctuation">.</span><span class=3D"token fun=
ction" style=3D"color:rgb(240, 141, 73);">connectToNode</span><sp=
an class=3D"token punctuation">(</span>masterNode<span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">;</sp=
an>=0A    <span class=3D"token punctuation">}</span> <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">catch</span>=20=
<span class=3D"token punctuation">(</span><span class=3D"token cl=
ass-name" style=3D"color:rgb(248, 197, 85);">Exception</span> e<s=
pan class=3D"token punctuation">)</span> <span class=3D"token pun=
ctuation">{</span>=0A        logger<span class=3D"token punctuati=
on">.</span><span class=3D"token function" style=3D"color:rgb(240=
, 141, 73);">warn</span><span class=3D"token punctuation">(</span=
><span class=3D"token punctuation">(</span><span class=3D"token p=
unctuation">)</span> <span class=3D"token operator" style=3D"colo=
r:rgb(103, 205, 204);">-&gt;</span> <span class=3D"token keyword"=
 style=3D"color:rgb(204, 153, 205);">new</span> <span class=3D"to=
ken class-name" style=3D"color:rgb(248, 197, 85);">ParameterizedM=
essage</span><span class=3D"token punctuation">(</span><span clas=
s=3D"token string" style=3D"color:rgb(126, 198, 153);">"failed to=
 connect to master [{}], retrying..."</span><span class=3D"token=20=
punctuation">,</span> masterNode<span class=3D"token punctuation"=
>)</span><span class=3D"token punctuation">,</span> e<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">;</=
span>=0A        <span class=3D"token keyword" style=3D"color:rgb(=
204, 153, 205);">return</span> <span class=3D"token boolean" styl=
e=3D"color:rgb(240, 141, 73);">false</span><span class=3D"token p=
unctuation">;</span>=0A    <span class=3D"token punctuation">}</s=
pan>=0A    <span class=3D"token keyword" style=3D"color:rgb(204,=20=
153, 205);">int</span> joinAttempt <span class=3D"token operator"=
 style=3D"color:rgb(103, 205, 204);">=3D</span> <span class=3D"to=
ken number" style=3D"color:rgb(240, 141, 73);">0</span><span clas=
s=3D"token punctuation">;</span> <span class=3D"token comment" st=
yle=3D"color:rgb(153, 153, 153);">// we retry on illegal state if=
 the master is not yet ready</span>=0A    <span class=3D"token co=
mment" style=3D"color:rgb(153, 153, 153);">//while=D1=AD=BB=B7=A3=
=AC=B1=ED=CA=BE=C8=E7=B9=FB=B7=A2=CB=CD=BF=C9=BD=D3=CA=DC=B5=C4=D2=
=EC=B3=A3=CA=B1=A3=AC=BB=E1=D6=D8=B8=B4=B7=A2=CB=CDjoin=C7=EB=C7=F3=
</span>=0A    <span class=3D"token keyword" style=3D"color:rgb(20=
4, 153, 205);">while</span> <span class=3D"token punctuation">(</=
span><span class=3D"token boolean" style=3D"color:rgb(240, 141, 7=
3);">true</span><span class=3D"token punctuation">)</span> <span=20=
class=3D"token punctuation">{</span>=0A        <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">try</span> <span=20=
class=3D"token punctuation">{</span>=0A            logger<span cl=
ass=3D"token punctuation">.</span><span class=3D"token function"=20=
style=3D"color:rgb(240, 141, 73);">trace</span><span class=3D"tok=
en punctuation">(</span><span class=3D"token string" style=3D"col=
or:rgb(126, 198, 153);">"joining master {}"</span><span class=3D"=
token punctuation">,</span> masterNode<span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">;</span>=0A    =20=
       membership<span class=3D"token punctuation">.</span><span=20=
class=3D"token function" style=3D"color:rgb(240, 141, 73);">sendJ=
oinRequestBlocking</span><span class=3D"token punctuation">(</spa=
n>masterNode<span class=3D"token punctuation">,</span> transportS=
ervice<span class=3D"token punctuation">.</span><span class=3D"to=
ken function" style=3D"color:rgb(240, 141, 73);">getLocalNode</sp=
an><span class=3D"token punctuation">(</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">,</span>=20=
joinTimeout<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A            <span class=3D"token k=
eyword" style=3D"color:rgb(204, 153, 205);">return</span> <span c=
lass=3D"token boolean" style=3D"color:rgb(240, 141, 73);">true</s=
pan><span class=3D"token punctuation">;</span>=0A        <span cl=
ass=3D"token punctuation">}</span> <span class=3D"token keyword"=20=
style=3D"color:rgb(204, 153, 205);">catch</span> <span class=3D"t=
oken punctuation">(</span><span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">Exception</span> e<span class=3D"token=
 punctuation">)</span> <span class=3D"token punctuation">{</span>=
=0A            <span class=3D"token keyword" style=3D"color:rgb(2=
04, 153, 205);">final</span> <span class=3D"token class-name" sty=
le=3D"color:rgb(248, 197, 85);">Throwable</span> unwrap <span cla=
ss=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D</sp=
an> <span class=3D"token class-name" style=3D"color:rgb(248, 197,=
 85);">ExceptionsHelper</span><span class=3D"token punctuation">.=
</span><span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">unwrapCause</span><span class=3D"token punctuation">(</sp=
an>e<span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">;</span>=0A            <span class=3D"token keywor=
d" style=3D"color:rgb(204, 153, 205);">if</span> <span class=3D"t=
oken punctuation">(</span>unwrap <span class=3D"token keyword" st=
yle=3D"color:rgb(204, 153, 205);">instanceof</span> <span class=3D=
"token class-name" style=3D"color:rgb(248, 197, 85);">NotMasterEx=
ception</span><span class=3D"token punctuation">)</span> <span cl=
ass=3D"token punctuation">{</span>=0A                <span class=3D=
"token comment" style=3D"color:rgb(153, 153, 153);">//=CD=B3=BC=C6=
=CA=A7=B0=DC=B4=CE=CA=FD=A3=AC=C8=E7=B9=FB=B4=EF=B5=BD=D6=B8=B6=A8=
=B4=CB=CA=B1=D4=F2=B2=BB=D4=D9=B7=A2=CB=CD</span>=0A            =20=
   <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205=
);">if</span> <span class=3D"token punctuation">(</span><span cla=
ss=3D"token operator" style=3D"color:rgb(103, 205, 204);">++</spa=
n>joinAttempt <span class=3D"token operator" style=3D"color:rgb(1=
03, 205, 204);">=3D=3D</span> <span class=3D"token keyword" style=
=3D"color:rgb(204, 153, 205);">this</span><span class=3D"token pu=
nctuation">.</span>joinRetryAttempts<span class=3D"token punctuat=
ion">)</span> <span class=3D"token punctuation">{</span>=0A     =20=
              logger<span class=3D"token punctuation">.</span><sp=
an class=3D"token function" style=3D"color:rgb(240, 141, 73);">in=
fo</span><span class=3D"token punctuation">(</span><span class=3D=
"token string" style=3D"color:rgb(126, 198, 153);">"failed to sen=
d join request to master [{}], reason [{}], tried [{}] times"</sp=
an><span class=3D"token punctuation">,</span> masterNode<span cla=
ss=3D"token punctuation">,</span> <span class=3D"token class-name=
" style=3D"color:rgb(248, 197, 85);">ExceptionsHelper</span><span=
 class=3D"token punctuation">.</span><span class=3D"token functio=
n" style=3D"color:rgb(240, 141, 73);">detailedMessage</span><span=
 class=3D"token punctuation">(</span>e<span class=3D"token punctu=
ation">)</span><span class=3D"token punctuation">,</span> joinAtt=
empt<span class=3D"token punctuation">)</span><span class=3D"toke=
n punctuation">;</span>=0A                    <span class=3D"toke=
n keyword" style=3D"color:rgb(204, 153, 205);">return</span> <spa=
n class=3D"token boolean" style=3D"color:rgb(240, 141, 73);">fals=
e</span><span class=3D"token punctuation">;</span>=0A           =20=
    <span class=3D"token punctuation">}</span> <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">else</span> <span=
 class=3D"token punctuation">{</span>=0A                    logge=
r<span class=3D"token punctuation">.</span><span class=3D"token f=
unction" style=3D"color:rgb(240, 141, 73);">trace</span><span cla=
ss=3D"token punctuation">(</span><span class=3D"token string" sty=
le=3D"color:rgb(126, 198, 153);">"master {} failed with [{}]. ret=
rying... (attempts done: [{}])"</span><span class=3D"token punctu=
ation">,</span> masterNode<span class=3D"token punctuation">,</sp=
an> <span class=3D"token class-name" style=3D"color:rgb(248, 197,=
 85);">ExceptionsHelper</span><span class=3D"token punctuation">.=
</span><span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">detailedMessage</span><span class=3D"token punctuation">(=
</span>e<span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">,</span> joinAttempt<span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">;</span>=0A   =20=
            <span class=3D"token punctuation">}</span>=0A       =20=
    <span class=3D"token punctuation">}</span> <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">else</span> <span=
 class=3D"token punctuation">{</span>=0A                <span cla=
ss=3D"token keyword" style=3D"color:rgb(204, 153, 205);">if</span=
> <span class=3D"token punctuation">(</span>logger<span class=3D"=
token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">isTraceEnabled</span><span class=3D"to=
ken punctuation">(</span><span class=3D"token punctuation">)</spa=
n><span class=3D"token punctuation">)</span> <span class=3D"token=
 punctuation">{</span>=0A                    logger<span class=3D=
"token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">trace</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">(</span><span c=
lass=3D"token punctuation">)</span> <span class=3D"token operator=
" style=3D"color:rgb(103, 205, 204);">-&gt;</span> <span class=3D=
"token keyword" style=3D"color:rgb(204, 153, 205);">new</span> <s=
pan class=3D"token class-name" style=3D"color:rgb(248, 197, 85);"=
>ParameterizedMessage</span><span class=3D"token punctuation">(</=
span><span class=3D"token string" style=3D"color:rgb(126, 198, 15=
3);">"failed to send join request to master [{}]"</span><span cla=
ss=3D"token punctuation">,</span> masterNode<span class=3D"token=20=
punctuation">)</span><span class=3D"token punctuation">,</span> e=
<span class=3D"token punctuation">)</span><span class=3D"token pu=
nctuation">;</span>=0A                <span class=3D"token punctu=
ation">}</span> <span class=3D"token keyword" style=3D"color:rgb(=
204, 153, 205);">else</span> <span class=3D"token punctuation">{<=
/span>=0A                    logger<span class=3D"token punctuati=
on">.</span><span class=3D"token function" style=3D"color:rgb(240=
, 141, 73);">info</span><span class=3D"token punctuation">(</span=
><span class=3D"token string" style=3D"color:rgb(126, 198, 153);"=
>"failed to send join request to master [{}], reason [{}]"</span>=
<span class=3D"token punctuation">,</span> masterNode<span class=3D=
"token punctuation">,</span> <span class=3D"token class-name" sty=
le=3D"color:rgb(248, 197, 85);">ExceptionsHelper</span><span clas=
s=3D"token punctuation">.</span><span class=3D"token function" st=
yle=3D"color:rgb(240, 141, 73);">detailedMessage</span><span clas=
s=3D"token punctuation">(</span>e<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A                <span class=3D"tok=
en punctuation">}</span>=0A                <span class=3D"token k=
eyword" style=3D"color:rgb(204, 153, 205);">return</span> <span c=
lass=3D"token boolean" style=3D"color:rgb(240, 141, 73);">false</=
span><span class=3D"token punctuation">;</span>=0A            <sp=
an class=3D"token punctuation">}</span>=0A        <span class=3D"=
token punctuation">}</span>=0A=0A        <span class=3D"token key=
word" style=3D"color:rgb(204, 153, 205);">try</span> <span class=3D=
"token punctuation">{</span>=0A            <span class=3D"token c=
omment" style=3D"color:rgb(153, 153, 153);">//=D2=BB=B4=CE=CA=A7=B0=
=DC=D6=AE=BA=F3=B5=C8=B4=FD=D2=BB=B6=A8=CA=B1=BC=E4=D6=AE=BA=F3=D4=
=D9=B4=CE=D6=D8=CA=D4</span>=0A            <span class=3D"token c=
lass-name" style=3D"color:rgb(248, 197, 85);">Thread</span><span=20=
class=3D"token punctuation">.</span><span class=3D"token function=
" style=3D"color:rgb(240, 141, 73);">sleep</span><span class=3D"t=
oken punctuation">(</span><span class=3D"token keyword" style=3D"=
color:rgb(204, 153, 205);">this</span><span class=3D"token punctu=
ation">.</span>joinRetryDelay<span class=3D"token punctuation">.<=
/span><span class=3D"token function" style=3D"color:rgb(240, 141,=
 73);">millis</span><span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span><span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">;</span>=0A   =20=
    <span class=3D"token punctuation">}</span> <span class=3D"tok=
en keyword" style=3D"color:rgb(204, 153, 205);">catch</span> <spa=
n class=3D"token punctuation">(</span><span class=3D"token class-=
name" style=3D"color:rgb(248, 197, 85);">InterruptedException</sp=
an> e<span class=3D"token punctuation">)</span> <span class=3D"to=
ken punctuation">{</span>=0A            <span class=3D"token clas=
s-name" style=3D"color:rgb(248, 197, 85);">Thread</span><span cla=
ss=3D"token punctuation">.</span><span class=3D"token function" s=
tyle=3D"color:rgb(240, 141, 73);">currentThread</span><span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">=
)</span><span class=3D"token punctuation">.</span><span class=3D"=
token function" style=3D"color:rgb(240, 141, 73);">interrupt</spa=
n><span class=3D"token punctuation">(</span><span class=3D"token=20=
punctuation">)</span><span class=3D"token punctuation">;</span>=0A=
        <span class=3D"token punctuation">}</span>=0A    <span cl=
ass=3D"token punctuation">}</span>=0A<span class=3D"token punctua=
tion">}</span>=0A</code></pre></div><p>=C9=CF=C3=E6=B4=FA=C2=EB=D6=
=D0=BF=C9=D2=D4=BF=B4=B3=F6=A3=AC=B5=B1=C7=B0=BD=DA=B5=E3=BB=E1=CA=
=D7=CF=C8=B3=A2=CA=D4=C1=AC=BD=D3=B5=B1=D1=A1=B5=C4=D6=F7=BD=DA=B5=
=E3=A3=AC<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 7=
8); background-color: rgb(242, 242, 242);">transportService.conne=
ctToNode</code>=CA=B5=CF=D6=D4=AD=C0=ED=BF=C9=D2=D4=B2=CE=BF=BC=D5=
=E2=C6=AA<a href=3D"https://www.jianshu.com/p/8610a5f2b775" targe=
t=3D"_blank" style=3D"color:rgb(6, 129, 208);text-decoration:none=
;">ElasticSearch =BB=F9=D3=DANettty=B5=C4=CD=A8=D0=C5=D4=AD=C0=ED=
</a>=A3=AC=C6=E4=CA=B5=BE=CD=CA=C7=BF=CB=C2=A1=BF=CD=BB=A7=B6=CB<=
code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); backgr=
ound-color: rgb(242, 242, 242);">Bootstrap</code>=C4=A3=B0=E5=A3=AC=
=D7=A2=B2=E1handler=A3=AC=C8=BB=BA=F3=B5=F7=D3=C3<code style=3D"f=
ont-size: 0.75rem; color: rgb(199, 37, 78); background-color: rgb=
(242, 242, 242);">connect</code>=BA=AF=CA=FD=A3=AC=B3=C9=B9=A6=D4=
=F2=B1=ED=CA=BE=BF=C9=D2=D4=C1=AC=BD=D3=A1=A3</p><p>=C1=AC=BD=D3=B3=
=C9=B9=A6=D6=AE=BA=F3=BB=E1=B7=A2=CB=CDDISCOVERY_JOIN_ACTION_NAME=
=C7=EB=C7=F3=A3=AC=C9=CF=C3=E6=B4=FA=C2=EB=D6=D0=CA=A7=B0=DC=D6=D8=
=CA=D4=B4=CE=CA=FD=CD=A8=B9=FD<code style=3D"font-size: 0.75rem;=20=
color: rgb(199, 37, 78); background-color: rgb(242, 242, 242);">d=
iscovery.zen.join_retry_attempts</code>=BD=F8=D0=D0=C5=E4=D6=C3=A3=
=AC=C3=BF=B4=CE=D6=D8=CA=D4=D6=AE=BC=E4=B5=C4=B5=C8=B4=FD=CA=B1=BC=
=E4=CD=A8=B9=FD<code style=3D"font-size: 0.75rem; color: rgb(199,=
 37, 78); background-color: rgb(242, 242, 242);">discovery.zen.jo=
in_retry_delay</code>=BD=F8=D0=D0=C5=E4=D6=C3=A1=A3</p><p>=D4=DA<=
code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78); backgr=
ound-color: rgb(242, 242, 242);">MembershipAction</code>=BF=C9=D2=
=D4=BF=B4=B5=BD=B5=B1=D1=A1=CE=AA=D6=F7=BD=DA=B5=E3=B5=C4=BD=DA=B5=
=E3=B4=A6=C0=EDDISCOVERY_JOIN_ACTION_NAME=C7=EB=C7=F3=B5=C4handle=
r=CE=AA<code style=3D"font-size: 0.75rem; color: rgb(199, 37, 78)=
; background-color: rgb(242, 242, 242);">JoinRequestRequestHandle=
r</code>=A3=AC=B4=F3=B8=C5=B4=A6=C0=ED=B7=BD=CA=BD=D4=DA3.1.3.1=D2=
=D1=BE=AD=BD=E9=C9=DC=B9=FD=A3=AC=D5=E2=C0=EF=B2=BB=D4=D9=D7=B8=CA=
=F6=A1=A3</p><h1 style=3D"font-size: 1.625rem;">4 ElasticSearch=D4=
=CB=D0=D0=B9=FD=B3=CC=D6=D0=B5=C4rejoin</h1><p>ElasticSearch=D4=CB=
=D0=D0=B9=FD=B3=CC=D6=D0=A3=AC=D6=F7=BD=DA=B5=E3=BF=C9=C4=DC=BB=E1=
=B7=A2=CB=CD=B9=CA=D5=CF=A3=AC=D2=B2=BF=C9=D2=D4=CA=B9=D3=C3api=CA=
=B9ElasticSearch=D6=D8=D0=C2=BD=F8=D0=D0=D6=F7=BD=DA=B5=E3=D1=A1=BE=
=D9=A3=AC=D4=CB=D0=D0=B9=FD=B3=CC=D6=D0=B5=C4=D6=D8=D0=C2=D1=A1=BE=
=D9=CA=C7=CD=A8=B9=FD=B5=F7=D3=C3<code style=3D"font-size: 0.75re=
m; color: rgb(199, 37, 78); background-color: rgb(242, 242, 242);=
">ZenDiscovery.rejoin</code>=CA=B5=CF=D6=B5=C4=A3=BA</p><div clas=
s=3D"_2Uzcx_"><pre class=3D"line-numbers  language-java" style=3D=
"font-size: 0.75rem; color: rgb(204, 204, 204); background: rgb(4=
5, 45, 45);"><code class=3D"java  language-java" style=3D"font-si=
ze: 1rem; background: none transparent;"><span class=3D"token key=
word" style=3D"color:rgb(204, 153, 205);">protected</span> <span=20=
class=3D"token keyword" style=3D"color:rgb(204, 153, 205);">void<=
/span> <span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">rejoin</span><span class=3D"token punctuation">(</span><s=
pan class=3D"token class-name" style=3D"color:rgb(248, 197, 85);"=
>String</span> reason<span class=3D"token punctuation">)</span> <=
span class=3D"token punctuation">{</span>=0A    <span class=3D"to=
ken keyword" style=3D"color:rgb(204, 153, 205);">assert</span> <s=
pan class=3D"token class-name" style=3D"color:rgb(248, 197, 85);"=
>Thread</span><span class=3D"token punctuation">.</span><span cla=
ss=3D"token function" style=3D"color:rgb(240, 141, 73);">holdsLoc=
k</span><span class=3D"token punctuation">(</span>stateMutex<span=
 class=3D"token punctuation">)</span><span class=3D"token punctua=
tion">;</span>=0A    <span class=3D"token class-name" style=3D"co=
lor:rgb(248, 197, 85);">ClusterState</span> clusterState <span cl=
ass=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D</s=
pan> committedState<span class=3D"token punctuation">.</span><spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">get=
</span><span class=3D"token punctuation">(</span><span class=3D"t=
oken punctuation">)</span><span class=3D"token punctuation">;</sp=
an>=0A=0A    logger<span class=3D"token punctuation">.</span><spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">war=
n</span><span class=3D"token punctuation">(</span><span class=3D"=
token string" style=3D"color:rgb(126, 198, 153);">"{}, current no=
des: {}"</span><span class=3D"token punctuation">,</span> reason<=
span class=3D"token punctuation">,</span> clusterState<span class=
=3D"token punctuation">.</span><span class=3D"token function" sty=
le=3D"color:rgb(240, 141, 73);">nodes</span><span class=3D"token=20=
punctuation">(</span><span class=3D"token punctuation">)</span><s=
pan class=3D"token punctuation">)</span><span class=3D"token punc=
tuation">;</span>=0A    <span class=3D"token comment" style=3D"co=
lor:rgb(153, 153, 153);">//=CD=A3=D6=B9=B8=BA=D4=F0=BB=A5ping=B5=C4=
=B7=FE=CE=F1</span>=0A    nodesFD<span class=3D"token punctuation=
">.</span><span class=3D"token function" style=3D"color:rgb(240,=20=
141, 73);">stop</span><span class=3D"token punctuation">(</span><=
span class=3D"token punctuation">)</span><span class=3D"token pun=
ctuation">;</span>=0A    masterFD<span class=3D"token punctuation=
">.</span><span class=3D"token function" style=3D"color:rgb(240,=20=
141, 73);">stop</span><span class=3D"token punctuation">(</span>r=
eason<span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">;</span>=0A=0A    <span class=3D"token comment" s=
tyle=3D"color:rgb(153, 153, 153);">// TODO: do we want to force a=
 new thread if we actively removed the master? this is to give a=20=
full pinging cycle</span>=0A    <span class=3D"token comment" sty=
le=3D"color:rgb(153, 153, 153);">// before a decision is made.</s=
pan>=0A    <span class=3D"token comment" style=3D"color:rgb(153,=20=
153, 153);">//=BF=AA=CA=BC=D2=BB=C2=D6=D0=C2=B5=C4=D1=A1=BE=D9</s=
pan>=0A    joinThreadControl<span class=3D"token punctuation">.</=
span><span class=3D"token function" style=3D"color:rgb(240, 141,=20=
73);">startNewThreadIfNotRunning</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">)</span><span c=
lass=3D"token punctuation">;</span>=0A=0A    <span class=3D"token=
 keyword" style=3D"color:rgb(204, 153, 205);">if</span> <span cla=
ss=3D"token punctuation">(</span>clusterState<span class=3D"token=
 punctuation">.</span><span class=3D"token function" style=3D"col=
or:rgb(240, 141, 73);">nodes</span><span class=3D"token punctuati=
on">(</span><span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">.</span><span class=3D"token function" sty=
le=3D"color:rgb(240, 141, 73);">getMasterNodeId</span><span class=
=3D"token punctuation">(</span><span class=3D"token punctuation">=
)</span> <span class=3D"token operator" style=3D"color:rgb(103, 2=
05, 204);">!=3D</span> <span class=3D"token keyword" style=3D"col=
or:rgb(204, 153, 205);">null</span><span class=3D"token punctuati=
on">)</span> <span class=3D"token punctuation">{</span>=0A      =20=
 <span class=3D"token comment" style=3D"color:rgb(153, 153, 153);=
">// remove block if it already exists before adding new one</spa=
n>=0A        <span class=3D"token keyword" style=3D"color:rgb(204=
, 153, 205);">assert</span> clusterState<span class=3D"token punc=
tuation">.</span><span class=3D"token function" style=3D"color:rg=
b(240, 141, 73);">blocks</span><span class=3D"token punctuation">=
(</span><span class=3D"token punctuation">)</span><span class=3D"=
token punctuation">.</span><span class=3D"token function" style=3D=
"color:rgb(240, 141, 73);">hasGlobalBlock</span><span class=3D"to=
ken punctuation">(</span>discoverySettings<span class=3D"token pu=
nctuation">.</span><span class=3D"token function" style=3D"color:=
rgb(240, 141, 73);">getNoMasterBlock</span><span class=3D"token p=
unctuation">(</span><span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">.</span><span class=3D"token funct=
ion" style=3D"color:rgb(240, 141, 73);">id</span><span class=3D"t=
oken punctuation">(</span><span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">)</span> <span class=3D"toke=
n operator" style=3D"color:rgb(103, 205, 204);">=3D=3D</span> <sp=
an class=3D"token boolean" style=3D"color:rgb(240, 141, 73);">fal=
se</span> <span class=3D"token operator" style=3D"color:rgb(103,=20=
205, 204);">:</span>=0A            <span class=3D"token string" s=
tyle=3D"color:rgb(126, 198, 153);">"NO_MASTER_BLOCK should only b=
e added by ZenDiscovery"</span><span class=3D"token punctuation">=
;</span>=0A        <span class=3D"token class-name" style=3D"colo=
r:rgb(248, 197, 85);">ClusterBlocks</span> clusterBlocks <span cl=
ass=3D"token operator" style=3D"color:rgb(103, 205, 204);">=3D</s=
pan> <span class=3D"token class-name" style=3D"color:rgb(248, 197=
, 85);">ClusterBlocks</span><span class=3D"token punctuation">.</=
span><span class=3D"token function" style=3D"color:rgb(240, 141,=20=
73);">builder</span><span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span><span class=3D"token punct=
uation">.</span><span class=3D"token function" style=3D"color:rgb=
(240, 141, 73);">blocks</span><span class=3D"token punctuation">(=
</span>clusterState<span class=3D"token punctuation">.</span><spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">blo=
cks</span><span class=3D"token punctuation">(</span><span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">)</=
span>=0A            <span class=3D"token punctuation">.</span><sp=
an class=3D"token function" style=3D"color:rgb(240, 141, 73);">ad=
dGlobalBlock</span><span class=3D"token punctuation">(</span>disc=
overySettings<span class=3D"token punctuation">.</span><span clas=
s=3D"token function" style=3D"color:rgb(240, 141, 73);">getNoMast=
erBlock</span><span class=3D"token punctuation">(</span><span cla=
ss=3D"token punctuation">)</span><span class=3D"token punctuation=
">)</span>=0A            <span class=3D"token punctuation">.</spa=
n><span class=3D"token function" style=3D"color:rgb(240, 141, 73)=
;">build</span><span class=3D"token punctuation">(</span><span cl=
ass=3D"token punctuation">)</span><span class=3D"token punctuatio=
n">;</span>=0A=0A        <span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">DiscoveryNodes</span> discoveryNodes <=
span class=3D"token operator" style=3D"color:rgb(103, 205, 204);"=
>=3D</span> <span class=3D"token keyword" style=3D"color:rgb(204,=
 153, 205);">new</span> <span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">DiscoveryNodes</span><span class=3D"to=
ken punctuation">.</span><span class=3D"token class-name" style=3D=
"color:rgb(248, 197, 85);">Builder</span><span class=3D"token pun=
ctuation">(</span>clusterState<span class=3D"token punctuation">.=
</span><span class=3D"token function" style=3D"color:rgb(240, 141=
, 73);">nodes</span><span class=3D"token punctuation">(</span><sp=
an class=3D"token punctuation">)</span><span class=3D"token punct=
uation">)</span><span class=3D"token punctuation">.</span><span c=
lass=3D"token function" style=3D"color:rgb(240, 141, 73);">master=
NodeId</span><span class=3D"token punctuation">(</span><span clas=
s=3D"token keyword" style=3D"color:rgb(204, 153, 205);">null</spa=
n><span class=3D"token punctuation">)</span><span class=3D"token=20=
punctuation">.</span><span class=3D"token function" style=3D"colo=
r:rgb(240, 141, 73);">build</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span>=0A        clusterState <span class=3D=
"token operator" style=3D"color:rgb(103, 205, 204);">=3D</span> <=
span class=3D"token class-name" style=3D"color:rgb(248, 197, 85);=
">ClusterState</span><span class=3D"token punctuation">.</span><s=
pan class=3D"token function" style=3D"color:rgb(240, 141, 73);">b=
uilder</span><span class=3D"token punctuation">(</span>clusterSta=
te<span class=3D"token punctuation">)</span>=0A            <span=20=
class=3D"token punctuation">.</span><span class=3D"token function=
" style=3D"color:rgb(240, 141, 73);">blocks</span><span class=3D"=
token punctuation">(</span>clusterBlocks<span class=3D"token punc=
tuation">)</span>=0A            <span class=3D"token punctuation"=
>.</span><span class=3D"token function" style=3D"color:rgb(240, 1=
41, 73);">nodes</span><span class=3D"token punctuation">(</span>d=
iscoveryNodes<span class=3D"token punctuation">)</span>=0A      =20=
     <span class=3D"token punctuation">.</span><span class=3D"tok=
en function" style=3D"color:rgb(240, 141, 73);">build</span><span=
 class=3D"token punctuation">(</span><span class=3D"token punctua=
tion">)</span><span class=3D"token punctuation">;</span>=0A=0A  =20=
     committedState<span class=3D"token punctuation">.</span><spa=
n class=3D"token function" style=3D"color:rgb(240, 141, 73);">set=
</span><span class=3D"token punctuation">(</span>clusterState<spa=
n class=3D"token punctuation">)</span><span class=3D"token punctu=
ation">;</span>=0A        clusterApplier<span class=3D"token punc=
tuation">.</span><span class=3D"token function" style=3D"color:rg=
b(240, 141, 73);">onNewClusterState</span><span class=3D"token pu=
nctuation">(</span>reason<span class=3D"token punctuation">,</spa=
n> <span class=3D"token keyword" style=3D"color:rgb(204, 153, 205=
);">this</span><span class=3D"token operator" style=3D"color:rgb(=
103, 205, 204);">:</span><span class=3D"token operator" style=3D"=
color:rgb(103, 205, 204);">:</span><span class=3D"token function"=
 style=3D"color:rgb(240, 141, 73);">clusterState</span><span clas=
s=3D"token punctuation">,</span> <span class=3D"token punctuation=
">(</span>source<span class=3D"token punctuation">,</span> e<span=
 class=3D"token punctuation">)</span> <span class=3D"token operat=
or" style=3D"color:rgb(103, 205, 204);">-&gt;</span> <span class=3D=
"token punctuation">{</span><span class=3D"token punctuation">}</=
span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">;</span> <span class=3D"token comment" style=3D"c=
olor:rgb(153, 153, 153);">// don't wait for state to be applied</=
span>=0A    <span class=3D"token punctuation">}</span>=0A<span cl=
ass=3D"token punctuation">}</span>=0A</code></pre></div><p>=CD=A8=
=B9=FDrejoin=B5=F7=D3=C3=B9=EC=BC=A3=BF=C9=D2=D4=B4=F3=B8=C5=D6=AA=
=B5=C0=BA=CE=CA=B1=BB=E1=B4=A5=B7=A2rejoin=BD=F8=D0=D0=D0=C2=D2=BB=
=C2=D6=B5=C4=D1=A1=BE=D9=A3=BA</p><br><div class=3D"image-contain=
er-fill" style=3D"font-size:0rem"></div><div class=3D"image-view"=
 data-width=3D"927" data-height=3D"168" style=3D"font-size:0rem">=
<img data-original-src=3D"//upload-images.jianshu.io/upload_image=
s/10036680-33a3166c0fe1c9db.png" data-original-width=3D"927" data=
-original-height=3D"168" data-original-format=3D"image/png" data-=
original-filesize=3D"16051" data-image-index=3D"0" src=3D"0.18698=
91770908121.png"></div><div class=3D"image-caption" style=3D"font=
-size:0.813rem;color:rgb(153, 153, 153)">rejoin=B5=F7=D3=C3=B9=EC=
=BC=A3.png</div><p>=CD=A8=B9=FD=C9=CF=CD=BC=BF=C9=D2=D4=BF=B4=B3=F6=
=CA=D5=B5=BD=D6=F7=B6=AFrejoin=C7=EB=C7=F3=A1=A2=D6=F7=BD=DA=B5=E3=
=CA=A7=C1=AA=A3=A8=B9=CA=D5=CF=A3=A9=A1=A2=D7=EE=D0=A1=D6=F7=BD=DA=
=B5=E3=CA=FD=B7=A2=C9=FA=B1=E4=BB=AF=A1=A2=BC=AF=C8=BA=D7=B4=CC=AC=
Publish=D2=EC=B3=A3=B5=C8=B6=BC=BB=E1=B4=A5=B7=A2rejoin=A1=A3</p>=
<h1 style=3D"font-size: 1.625rem;">5 =D7=D4=B6=AFCluster=B7=A2=CF=
=D6</h1></article><p style=3D"color:rgb(64, 64, 64)">=C6=E4=CA=B5=
=BE=CD=CA=C7=C9=CF=CA=F6join=B5=C4=B9=FD=B3=CC=A1=A3</p></body></=
html>=0A=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000478828.086--

------=_Next_Part_0001436484.998
Content-Type: image/png;
	name="0.060541115717954064.png"
Content-Transfer-Encoding: base64
Content-ID: <0.060541115717954064.png>
Content-Location: 0.060541115717954064.png



------=_Next_Part_0001436484.998
Content-Type: image/png;
	name="0.1869891770908121.png"
Content-Transfer-Encoding: base64
Content-ID: <0.1869891770908121.png>
Content-Location: 0.1869891770908121.png



------=_Next_Part_0001436484.998--

