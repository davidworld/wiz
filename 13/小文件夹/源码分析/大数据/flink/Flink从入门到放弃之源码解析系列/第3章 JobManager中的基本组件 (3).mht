From: WizMime<support@wiz.cn>
Subject: =?gb2312?B?tdoz1cIgSm9iTWFuYWdlctbQtcS7+bG+1+m8/iAoMyk=?=
Date: Date: Fri, 23 Jul 2021 05:55:33 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="multipart/alternative";
	boundary="----=_Next_Part_0001440984.988"

This is a multi-part message in MIME format.

------=_Next_Part_0001440984.988
Content-Type: multipart/alternative;
	boundary="----=_Next_Part_0000480328.441"


------=_Next_Part_0000480328.441
Content-Type: text/plain;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

This is a multi-part message in MIME format.

------=_Next_Part_0000480328.441
Content-Type: text/html;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML><html><head>=0D=0A<meta http-equiv=3D"Content-Type=
" content=3D"text/html; charset=3Dgb2312">=0A=0A=0A=0A=0A=0A<titl=
e>=B5=DA3=D5=C2 JobManager=D6=D0=B5=C4=BB=F9=B1=BE=D7=E9=BC=FE (3=
)</title>=0A    =0A<style id=3D"wiz_custom_css">html, .wiz-editor=
-body {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica,=
 'Hiragino Sans GB', '=E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91', 'Mic=
rosoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height:=20=
1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}.wiz=
-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-edit=
or-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0=
 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wi=
z-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-b=
ody h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {fon=
t-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14p=
t;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-siz=
e:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color:=
 #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,=
.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-=
editor-body li {margin:8px 0;}.wiz-editor-body blockquote,.wiz-ed=
itor-body table,.wiz-editor-body pre,.wiz-editor-body code {margi=
n:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-=
body ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;=
}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:decima=
l;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lowe=
r-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-typ=
e:lower-roman;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz=
-editor-body blockquote > :first-child {margin-top:0;}.wiz-editor=
-body blockquote > :last-child {margin-bottom:0;}.wiz-editor-body=
 img {border:0;max-width:100%;height:auto !important;margin:2px 0=
;}.wiz-editor-body table {border-collapse:collapse;border:1px sol=
id #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {padding:4px=20=
8px;border-collapse:collapse;border:1px solid #bbbbbb;min-height:=
28px;word-break:break-word;box-sizing: border-box;}.wiz-hide {dis=
play:none !important;}</style></head>=0A=0A<body class=3D"wiz-edi=
tor-body"  spellcheck=3D"false"><div></div><h2 class=3D"rich_medi=
a_title" id=3D"activity-name" style=3D"font-size: 1.375rem; color=
: rgb(51, 51, 51);">=B5=DA3=D5=C2 JobManager=D6=D0=B5=C4=BB=F9=B1=
=BE=D7=E9=BC=FE(3)</h2><div id=3D"meta_content" class=3D"rich_med=
ia_meta_list" style=3D"font-size: 0rem; color: rgb(51, 51, 51);">=
<span id=3D"copyright_logo" class=3D"rich_media_meta icon_appmsg_=
tag appmsg_title_tag" style=3D"font-size: 0.75rem; color: rgba(0,=
 0, 0, 0.298039); background: rgb(242, 242, 242);">=D4=AD=B4=B4</=
span><span>&nbsp;</span><span class=3D"rich_media_meta rich_media=
_meta_text" style=3D"font-size:0.938rem;color:rgba(0, 0, 0, 0.3);=
">=B4=F3=CA=FD=BE=DD=BC=BC=CA=F5=D3=EB=BC=DC=B9=B9</span><span>&n=
bsp;</span><span class=3D"rich_media_meta rich_media_meta_nicknam=
e" id=3D"profileBt" style=3D"font-size:0.938rem;"><a href=3D"" id=
=3D"js_name" style=3D"color:rgb(87, 107, 149);text-decoration:non=
e;">=B4=F3=CA=FD=BE=DD=BC=BC=CA=F5=D3=EB=BC=DC=B9=B9</a></span><s=
pan>&nbsp;</span><em id=3D"publish_time" class=3D"rich_media_meta=
 rich_media_meta_text" style=3D"font-size:0.938rem;color:rgba(0,=20=
0, 0, 0.3);">2019-02-09</em></div><p style=3D"color:rgb(51, 51, 5=
1);font-size:1.063rem;text-align:justify"><span style=3D"font-siz=
e: 1rem; color: rgb(36, 41, 46);">flink =D7=F6 checkpoint=B4=E6=B4=
=A2=B5=C4=D7=E9=BC=FE=A3=AC=B8=BA=D4=F0=B4=E6=B4=A2=D2=D1=CD=EA=B3=
=C9=B5=C4 Checkpoint =A3=AC=CA=B5=CF=D6=C1=CB=BD=D3=BF=DA Complet=
edCheckpointStore=A3=ACStandaloneCompletedCheckpointStore =BA=CD=20=
ZooKeeperCompletedCheckpointStore =B6=BC=CA=B5=CF=D6=C1=CB Comple=
tedCheckpointStore =BD=D3=BF=DA=A3=AC=C7=B0=D5=DF=D6=BB=D4=DA=C4=DA=
=B4=E6=C0=EF=B4=E6=B4=A2 checkpoint=A3=AC=D5=E2=C0=EF=D6=BB=BD=E9=
=C9=DC ZooKeeperCompletedCheckpointStore =B5=C4=CA=B5=CF=D6=A1=A3=
</span></p><p style=3D"color:rgb(51, 51, 51);font-size:1.063rem;t=
ext-align:justify"><span style=3D"color: rgb(36, 41, 46);">ZooKee=
perCompletedCheckpointStore =B4=E6=B4=A2 checkpoint =B5=C4=BB=F9=B1=
=BE=CB=BC=C2=B7=A3=BA</span></p><div class=3D"rich_media_content"=
 id=3D"js_content" style=3D"color: rgb(51, 51, 51); font-size: 1.=
063rem; text-align: justify;"><ul class=3D"list-paddingleft-2"><l=
i><p><span style=3D"color: rgb(36, 41, 46);">=CF=C8=D4=DA=B1=BE=B5=
=D8=B4=C5=C5=CC=B3=D6=BE=C3=BB=AF=D6=B8=B6=A8=CA=FD=C1=BF=B5=C4 c=
heckpoint</span></p></li><li><p><span style=3D"color: rgb(36, 41,=
 46);">=BD=AB=CE=C4=BC=FE=BE=E4=B1=FA=B8=FC=D0=C2=B5=BD ZK =B5=C4=
=CC=D8=B6=A8=BD=DA=B5=E3=CF=C2</span></p></li><li><p><span style=3D=
"color: rgb(36, 41, 46);">=BB=AC=B6=AF=B8=FC=D0=C2 zk =B5=C4=BD=DA=
=B5=E3=B4=E6=B4=A2</span></p></li><li><p><span style=3D"color: rg=
b(36, 41, 46);">=D4=DA=BB=D6=B8=B4=B5=C4=CA=B1=BA=F2=D6=BB=C8=A1=D7=
=EE=BD=FC=D2=BB=B4=CE=B5=C4=B8=FC=D0=C2=D6=B5</span></p></li></ul=
><p><span style=3D"color: rgb(36, 41, 46);">=CF=C8=C0=B4=BF=B4=CF=
=C2 ZooKeeperCompletedCheckpointStore =D3=C3=C0=B4=BA=CD ZK =B4=E6=
=B4=A2=BD=BB=BB=A5=B5=C4=D7=E9=BC=FE=A3=BAZooKeeperStateHandleSto=
re=A3=AC=C0=B4=BF=B4=CB=FC=B5=C4=BA=CB=D0=C4=CC=ED=BC=D3 state =B5=
=C4=B7=BD=B7=A8=A3=BA</span></p><blockquote style=3D"color:rgba(0=
, 0, 0, 0.5);font-size:0.938rem;"><p><span style=3D"font-size: 0.=
85rem; color: rgb(106, 115, 125);">//</span><span style=3D"font-s=
ize: 0.85rem; color: rgb(106, 115, 125);">ZooKeeperStateHandleSto=
re line129</span></p><p><span style=3D"font-size:0.75rem;color:rg=
b(0, 0, 128);font-family:Menlo;">public</span><span>&nbsp;</span>=
<span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:M=
enlo;">RetrievableStateHandle&lt;</span><span style=3D"font-size:=
0.75rem;color:rgb(32, 153, 157);font-family:Menlo;">T</span><span=
 style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;=
">&gt; addAndLock(</span></p><p><span style=3D"font-size:0.75rem;=
color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp; String pathInZooKeeper,</span></p><p><span style=3D"font-siz=
e:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:=
0.75rem;color:rgb(32, 153, 157);font-family:Menlo;">T</span><span=
>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0)=
;font-family:Menlo;">state)</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">throw=
s</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color=
:rgb(0, 0, 0);font-family:Menlo;">Exception {</span></p><p><span=20=
style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;"=
>&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:0=
.75rem;color:rgb(0, 0, 0);font-family:Menlo;font-style:italic;">c=
heckNotNull</span><span style=3D"font-size:0.75rem;color:rgb(0, 0=
, 0);font-family:Menlo;">(pathInZooKeeper,</span><span>&nbsp;</sp=
an><span style=3D"font-size:0.75rem;color:rgb(0, 128, 0);font-fam=
ily:Menlo;">"Path in ZooKeeper"</span><span style=3D"font-size:0.=
75rem;color:rgb(0, 0, 0);font-family:Menlo;">);</span></p><p><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size=
:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;font-style:italic;"=
>checkNotNull</span><span style=3D"font-size:0.75rem;color:rgb(0,=
 0, 0);font-family:Menlo;">(state,</span><span>&nbsp;</span><span=
 style=3D"font-size:0.75rem;color:rgb(0, 128, 0);font-family:Menl=
o;">"State"</span><span style=3D"font-size:0.75rem;color:rgb(0, 0=
, 0);font-family:Menlo;">);</span></p><p><span style=3D"font-size=
:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</spa=
n><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0=
, 0, 128);font-family:Menlo;">final</span><span>&nbsp;</span><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">String path =3D</span><span>&nbsp;</span><span style=3D"font-s=
ize:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;font-style:itali=
c;">normalizePath</span><span style=3D"font-size:0.75rem;color:rg=
b(0, 0, 0);font-family:Menlo;">(pathInZooKeeper);</span></p><p><s=
pan style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Men=
lo;">&nbsp;&nbsp; RetrievableStateHandle&lt;</span><span style=3D=
"font-size:0.75rem;color:rgb(32, 153, 157);font-family:Menlo;">T<=
/span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-fa=
mily:Menlo;">&gt; storeHandle =3D</span><span>&nbsp;</span><span=20=
style=3D"font-size:0.75rem;color:rgb(102, 14, 122);font-family:Me=
nlo;">storage</span><span style=3D"font-size:0.75rem;color:rgb(0,=
 0, 0);font-family:Menlo;">.store(state);</span></p><p><span styl=
e=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nb=
sp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:0.75r=
em;color:rgb(0, 0, 128);font-family:Menlo;">boolean</span><span>&=
nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);f=
ont-family:Menlo;">success =3D</span><span>&nbsp;</span><span sty=
le=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">=
false</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);f=
ont-family:Menlo;">;</span></p><p><span style=3D"font-size:0.75re=
m;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</span><span=
>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 12=
8);font-family:Menlo;">try</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">{</span=
></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-=
family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;<=
/span><span style=3D"font-size: 0.75rem; font-family: Menlo; font=
-style: italic;">// Serialize the state handle. This writes the s=
tate to the backend.</span></p><p><span style=3D"font-size: 0.75r=
em; font-family: Menlo; font-style: italic;">&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:0.75=
rem;color:rgb(0, 0, 128);font-family:Menlo;">byte</span><span sty=
le=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">[]=
 serializedStoreHandle =3D InstantiationUtil.</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;font-styl=
e:italic;">serializeObject</span><span style=3D"font-size:0.75rem=
;color:rgb(0, 0, 0);font-family:Menlo;">(storeHandle);</span></p>=
<p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-famil=
y:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span=
><span style=3D"font-size: 0.75rem; font-family: Menlo; font-styl=
e: italic;">// Write state handle (not the actual state) to ZooKe=
eper. This is expected to be</span></p><p><span style=3D"font-siz=
e: 0.75rem; font-family: Menlo; font-style: italic;">&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp; // smaller than the state itself. This level o=
f indirection makes sure that data in</span></p><p><span style=3D=
"font-size: 0.75rem; font-family: Menlo; font-style: italic;">&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp; // ZooKeeper is small, because ZooKee=
per is designed for data in the KB range, but</span></p><p><span=20=
style=3D"font-size: 0.75rem; font-family: Menlo; font-style: ital=
ic;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // the state can be larger.</=
span></p><p><span style=3D"font-size: 0.75rem; font-family: Menlo=
; font-style: italic;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create t=
he lock node in a transaction with the actual state node. That wa=
y we can prevent</span></p><p><span style=3D"font-size: 0.75rem;=20=
font-family: Menlo; font-style: italic;">&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp; // race conditions with a concurrent delete operation.</sp=
an></p><p><span style=3D"font-size: 0.75rem; font-family: Menlo;=20=
font-style: italic;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&=
nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(102, 14, 1=
22);font-family:Menlo;">client</span><span style=3D"font-size:0.7=
5rem;color:rgb(0, 0, 0);font-family:Menlo;">.inTransaction().crea=
te().withMode(CreateMode.</span><span style=3D"font-size:0.75rem;=
color:rgb(102, 14, 122);font-family:Menlo;font-style:italic;">PER=
SISTENT</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0)=
;font-family:Menlo;">).forPath(path, serializedStoreHandle)</span=
></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-=
family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .=
and().create().withMode(CreateMode.</span><span style=3D"font-siz=
e:0.75rem;color:rgb(102, 14, 122);font-family:Menlo;font-style:it=
alic;">EPHEMERAL</span><span style=3D"font-size:0.75rem;color:rgb=
(0, 0, 0);font-family:Menlo;">).forPath(getLockPath(path))</span>=
</p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-f=
amily:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .a=
nd().commit();</span></p><p><span style=3D"font-size:0.75rem;colo=
r:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
 success =3D</span><span>&nbsp;</span><span style=3D"font-size:0.=
75rem;color:rgb(0, 0, 128);font-family:Menlo;">true</span><span s=
tyle=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">=
;</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0=
);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>=
&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128=
);font-family:Menlo;">return</span><span>&nbsp;</span><span style=
=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">stor=
eHandle;</span></p><p><span style=3D"font-size:0.75rem;color:rgb(=
0, 0, 0);font-family:Menlo;">&nbsp;&nbsp; }</span></p><p><span st=
yle=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&=
nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:0.7=
5rem;color:rgb(0, 0, 128);font-family:Menlo;">catch</span><span>&=
nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);f=
ont-family:Menlo;">(KeeperException.NodeExistsException e) {</spa=
n></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font=
-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;=
</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128);font=
-family:Menlo;">throw new</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">Concurr=
entModificationException(</span><span style=3D"font-size:0.75rem;=
color:rgb(0, 128, 0);font-family:Menlo;">"ZooKeeper unexpectedly=20=
modified"</span><span style=3D"font-size:0.75rem;color:rgb(0, 0,=20=
0);font-family:Menlo;">, e);</span></p><p><span style=3D"font-siz=
e:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp; }</=
span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);f=
ont-family:Menlo;">&nbsp;&nbsp;</span><span>&nbsp;</span><span st=
yle=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;"=
>finally</span><span>&nbsp;</span><span style=3D"font-size:0.75re=
m;color:rgb(0, 0, 0);font-family:Menlo;">{</span></p><p><span sty=
le=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=
=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">if=
</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:=
rgb(0, 0, 0);font-family:Menlo;">(!success) {</span></p><p><span=20=
style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nb=
sp;</span><span style=3D"font-size: 0.75rem; font-family: Menlo;=20=
font-style: italic;">// Cleanup the state handle if it was not wr=
itten to ZooKeeper.</span></p><p><span style=3D"font-size: 0.75re=
m; font-family: Menlo; font-style: italic;">&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">if</s=
pan><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb=
(0, 0, 0);font-family:Menlo;">(storeHandle !=3D</span><span>&nbsp=
;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128);fon=
t-family:Menlo;">null</span><span style=3D"font-size:0.75rem;colo=
r:rgb(0, 0, 0);font-family:Menlo;">) {</span></p><p><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; store=
Handle.discardState();</span></p><p><span style=3D"font-size:0.75=
rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p><span style=3D"font-siz=
e:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp; }</span></p><p><span style=3D"font-size:0.75rem;co=
lor:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp; }</span></p><p>=
<span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:M=
enlo;">}</span></p></blockquote><p><span style=3D"color: rgb(36,=20=
41, 46);">=BC=F2=D2=AA=B8=C5=C0=A8=C6=E4=C2=DF=BC=AD=A3=BA</span>=
</p><ul class=3D"list-paddingleft-2"><li><p><span style=3D"color:=
 rgb(36, 41, 46);">=CA=B9=D3=C3 StateStorageHelper =B4=E6=B4=A2 s=
tate=A3=ACZK =C4=A3=CA=BD=CF=C2=CE=AA FileSystemStateStorageHelpe=
r=A3=AC=B7=BD=CA=BD=CE=AA=D6=B1=BD=D3=B4=E6=B4=A2=B5=BD=B1=BE=B5=D8=
=B4=C5=C5=CC</span></p></li><li><p><span style=3D"color: rgb(36,=20=
41, 46);">=BD=AB state =B5=C4=BE=E4=B1=FA=B6=D4=CF=F3 StateHandle=
 =D0=F2=C1=D0=BB=AF=B2=A2=B3=D6=BE=C3=BB=AF=B5=BD ZK =B5=C4=BD=DA=
=B5=E3</span></p></li></ul><p><span style=3D"color: rgb(36, 41, 4=
6);">=C6=E4=D4=DA zk =C9=CF=B5=C4=B4=E6=B4=A2=C2=B7=BE=B6=C8=E7=CF=
=C2=CD=BC=CB=F9=CA=BE=A3=BA</span></p><p><img data-ratio=3D"1"  d=
ata-type=3D"jpeg" data-w=3D"598" width=3D"300" src=3D"640_18.jpg"=
 data-fail=3D"0"></p><p><span style=3D"color: rgb(36, 41, 46);">=CF=
=D6=D4=DA=C0=B4=BF=B4 ZooKeeperCompletedCheckpointStore =B5=C4=BA=
=CB=D0=C4=B9=A6=C4=DC=A3=BA=CC=ED=BC=D3 checkpoint =BA=CD =B4=D3=20=
checkpoint =D7=F6 recovery</span></p><h3 style=3D"font-size:1.25r=
em;"><span style=3D"color: rgb(36, 41, 46);">=CC=ED=BC=D3 checkpo=
int</span></h3><blockquote style=3D"color:rgba(0, 0, 0, 0.5);font=
-size:0.938rem;"><p><span style=3D"font-size: 0.85rem; color: rgb=
(106, 115, 125);">//</span><span style=3D"font-size: 0.85rem; col=
or: rgb(106, 115, 125);">ZooKeeperCompletedCheckpointStore line21=
0</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 1=
28);font-family:Menlo;">public void</span><span>&nbsp;</span><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">addCheckpoint(</span><span style=3D"font-size:0.75rem;color:rg=
b(0, 0, 128);font-family:Menlo;">final</span><span>&nbsp;</span><=
span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Me=
nlo;">CompletedCheckpoint checkpoint)</span><span>&nbsp;</span><s=
pan style=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:M=
enlo;">throws</span><span>&nbsp;</span><span style=3D"font-size:0=
.75rem;color:rgb(0, 0, 0);font-family:Menlo;">Exception {</span><=
/p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-fa=
mily:Menlo;">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;font-styl=
e:italic;">checkNotNull</span><span style=3D"font-size:0.75rem;co=
lor:rgb(0, 0, 0);font-family:Menlo;">(checkpoint,</span><span>&nb=
sp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 128, 0);f=
ont-family:Menlo;">"Checkpoint"</span><span style=3D"font-size:0.=
75rem;color:rgb(0, 0, 0);font-family:Menlo;">);</span></p><p><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size=
:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">final</span><sp=
an>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0,=20=
0);font-family:Menlo;">String path =3D</span><span>&nbsp;</span><=
span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Me=
nlo;font-style:italic;">checkpointIdToPath</span><span style=3D"f=
ont-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">(checkpoi=
nt.getCheckpointID());</span></p><p><span style=3D"font-size:0.75=
rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</span><sp=
an>&nbsp;</span><span style=3D"font-size: 0.75rem; font-family: M=
enlo; font-style: italic;">// Now add the new one. If it fails, w=
e don't want to loose existing data.</span></p><p><span style=3D"=
font-size: 0.75rem; font-family: Menlo; font-style: italic;">&nbs=
p;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:0.75re=
m;color:rgb(102, 14, 122);font-family:Menlo;">checkpointsInZooKee=
per</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);fon=
t-family:Menlo;">.addAndLock(path, checkpoint);</span></p><p><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size=
:0.75rem;color:rgb(102, 14, 122);font-family:Menlo;">completedChe=
ckpoints</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0=
);font-family:Menlo;">.addLast(checkpoint);</span></p><p><span st=
yle=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&=
nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size: 0.=
75rem; font-family: Menlo; font-style: italic;">// Everything wor=
ked, let's remove a previous checkpoint if necessary.</span></p><=
p><span style=3D"font-size: 0.75rem; font-family: Menlo; font-sty=
le: italic;">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">while=
</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:=
rgb(0, 0, 0);font-family:Menlo;">(</span><span style=3D"font-size=
:0.75rem;color:rgb(102, 14, 122);font-family:Menlo;">completedChe=
ckpoints</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0=
);font-family:Menlo;">.size() &gt;</span><span>&nbsp;</span><span=
 style=3D"font-size:0.75rem;color:rgb(102, 14, 122);font-family:M=
enlo;">maxNumberOfCheckpointsToRetain</span><span style=3D"font-s=
ize:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">) {</span></p>=
<p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-famil=
y:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span=
><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-famil=
y:Menlo;">final</span><span>&nbsp;</span><span style=3D"font-size=
:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">CompletedCheckpoi=
nt completedCheckpoint =3D</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(102, 14, 122);font-family:Menlo;">co=
mpletedCheckpoints</span><span style=3D"font-size:0.75rem;color:r=
gb(0, 0, 0);font-family:Menlo;">.removeFirst();</span></p><p><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tryRemoveCompletedCheckpoint(co=
mpletedCheckpoint, CompletedCheckpoint::discardOnSubsume);</span>=
</p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-f=
amily:Menlo;">&nbsp;&nbsp; }</span></p><p><span style=3D"font-siz=
e:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</sp=
an><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(=
102, 14, 122);font-family:Menlo;font-style:italic;">LOG</span><sp=
an style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menl=
o;">.debug(</span><span style=3D"font-size:0.75rem;color:rgb(0, 1=
28, 0);font-family:Menlo;">"Added {} to {}."</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">, check=
point, path);</span></p><p><span style=3D"font-size:0.75rem;color=
:rgb(0, 0, 0);font-family:Menlo;">}</span></p></blockquote><p><sp=
an style=3D"color: rgb(36, 41, 46);">=BC=F2=D2=AA=B8=C5=C0=A8=C6=E4=
=C2=DF=BC=AD=A3=BA</span></p><ul class=3D"list-paddingleft-2"><li=
><p><span style=3D"color: rgb(36, 41, 46);">=D4=DA=B1=BE=B5=D8=B4=
=C5=C5=CC=B4=E6=B4=A2=B8=C3 checkpoint =B5=C4=C4=DA=C8=DD=B2=A2=B7=
=B5=BB=D8=BE=E4=B1=FA=B6=D4=CF=F3=A3=BA</span><span style=3D"back=
ground-color:rgb(228, 228, 255);font-size:0.75rem;color:rgb(0, 0,=
 0);font-family:Menlo;">RetrievableStateHandle</span></p></li><li=
><p><span style=3D"color: rgb(36, 41, 46);">=D2=D4 checkpoint id=20=
=D4=DA zk =C9=CF=D0=C2=BD=A8=D2=BB=B8=F6 node=A3=AC=B2=A2=B4=E6=B4=
=A2=B6=D4=D3=A6=B5=C4=D0=F2=C1=D0=BB=AF=BA=F3=B5=C4&nbsp;</span><=
span style=3D"background-color:rgb(228, 228, 255);font-size:0.75r=
em;color:rgb(0, 0, 0);font-family:Menlo;">RetrievableStateHandle<=
/span></p></li><li><p><span style=3D"color: rgb(36, 41, 46);">=BC=
=EC=B2=E9=B4=E6=B4=A2=B5=C4 checkpoint =B8=F6=CA=FD=CA=C7=B7=F1=B3=
=AC=B9=FD=CF=DE=D6=C6=A3=AC=C8=E7=B9=FB=B3=AC=B9=FD=A3=AC=C9=BE=B3=
=FD=B1=BE=B5=D8=B4=C5=C5=CC=BC=B0zk=C9=CF=D7=EE=BE=C9=B5=C4=CA=FD=
=BE=DD</span></p></li><li><p><span style=3D"color: rgb(36, 41, 46=
);">=C8=E7=B9=FB=CC=ED=BC=D3=CA=A7=B0=DC=A3=AC=D2=D1=D3=D0=B5=C4=20=
checkpoint =CA=FD=BE=DD=B2=BB=BB=E1=CA=DC=D3=B0=CF=EC=A3=AC=D5=E2=
=C0=EF flink =CF=EB=D7=EE=B4=F3=BB=AF=B1=A3=C1=F4=D7=F7=D2=B5=B5=C4=
 checkpoint</span></p><p></p></li></ul><p><span style=3D"font-siz=
e:1.25rem;color:rgb(36, 41, 46);">=B4=D3 checkpoint =D6=D0=BB=D6=B8=
=B4</span></p><blockquote style=3D"color:rgba(0, 0, 0, 0.5);font-=
size:0.938rem;"><p><span style=3D"font-size: 0.85rem; color: rgb(=
106, 115, 125);">//</span><span style=3D"font-size: 0.85rem; colo=
r: rgb(106, 115, 125);">ZooKeeperCompletedCheckpointStore line127=
</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 12=
8);font-family:Menlo;">public void</span><span>&nbsp;</span><span=
 style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;=
">recover()</span><span>&nbsp;</span><span style=3D"font-size:0.7=
5rem;color:rgb(0, 0, 128);font-family:Menlo;">throws</span><span>=
&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);=
font-family:Menlo;">Exception {</span></p><p><span style=3D"font-=
size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;<=
/span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:r=
gb(102, 14, 122);font-family:Menlo;font-style:italic;">LOG</span>=
<span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:M=
enlo;">.info(</span><span style=3D"font-size:0.75rem;color:rgb(0,=
 128, 0);font-family:Menlo;">"Recovering checkpoints from ZooKeep=
er."</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);fo=
nt-family:Menlo;">);</span></p><p><span style=3D"font-size:0.75re=
m;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</span><span=
>&nbsp;</span><span style=3D"font-size: 0.75rem; font-family: Men=
lo; font-style: italic;">// Get all there is first</span></p><p><=
span style=3D"font-size: 0.75rem; font-family: Menlo; font-style:=
 italic;">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"fo=
nt-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">List&lt;Tu=
ple2&lt;RetrievableStateHandle&lt;CompletedCheckpoint&gt;, String=
&gt;&gt; initialCheckpoints;</span></p><p><span style=3D"font-siz=
e:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</sp=
an><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(=
0, 0, 128);font-family:Menlo;">while</span><span>&nbsp;</span><sp=
an style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menl=
o;">(</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128)=
;font-family:Menlo;">true</span><span style=3D"font-size:0.75rem;=
color:rgb(0, 0, 0);font-family:Menlo;">) {</span></p><p><span sty=
le=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=
=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">tr=
y</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color=
:rgb(0, 0, 0);font-family:Menlo;">{</span></p><p><span style=3D"f=
ont-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; initialCheckpoints =3D</s=
pan><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb=
(102, 14, 122);font-family:Menlo;">checkpointsInZooKeeper</span><=
span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Me=
nlo;">.getAllAndLock();</span></p><p><span style=3D"font-size:0.7=
5rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">break=
</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-f=
amily:Menlo;">;</span></p><p><span style=3D"font-size:0.75rem;col=
or:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
; }</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0,=
 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><spa=
n>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 1=
28);font-family:Menlo;">catch</span><span>&nbsp;</span><span styl=
e=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">(Co=
ncurrentModificationException e) {</span></p><p><span style=3D"fo=
nt-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><=
span style=3D"font-size:0.75rem;color:rgb(102, 14, 122);font-fami=
ly:Menlo;font-style:italic;">LOG</span><span style=3D"font-size:0=
.75rem;color:rgb(0, 0, 0);font-family:Menlo;">.warn(</span><span=20=
style=3D"font-size:0.75rem;color:rgb(0, 128, 0);font-family:Menlo=
;">"Concurrent modification while reading from ZooKeeper. Retryin=
g."</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);fon=
t-family:Menlo;">);</span></p><p><span style=3D"font-size:0.75rem=
;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp; }</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0=
, 0, 0);font-family:Menlo;">&nbsp;&nbsp; }</span></p><p><span sty=
le=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&n=
bsp;&nbsp; Collections.</span><span style=3D"font-size:0.75rem;co=
lor:rgb(0, 0, 0);font-family:Menlo;font-style:italic;">sort</span=
><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:=
Menlo;">(initialCheckpoints,</span><span>&nbsp;</span><span style=
=3D"font-size:0.75rem;color:rgb(102, 14, 122);font-family:Menlo;f=
ont-style:italic;">STRING_COMPARATOR</span><span style=3D"font-si=
ze:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">);</span></p><p=
><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:=
Menlo;">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font=
-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">int</span>=
<span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0,=20=
0, 0);font-family:Menlo;">numberOfInitialCheckpoints =3D initialC=
heckpoints.size();</span></p><p><span style=3D"font-size:0.75rem;=
color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</span><span>&=
nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(102, 14, 1=
22);font-family:Menlo;font-style:italic;">LOG</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">.info(<=
/span><span style=3D"font-size:0.75rem;color:rgb(0, 128, 0);font-=
family:Menlo;">"Found {} checkpoints in ZooKeeper."</span><span s=
tyle=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">=
, numberOfInitialCheckpoints);</span></p><p><span style=3D"font-s=
ize: 0.75rem; font-family: Menlo; font-style: italic;">&nbsp;&nbs=
p;</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;colo=
r:rgb(0, 0, 0);font-family:Menlo;">List&lt;CompletedCheckpoint&gt=
; lastTryRetrievedCheckpoints =3D</span><span>&nbsp;</span><span=20=
style=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo=
;">new</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;=
color:rgb(0, 0, 0);font-family:Menlo;">ArrayList&lt;&gt;(numberOf=
InitialCheckpoints);</span></p><p><span style=3D"font-size:0.75re=
m;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp; List&lt;Com=
pletedCheckpoint&gt; retrievedCheckpoints =3D</span><span>&nbsp;<=
/span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-=
family:Menlo;">new</span><span>&nbsp;</span><span style=3D"font-s=
ize:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">ArrayList&lt;&=
gt;(numberOfInitialCheckpoints);</span></p><p><span style=3D"font=
-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;=
</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:=
rgb(0, 0, 128);font-family:Menlo;">do</span><span>&nbsp;</span><s=
pan style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Men=
lo;">{</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0,=
 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><=
span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(102,=
 14, 122);font-family:Menlo;font-style:italic;">LOG</span><span s=
tyle=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">=
.info(</span><span style=3D"font-size:0.75rem;color:rgb(0, 128, 0=
);font-family:Menlo;">"Trying to fetch {} checkpoints from storag=
e."</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);fon=
t-family:Menlo;">, numberOfInitialCheckpoints);</span></p><p><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lastTryRetrievedCheckpoints.cle=
ar();</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0,=20=
0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lastTryR=
etrievedCheckpoints.addAll(retrievedCheckpoints);</span></p><p><s=
pan style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Men=
lo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; retrievedCheckpoints.clear();=
</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0)=
;font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&=
nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128)=
;font-family:Menlo;">for</span><span>&nbsp;</span><span style=3D"=
font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">(Tuple2&=
lt;RetrievableStateHandle&lt;CompletedCheckpoint&gt;, String&gt;=20=
checkpointStateHandle : initialCheckpoints) {</span></p><p><span=20=
style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;"=
>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CompletedCheckp=
oint completedCheckpoint =3D</span><span>&nbsp;</span><span style=
=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">nu=
ll</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font=
-family:Menlo;">;</span></p><p><span style=3D"font-size:0.75rem;c=
olor:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"fon=
t-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">try</span=
><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0,=
 0, 0);font-family:Menlo;">{</span></p><p><span style=3D"font-siz=
e:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; completedCheck=
point =3D</span><span>&nbsp;</span><span style=3D"font-size:0.75r=
em;color:rgb(0, 0, 0);font-family:Menlo;font-style:italic;">retri=
eveCompletedCheckpoint</span><span style=3D"font-size:0.75rem;col=
or:rgb(0, 0, 0);font-family:Menlo;">(checkpointStateHandle);</spa=
n></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font=
-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-si=
ze:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">if</span><spa=
n>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0=
);font-family:Menlo;">(completedCheckpoint !=3D</span><span>&nbsp=
;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 128);fon=
t-family:Menlo;">null</span><span style=3D"font-size:0.75rem;colo=
r:rgb(0, 0, 0);font-family:Menlo;">) {</span></p><p><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp; retrievedCheckpoints.add(completedCheckpoint);</span=
></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-=
family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp; }</span></p><p><span style=3D"font-size:0.75rem;=
color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp; }</span><span>&nbsp;</span><span style=3D"=
font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">catch<=
/span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:r=
gb(0, 0, 0);font-family:Menlo;">(Exception e) {</span></p><p><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;co=
lor:rgb(102, 14, 122);font-family:Menlo;font-style:italic;">LOG</=
span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-fam=
ily:Menlo;">.warn(</span><span style=3D"font-size:0.75rem;color:r=
gb(0, 128, 0);font-family:Menlo;">"Could not retrieve checkpoint,=
 not adding to list of recovered checkpoints."</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">, e);</=
span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);f=
ont-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p; }</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0=
, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><=
/p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-fa=
mily:Menlo;">&nbsp;&nbsp; }</span><span>&nbsp;</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">while=
</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:=
rgb(0, 0, 0);font-family:Menlo;">(retrievedCheckpoints.size() !=3D=
 numberOfInitialCheckpoints &amp;&amp;</span></p><p><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp; !CompletedCheckpoint.</span><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;font-styl=
e:italic;">checkpointsMatch</span><span style=3D"font-size:0.75re=
m;color:rgb(0, 0, 0);font-family:Menlo;">(lastTryRetrievedCheckpo=
ints, retrievedCheckpoints));</span></p><p><span style=3D"font-si=
ze:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</s=
pan><span>&nbsp;</span><span style=3D"font-size: 0.75rem; font-fa=
mily: Menlo; font-style: italic;">// Clear local handles in order=
 to prevent duplicates on</span></p><p><span style=3D"font-size:=20=
0.75rem; font-family: Menlo; font-style: italic;">&nbsp;&nbsp; //=
 recovery. The local handles should reflect the state</span></p><=
p><span style=3D"font-size: 0.75rem; font-family: Menlo; font-sty=
le: italic;">&nbsp;&nbsp; // of ZooKeeper.</span></p><p><span sty=
le=3D"font-size: 0.75rem; font-family: Menlo; font-style: italic;=
">&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:=
0.75rem;color:rgb(102, 14, 122);font-family:Menlo;">completedChec=
kpoints</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0)=
;font-family:Menlo;">.clear();</span></p><p><span style=3D"font-s=
ize:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;</=
span><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rg=
b(102, 14, 122);font-family:Menlo;">completedCheckpoints</span><s=
pan style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Men=
lo;">.addAll(retrievedCheckpoints);</span></p><p><span style=3D"f=
ont-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&nb=
sp;</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;col=
or:rgb(0, 0, 128);font-family:Menlo;">if</span><span>&nbsp;</span=
><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:=
Menlo;">(</span><span style=3D"font-size:0.75rem;color:rgb(102, 1=
4, 122);font-family:Menlo;">completedCheckpoints</span><span styl=
e=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">.is=
Empty() &amp;&amp; numberOfInitialCheckpoints &gt;</span><span>&n=
bsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 255);=
font-family:Menlo;">0</span><span style=3D"font-size:0.75rem;colo=
r:rgb(0, 0, 0);font-family:Menlo;">) {</span></p><p><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"f=
ont-size:0.75rem;color:rgb(0, 0, 128);font-family:Menlo;">throw n=
ew</span><span>&nbsp;</span><span style=3D"font-size:0.75rem;colo=
r:rgb(0, 0, 0);font-family:Menlo;">FlinkException(</span></p><p><=
span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Me=
nlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><spa=
n>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 128,=
 0);font-family:Menlo;">"Could not read any of the "</span><span>=
&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);=
font-family:Menlo;">+ numberOfInitialCheckpoints +</span><span>&n=
bsp;</span><span style=3D"font-size:0.75rem;color:rgb(0, 128, 0);=
font-family:Menlo;">" checkpoints from storage."</span><span styl=
e=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">);<=
/span></p><p><span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);=
font-family:Menlo;">&nbsp;&nbsp; }</span><span>&nbsp;</span><span=
 style=3D"font-size:0.75rem;color:rgb(0, 0, 128);font-family:Menl=
o;">else if</span><span>&nbsp;</span><span style=3D"font-size:0.7=
5rem;color:rgb(0, 0, 0);font-family:Menlo;">(</span><span style=3D=
"font-size:0.75rem;color:rgb(102, 14, 122);font-family:Menlo;">co=
mpletedCheckpoints</span><span style=3D"font-size:0.75rem;color:r=
gb(0, 0, 0);font-family:Menlo;">.size() !=3D numberOfInitialCheck=
points) {</span></p><p><span style=3D"font-size:0.75rem;color:rgb=
(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</spa=
n><span>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(1=
02, 14, 122);font-family:Menlo;font-style:italic;">LOG</span><spa=
n style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo=
;">.warn(</span></p><p><span style=3D"font-size:0.75rem;color:rgb=
(0, 0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;</span><span>&nbsp;</span><span style=3D"font-size:0=
.75rem;color:rgb(0, 128, 0);font-family:Menlo;">"Could only fetch=
 {} of {} checkpoints from storage."</span><span style=3D"font-si=
ze:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">,</span></p><p>=
<span style=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:M=
enlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><sp=
an>&nbsp;</span><span style=3D"font-size:0.75rem;color:rgb(102, 1=
4, 122);font-family:Menlo;">completedCheckpoints</span><span styl=
e=3D"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">.si=
ze(),</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0,=20=
0, 0);font-family:Menlo;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp; numberOfInitialCheckpoints);</span></p><p><span style=3D=
"font-size:0.75rem;color:rgb(0, 0, 0);font-family:Menlo;">&nbsp;&=
nbsp; }</span></p><p><span style=3D"font-size:0.75rem;color:rgb(0=
, 0, 0);font-family:Menlo;">}</span></p></blockquote><p><span sty=
le=3D"color: rgb(36, 41, 46);">=BC=F2=D2=AA=B8=C5=C0=A8=C6=E4=C2=DF=
=BC=AD=A3=BA</span></p><ul class=3D"list-paddingleft-2"><li><p><s=
pan style=3D"color: rgb(36, 41, 46);">=C7=E5=B3=FD=C4=DA=B4=E6=D6=
=D0=CE=AC=BB=A4=B5=C4=BE=E4=B1=FA=B6=D4=CF=F3</span><span style=3D=
"background-color:rgb(228, 228, 255);font-size:0.75rem;color:rgb(=
0, 0, 0);font-family:Menlo;">RetrievableStateHandle</span></p></l=
i><li><p><span style=3D"color: rgb(36, 41, 46);">=B4=D3 ZK =C9=CF=
=C0=AD=C8=A1=D7=F7=D2=B5=B6=D4=D3=A6=B5=C4=CB=F9=D3=D0=B5=C4 chec=
kpoint StateHandle =BD=DA=B5=E3=A3=AC=B2=A2=C5=C5=D0=F2=A1=BE=B4=D3=
=D0=A1=B5=BD=B4=F3=A1=BF</span></p></li><li><p><span style=3D"col=
or: rgb(36, 41, 46);">=BB=F1=C8=A1=D7=EE=D0=C2=B5=C4=D2=BB=B4=CE=BF=
=EC=D5=D5=B2=A2=B4=D3=B1=BE=B5=D8=B4=C5=C5=CC=BB=D6=B8=B4 checkpo=
int</span></p></li><li><p><span style=3D"color: rgb(36, 41, 46);"=
>=C9=BE=B3=FD=C6=E4=D3=E0=CB=F9=D3=D0=B5=C4 checkpoint =D0=C5=CF=A2=
=A1=BEZK =BA=CD=B1=BE=B5=D8=B4=C5=C5=CC=A1=BF</span></p></li></ul=
><p><span style=3D"color: rgb(36, 41, 46);">ZooKeeperCompletedChe=
ckpointStore =D3=C9 ZooKeeperCheckpointRecoveryFactory =B8=BA=D4=F0=
=CA=B5=C0=FD=BB=AF=A3=AC=D2=BB=B8=F6 Job =BB=E1=CA=B5=C0=FD=BB=AF=
=D2=BB=B8=F6 ZooKeeperCompletedCheckpointStore =B8=BA=D4=F0=BF=EC=
=D5=D5=A1=A3=D5=E2=C0=EF=B4=E6=B4=A2=B5=C4=D6=BB=CA=C7=B8=F6=BD=DA=
=B5=E3=BF=EC=D5=D5=B5=C4=BE=E4=B1=FA=A3=AC=B2=A2=B2=BB=CA=C7=D5=E6=
=D5=FD=B5=C4=D7=B4=CC=AC=CA=FD=BE=DD=A1=A3</span></p><p><span sty=
le=3D"color: rgb(36, 41, 46);">=B5=BD=D5=E2=C0=EF JobManager =B5=C4=
=BA=CB=D0=C4=D7=E9=BC=FE=BB=F9=B1=BE=BE=CD=BD=E9=C9=DC=BD=E1=CA=F8=
=C1=CB=A1=A3</span></p><br></div><div style=3D"color:gray;font-si=
ze:1.063rem;text-align:justify"><small>=C0=B4=D4=B4=A3=BA&nbsp;<a=
 href=3D"https://mp.weixin.qq.com/s?__biz=3DMzU3MzgwNTU2Mg=3D=3D&=
amp;mid=3D2247483759&amp;idx=3D3&amp;sn=3Decff6f95c8ee2d1f9be7163=
5e151b8a9&amp;chksm=3Dfd3d47faca4aceec31a27f005d239f41c3d3d23a7f3=
57b54867d9c082c6f58dca3237e98a810&amp;scene=3D21#wechat_redirect"=
>https://mp.weixin.qq.com/s?__biz=3DMzU3MzgwNTU2Mg=3D=3D&amp;mid=3D=
2247483759&amp;idx=3D3&amp;sn=3Decff6f95c8ee2d1f9be71635e151b8a9&=
amp;chksm=3Dfd3d47faca4aceec31a27f005d239f41c3d3d23a7f357b54867d9=
c082c6f58dca3237e98a810&amp;scene=3D21#wechat_redirect</a></small=
></div></body></html>=0A=0A=0A=0A=0A=0A=0A=0A

------=_Next_Part_0000480328.441--

------=_Next_Part_0001440984.988
Content-Type: image/jpeg;
	name="640_18.jpg"
Content-Transfer-Encoding: base64
Content-ID: <640_18.jpg>
Content-Location: 640_18.jpg

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

------=_Next_Part_0001440984.988--

